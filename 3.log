/mo-service -cfg /tmp/tmp.gXh9Vhr5eZ -debug-http=:6060
gc 1 @0.005s 2%: 0.009+0.71+0.003 ms clock, 0.075+0.069/1.0/1.2+0.025 ms cpu, 3->4->2 MB, 4 MB goal, 0 MB stacks, 0 MB globals, 8 P
gc 2 @0.010s 2%: 0.009+0.99+0.002 ms clock, 0.078+0.034/1.1/2.1+0.023 ms cpu, 4->5->4 MB, 5 MB goal, 0 MB stacks, 0 MB globals, 8 P
gc 3 @0.013s 4%: 0.009+0.77+0.096 ms clock, 0.072+0.38/1.0/2.2+0.77 ms cpu, 7->13->13 MB, 8 MB goal, 0 MB stacks, 0 MB globals, 8 P
gc 4 @0.015s 5%: 0.010+1.6+0.031 ms clock, 0.082+0.022/2.7/4.6+0.25 ms cpu, 23->29->28 MB, 27 MB goal, 0 MB stacks, 0 MB globals, 8 P
{"level":"INFO","time":"2024/04/17 10:33:24.131607 +0000","caller":"logutil/internal.go:37","msg":"MO logger init, level=info, log file=, stackLevel=panic"}
{"level":"INFO","time":"2024/04/17 10:33:24.131828 +0000","name":"cn-service.query-client.query-client.query-client","caller":"morpc/client.go:365","msg":"gc idle backends task started","uuid":"36333763-6132-3632-3864-633339323534"}
{"level":"INFO","time":"2024/04/17 10:33:24.131889 +0000","name":"cn-service.query-client.query-client.query-client","caller":"morpc/client.go:365","msg":"gc idle backends task started","uuid":"36333763-6132-3632-3864-633339323534"}
{"level":"INFO","time":"2024/04/17 10:33:24.131883 +0000","name":"cn-service.query-client.query-client.query-client","caller":"morpc/client.go:365","msg":"gc idle backends task started","uuid":"36333763-6132-3632-3864-633339323534"}
{"level":"INFO","time":"2024/04/17 10:33:24.132991 +0000","caller":"fileservice/local_fs.go:139","msg":"fileservice: memory cache initialized","fs-name":"LOCAL","config":{"MemoryCapacity":536870912,"DiskPath":"/var/lib/matrixone/data/local-cache","DiskCapacity":8589934592,"DiskMinEvictInterval":"7m0s","DiskEvictTarget":0.8,"RemoteCacheEnabled":false,"RPC":{"MaxConnections":1,"MaxIdleDuration":"1m0s","SendQueueSize":10240,"BusyQueueSize":7680,"WriteBufferSize":1024,"ReadBufferSize":1024,"MaxMessageSize":104857600,"PayloadCopyBufferSize":16384,"EnableCompress":false,"ServerWorkers":100,"ServerBufferQueueSize":100000,"BackendOptions":null,"ClientOptions":null,"CodecOptions":null}}}
{"level":"INFO","time":"2024/04/17 10:33:25.702251 +0000","caller":"fileservice/aws_sdk_v2.go:229","msg":"new object storage","sdk":"aws v2","arguments":"{\"Name\":\"SHARED\",\"KeyPrefix\":\"zy/data\",\"SharedConfigProfile\":\"\",\"NoDefaultCredentials\":false,\"NoBucketValidation\":false,\"Bucket\":\"mo-checkin-gz-1308875761\",\"Endpoint\":\"https://cos.ap-guangzhou.myqcloud.com\",\"IsMinio\":false,\"Region\":\"\",\"CertFiles\":null}"}
{"level":"INFO","time":"2024/04/17 10:33:25.735633 +0000","caller":"fileservice/s3_fs.go:138","msg":"fileservice: memory cache initialized","fs-name":"SHARED","capacity":1073741824}
{"level":"INFO","time":"2024/04/17 10:33:25.739372 +0000","caller":"fileservice/s3_fs.go:156","msg":"fileservice: disk cache initialized","fs-name":"SHARED","config":{"MemoryCapacity":1073741824,"DiskPath":"/var/lib/matrixone/disk-cache","DiskCapacity":107374182400,"DiskMinEvictInterval":"7m0s","DiskEvictTarget":0.8,"RemoteCacheEnabled":false,"RPC":{"MaxConnections":1,"MaxIdleDuration":"1m0s","SendQueueSize":10240,"BusyQueueSize":7680,"WriteBufferSize":1024,"ReadBufferSize":1024,"MaxMessageSize":104857600,"PayloadCopyBufferSize":16384,"EnableCompress":false,"ServerWorkers":100,"ServerBufferQueueSize":100000,"BackendOptions":null,"ClientOptions":null,"CodecOptions":null}}}
gc 5 @1.626s 0%: 0.020+2.6+0.002 ms clock, 0.16+0.14/5.1/10+0.021 ms cpu, 49->55->50 MB, 57 MB goal, 0 MB stacks, 0 MB globals, 8 P
{"level":"INFO","time":"2024/04/17 10:33:25.964369 +0000","caller":"fileservice/aws_sdk_v2.go:229","msg":"new object storage","sdk":"aws v2","arguments":"{\"Name\":\"ETL\",\"KeyPrefix\":\"zy/etl\",\"SharedConfigProfile\":\"\",\"NoDefaultCredentials\":false,\"NoBucketValidation\":false,\"Bucket\":\"mo-checkin-gz-1308875761\",\"Endpoint\":\"https://cos.ap-guangzhou.myqcloud.com\",\"IsMinio\":false,\"Region\":\"\",\"CertFiles\":null}"}
{"level":"INFO","time":"2024/04/17 10:33:25.985879 +0000","caller":"fileservice/s3_fs.go:156","msg":"fileservice: disk cache initialized","fs-name":"ETL","config":{"MemoryCapacity":1,"DiskPath":"/var/lib/matrixone/data/etl-cache","DiskCapacity":8589934592,"DiskMinEvictInterval":"7m0s","DiskEvictTarget":0.8,"RemoteCacheEnabled":false,"RPC":{"MaxConnections":1,"MaxIdleDuration":"1m0s","SendQueueSize":10240,"BusyQueueSize":7680,"WriteBufferSize":1024,"ReadBufferSize":1024,"MaxMessageSize":104857600,"PayloadCopyBufferSize":16384,"EnableCompress":false,"ServerWorkers":100,"ServerBufferQueueSize":100000,"BackendOptions":null,"ClientOptions":null,"CodecOptions":null}}}
{"level":"INFO","time":"2024/04/17 10:33:25.986445 +0000","caller":"motrace/trace.go:153","msg":"init GlobalBatchProcessor"}
{"level":"INFO","time":"2024/04/17 10:33:25.986482 +0000","name":"cn-service.MOCollector","caller":"export/batch_processor.go:439","msg":"MOCollector Start","uuid":"36333763-6132-3632-3864-633339323534","MODiscardable":true}
{"level":"INFO","time":"2024/04/17 10:33:25.986532 +0000","caller":"motrace/trace.go:158","msg":"init trace span processor"}
{"level":"INFO","time":"2024/04/17 10:33:25.987071 +0000","caller":"mometric/metric.go:147","msg":"cross service metrics task started"}
gc 6 @1.875s 0%: 0.072+3.6+0.002 ms clock, 0.57+0.40/7.0/19+0.020 ms cpu, 85->86->84 MB, 100 MB goal, 0 MB stacks, 0 MB globals, 8 P
{"level":"INFO","time":"2024/04/17 10:33:25.993089 +0000","name":"logservice-client","caller":"morpc/client.go:365","msg":"gc idle backends task started"}
{"level":"INFO","time":"2024/04/17 10:33:25.993435 +0000","caller":"logservice/hakeeper_client.go:626","msg":"isHAKeeper: true, err: <nil>"}
{"level":"INFO","time":"2024/04/17 10:33:25.996386 +0000","caller":"mo-service/launch.go:278","msg":"shard ready"}
{"level":"ERROR","time":"2024/04/17 10:33:25.996436 +0000","name":"hakeeper-client-backend","caller":"morpc/backend.go:572","msg":"read from backend failed","remote":"mo-checkin-regression-log-2.mo-checkin-regression-log-headless.zy.svc:32001","backend-id":"018eeb9e-54e2-761f-a32f-fbb0f3bc55e0","error":"illegal state"}
{"level":"ERROR","time":"2024/04/17 10:33:25.996480 +0000","name":"hakeeper-client-backend","caller":"morpc/backend.go:576","msg":"read loop stopped","remote":"mo-checkin-regression-log-2.mo-checkin-regression-log-headless.zy.svc:32001","backend-id":"018eeb9e-54e2-761f-a32f-fbb0f3bc55e0"}
{"level":"ERROR","time":"2024/04/17 10:33:26.001580 +0000","name":"hakeeper-client-backend","caller":"v2@v2.0.0-20231122095211-6a25dc9130ca/session.go:515","msg":"close conneciton failed","remote":"mo-checkin-regression-log-2.mo-checkin-regression-log-headless.zy.svc:32001","backend-id":"018eeb9e-54e2-761f-a32f-fbb0f3bc55e0","session-id":0,"error":"close tcp4 10.158.4.118:58288->10.158.4.107:32001: use of closed network connection"}
{"level":"ERROR","time":"2024/04/17 10:33:26.006734 +0000","name":"logservice-client","caller":"morpc/client.go:374","msg":"gc idle backends task stopped"}
{"level":"ERROR","time":"2024/04/17 10:33:26.006725 +0000","name":"logservice-client","caller":"morpc/client.go:397","msg":"gc inactive backends task stopped"}
{"level":"INFO","time":"2024/04/17 10:33:26.014361 +0000","name":"logservice-client","caller":"morpc/client.go:365","msg":"gc idle backends task started"}
{"level":"INFO","time":"2024/04/17 10:33:26.014716 +0000","caller":"logservice/hakeeper_client.go:626","msg":"isHAKeeper: true, err: <nil>"}
{"level":"INFO","time":"2024/04/17 10:33:26.014921 +0000","name":"cn-service.lockservice","caller":"lockservice/deadlock.go:119","msg":"dead lock checker","uuid":"36333763-6132-3632-3864-633339323534"}
{"level":"INFO","time":"2024/04/17 10:33:26.014955 +0000","name":"cn-service.lockservice","caller":"lockservice/deadlock.go:119","msg":"dead lock checker","uuid":"36333763-6132-3632-3864-633339323534"}
{"level":"INFO","time":"2024/04/17 10:33:26.014955 +0000","name":"cn-service.lockservice","caller":"lockservice/deadlock.go:119","msg":"dead lock checker","uuid":"36333763-6132-3632-3864-633339323534"}
{"level":"INFO","time":"2024/04/17 10:33:26.014968 +0000","name":"cn-service.lockservice","caller":"lockservice/deadlock.go:119","msg":"dead lock checker","uuid":"36333763-6132-3632-3864-633339323534"}
{"level":"INFO","time":"2024/04/17 10:33:26.014993 +0000","name":"cn-service.lockservice.lock-client.lock-client","caller":"morpc/client.go:365","msg":"gc idle backends task started","uuid":"36333763-6132-3632-3864-633339323534"}
{"level":"INFO","time":"2024/04/17 10:33:26.015139 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:115","msg":"lock service start successfully","uuid":"36333763-6132-3632-3864-633339323534","serviceID":"171335000601474576236333763-6132-3632-3864-633339323534"}
{"level":"INFO","time":"2024/04/17 10:33:26.015166 +0000","name":"cn-service.lockservice","caller":"lockservice/lock_table_keeper.go:72","msg":"keep lock table bind task","uuid":"36333763-6132-3632-3864-633339323534"}
{"level":"INFO","time":"2024/04/17 10:33:26.015211 +0000","name":"cn-service.lockservice","caller":"lockservice/lock_table_keeper.go:89","msg":"keep remote locks task","uuid":"36333763-6132-3632-3864-633339323534"}
{"level":"INFO","time":"2024/04/17 10:33:26.015319 +0000","name":"cn-service","caller":"logutil/action.go:49","msg":"start to run async task","uuid":"36333763-6132-3632-3864-633339323534","action":"run-async-task","async-task":"cnservice/heartbeat-task"}
{"level":"ERROR","time":"2024/04/17 10:33:26.015506 +0000","caller":"fileservice/local_fs.go:441","msg":"error: file cnservice/36333763-6132-3632-3864-633339323534 is not found"}
{"level":"INFO","time":"2024/04/17 10:33:26.015500 +0000","name":"cn-service.query-client.query-client.query-client","caller":"morpc/client.go:365","msg":"gc idle backends task started","uuid":"36333763-6132-3632-3864-633339323534"}
{"level":"INFO","time":"2024/04/17 10:33:26.020264 +0000","caller":"cnservice/server.go:437","msg":"Shutdown The Server With Ctrl+C | Ctrl+\\."}
{"level":"INFO","time":"2024/04/17 10:33:26.020295 +0000","caller":"cnservice/server.go:444","msg":"Initialize the engine ..."}
{"level":"INFO","time":"2024/04/17 10:33:26.020403 +0000","name":"cn-service.txn-client.txn-client","caller":"morpc/client.go:365","msg":"gc idle backends task started","uuid":"36333763-6132-3632-3864-633339323534"}
{"level":"INFO","time":"2024/04/17 10:33:26.024977 +0000","name":"cn-log-tail-client.logtail-client","caller":"morpc/client.go:365","msg":"gc idle backends task started"}
{"level":"INFO","time":"2024/04/17 10:33:26.026360 +0000","name":"cn-service","caller":"bootstrap/service.go:308","msg":"start to check bootstrap state","uuid":"36333763-6132-3632-3864-633339323534"}
{"level":"WARN","time":"2024/04/17 10:33:26.026403 +0000","name":"cn-service.txn","caller":"client/client.go:457","msg":"txn client is in pause state, wait for it to be ready","uuid":"36333763-6132-3632-3864-633339323534","txn ID":"018eeb9e550a71a29ee6ce1bb33bdb36"}
{"level":"INFO","time":"2024/04/17 10:33:26.026557 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 1, tbl: 1] succeed"}
{"level":"INFO","time":"2024/04/17 10:33:26.027887 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 1, tbl: 2] succeed"}
{"level":"INFO","time":"2024/04/17 10:33:26.029304 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 1, tbl: 3] succeed"}
{"level":"INFO","time":"2024/04/17 10:33:26.032467 +0000","name":"cn-service.txn","caller":"client/client.go:555","msg":"txn client status changed to normal","uuid":"36333763-6132-3632-3864-633339323534"}
{"level":"WARN","time":"2024/04/17 10:33:26.032503 +0000","name":"cn-service.txn","caller":"client/client.go:462","msg":"txn client is in ready state","uuid":"36333763-6132-3632-3864-633339323534","txn ID":"018eeb9e550a71a29ee6ce1bb33bdb36"}
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_database[datname account_id],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.026360 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"mo_indexes\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.028161 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"2335141337287054343-171335000601474576236333763-6132-3632-3864-633339323534-1"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.035071 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"mo_table_partitions\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.035468 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"8416617798348526275-171335000601474576236333763-6132-3632-3864-633339323534-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.041284 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"272385-171335000601474576236333763-6132-3632-3864-633339323534-1"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.043840 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"mo_increment_columns\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.044230 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"4557455885355732384-171335000601474576236333763-6132-3632-3864-633339323534-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.048786 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"mo_foreign_keys\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.049127 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"2667036460489847109-171335000601474576236333763-6132-3632-3864-633339323534-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free

Scope 1 (Magic: CreateDatabase, Receiver: nil): []
{"level":"INFO","time":"2024/04/17 10:33:27.052770 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"13035158432530928357-171335000601474576236333763-6132-3632-3864-633339323534-1"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.056286 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"sys_async_task\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.056605 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"6470569162915880109-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.060039 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"__mo_index_unique_018eeb9e-5910-70d5-8c07-fe897e0b4df4\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.060130 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272390,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007054119141-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.060795 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"272387-171335000601474576236333763-6132-3632-3864-633339323534-1"}
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.066557 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272390,"txn":"018eeb9e58ef77ac911064a79e78c3db"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.066739 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"sys_cron_task\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.067054 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"10233449171658289179-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.069414 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"__mo_index_unique_018eeb9e-591a-7fa5-a882-6853183bd21e\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.069497 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272392,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007063262766-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.071152 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272392,"txn":"018eeb9e58ef77ac911064a79e78c3db"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.071343 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"sys_daemon_task\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.071655 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"9164073078654419997-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.074092 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272394,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007067297338-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Free
len(s.RemoteReceivRegInfos)  0 0
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.075810 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272394,"txn":"018eeb9e58ef77ac911064a79e78c3db"}

Scope 1 (Magic: CreateIndex, Receiver: nil): []

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.076081 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.076441 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"3644656567039083528-171335000601474576236333763-6132-3632-3864-633339323534-1"}
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Remote, Receiver: []): [projection -> projection -> pre insert -> lockop -> insert]
DataSource: mo_task.sys_async_task[task_id task_status],
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free

Scope 1 (Magic: CreateIndex, Receiver: nil): []

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.081141 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.081456 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"1924244166312410369-171335000601474576236333763-6132-3632-3864-633339323534-1"}
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Remote, Receiver: []): [projection -> projection -> pre insert -> lockop -> insert]
DataSource: mo_task.sys_async_task[task_id task_runner],
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free

Scope 1 (Magic: CreateIndex, Receiver: nil): []

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.085065 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.085403 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"11827890369213620713-171335000601474576236333763-6132-3632-3864-633339323534-1"}
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Remote, Receiver: []): [projection -> projection -> pre insert -> lockop -> insert]
DataSource: mo_task.sys_async_task[task_id task_metadata_executor],
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free

Scope 1 (Magic: CreateIndex, Receiver: nil): []

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.088998 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.089306 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"7317641219874853664-171335000601474576236333763-6132-3632-3864-633339323534-1"}
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Remote, Receiver: []): [projection -> projection -> pre insert -> lockop -> insert]
DataSource: mo_task.sys_async_task[task_id task_epoch],
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free

Scope 1 (Magic: CreateIndex, Receiver: nil): []

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.092870 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"__mo_index_secondary_018eeb9e-5934-73af-860e-25aba1574a94\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.093164 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"2893212563733706867-171335000601474576236333763-6132-3632-3864-633339323534-1"}
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Remote, Receiver: []): [projection -> projection -> pre insert -> lockop -> insert]
DataSource: mo_task.sys_daemon_task[task_id account_id],
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free

Scope 1 (Magic: CreateIndex, Receiver: nil): []

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.096688 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"__mo_index_secondary_018eeb9e-5938-7da8-b749-ad5b204c5b61\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.097033 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"9390720540050125622-171335000601474576236333763-6132-3632-3864-633339323534-1"}
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Remote, Receiver: []): [projection -> projection -> pre insert -> lockop -> insert]
DataSource: mo_task.sys_daemon_task[task_id last_heartbeat],
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.100752 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"mo_version\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.101053 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"6816778640017238340-171335000601474576236333763-6132-3632-3864-633339323534-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.104345 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"mo_upgrade\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.104639 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"9967840655735039553-171335000601474576236333763-6132-3632-3864-633339323534-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.108823 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272402,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007101303710-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.110324 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272402,"txn":"018eeb9e58ef77ac911064a79e78c3db"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.110482 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"mo_upgrade_tenant\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.110787 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"6868146489175579746-171335000601474576236333763-6132-3632-3864-633339323534-1"}
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.116013 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272403,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007106031990-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.117712 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272403,"txn":"018eeb9e58ef77ac911064a79e78c3db"}
{"level":"ERROR","time":"2024/04/17 10:33:27.117971 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272389 272393}"}
cnList Length  1
blkNum  1
Node_TableScan  1
{"level":"INFO","time":"2024/04/17 10:33:27.118471 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"15928617416477864273-171335000601474576236333763-6132-3632-3864-633339323534-1"}
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_task.__mo_index_unique_018eeb9e-591a-7fa5-a882-6853183bd21e[__mo_index_idx_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert uk -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
{"level":"INFO","time":"2024/04/17 10:33:27.122148 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"272392-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.125762 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"272393-171335000601474576236333763-6132-3632-3864-633339323534-1"}

Scope 1 (Magic: CreateDatabase, Receiver: nil): []
{"level":"INFO","time":"2024/04/17 10:33:27.128405 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"12214350414683459481-171335000601474576236333763-6132-3632-3864-633339323534-1"}
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_foreign_keys[constraint_name db_name table_name column_name refer_db_name refer_table_name refer_column_name on_delete on_update],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.132633 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"trace_event_txn\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.133042 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"6567740894754021016-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.135362 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272405,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007129766796-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.137078 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272405,"txn":"018eeb9e58ef77ac911064a79e78c3db"}
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_foreign_keys[constraint_name db_name table_name column_name refer_db_name refer_table_name refer_column_name on_delete on_update],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.137867 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"trace_event_data\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.138153 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"5648696927424022664-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.141641 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272406,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007133249726-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.143510 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272406,"txn":"018eeb9e58ef77ac911064a79e78c3db"}
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_foreign_keys[constraint_name db_name table_name column_name refer_db_name refer_table_name refer_column_name on_delete on_update],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.144212 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"trace_table_filters\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.144515 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"5314919644441714795-171335000601474576236333763-6132-3632-3864-633339323534-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.148705 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272407,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007139557252-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.150457 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272407,"txn":"018eeb9e58ef77ac911064a79e78c3db"}
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_foreign_keys[constraint_name db_name table_name column_name refer_db_name refer_table_name refer_column_name on_delete on_update],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.151135 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"trace_txn_filters\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.151450 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"6679622968029433563-171335000601474576236333763-6132-3632-3864-633339323534-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.154548 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272408,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007148034229-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.156364 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272408,"txn":"018eeb9e58ef77ac911064a79e78c3db"}
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_foreign_keys[constraint_name db_name table_name column_name refer_db_name refer_table_name refer_column_name on_delete on_update],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.157147 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"trace_statement_filters\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.157443 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"12683400741936851437-171335000601474576236333763-6132-3632-3864-633339323534-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.160390 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272409,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007153882545-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
len(s.RemoteReceivRegInfos)  0 0
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.162008 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272409,"txn":"018eeb9e58ef77ac911064a79e78c3db"}
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_foreign_keys[constraint_name db_name table_name column_name refer_db_name refer_table_name refer_column_name on_delete on_update],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.162754 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"trace_event_error\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.163093 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"7417916594169307544-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.165401 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272410,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007159837743-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.167143 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272410,"txn":"018eeb9e58ef77ac911064a79e78c3db"}
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_foreign_keys[constraint_name db_name table_name column_name refer_db_name refer_table_name refer_column_name on_delete on_update],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.167920 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"trace_statement\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.168230 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"4553893309259849758-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.171611 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272411,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007163318307-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.173394 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272411,"txn":"018eeb9e58ef77ac911064a79e78c3db"}
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_foreign_keys[constraint_name db_name table_name column_name refer_db_name refer_table_name refer_column_name on_delete on_update],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.174035 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"trace_event_txn_action\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.174305 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"17014112787850410594-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.177817 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272412,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007169532559-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.179489 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272412,"txn":"018eeb9e58ef77ac911064a79e78c3db"}
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_foreign_keys[constraint_name db_name table_name column_name refer_db_name refer_table_name refer_column_name on_delete on_update],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.180246 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"trace_features\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.180548 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"5902249155091697959-171335000601474576236333763-6132-3632-3864-633339323534-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"ERROR","time":"2024/04/17 10:33:27.184693 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272404 272413}"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_debug.trace_features[name],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.185131 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"272413-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.187534 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272404 272413}"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_debug.trace_features[name],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"ERROR","time":"2024/04/17 10:33:27.187991 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272404 272413}"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_debug.trace_features[name],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"ERROR","time":"2024/04/17 10:33:27.188468 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272404 272413}"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_debug.trace_features[name],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"ERROR","time":"2024/04/17 10:33:27.188916 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272404 272413}"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_debug.trace_features[name],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_version[version version_offset __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.190008 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"272401-171335000601474576236333763-6132-3632-3864-633339323534-1"}

Scope 1 (Magic: CreateDatabase, Receiver: nil): []
{"level":"INFO","time":"2024/04/17 10:33:27.193674 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"1429546312312956849-171335000601474576236333763-6132-3632-3864-633339323534-1"}
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_database[datname account_id],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_tables[relname reldatabase relkind account_id],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.198225 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"mo_user\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.198555 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"3055677746828254531-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.202114 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"__mo_index_unique_018eeb9e-599e-7f6e-b46e-536a3b4e008f\" does not exist"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.203032 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272415,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007196100969-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.204804 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272415,"txn":"018eeb9e58ef77ac911064a79e78c3db"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.205010 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"mo_account\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.205317 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"11881638436909088731-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.207621 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"__mo_index_unique_018eeb9e-59a4-7c59-bcf6-17cf56207a8b\" does not exist"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.208484 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272417,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007202115056-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
dispatch Prepare  2 0
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.211928 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272417,"txn":"018eeb9e58ef77ac911064a79e78c3db"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.212089 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"mo_role\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.212405 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"13767424733128638564-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.215742 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"__mo_index_unique_018eeb9e-59ac-7a3a-9836-7fd7441e98dc\" does not exist"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.216615 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272419,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007209916298-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.218496 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272419,"txn":"018eeb9e58ef77ac911064a79e78c3db"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.218668 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"mo_user_grant\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.219043 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"1965517873389730590-171335000601474576236333763-6132-3632-3864-633339323534-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.222243 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"mo_role_grant\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.222547 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"5662466688963769652-171335000601474576236333763-6132-3632-3864-633339323534-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.227379 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"mo_role_privs\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.227663 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"15071603446190330233-171335000601474576236333763-6132-3632-3864-633339323534-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.231029 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"mo_user_defined_function\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.231331 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"8050312895568646351-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.233833 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"__mo_index_unique_018eeb9e-59be-71c2-9ae4-88000cbf249f\" does not exist"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.234802 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272424,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007227996711-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.236510 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272424,"txn":"018eeb9e58ef77ac911064a79e78c3db"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.236663 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"mo_mysql_compatibility_mode\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.236981 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"7841570287010960367-171335000601474576236333763-6132-3632-3864-633339323534-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.240140 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272426,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007233800344-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.241913 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272426,"txn":"018eeb9e58ef77ac911064a79e78c3db"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.242086 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"mo_snapshots\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.242366 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"6421439541748661787-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.245733 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"__mo_index_unique_018eeb9e-59ca-775b-967a-6198a63d8d50\" does not exist"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.246796 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"mo_pubs\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.247084 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"5693389100741196493-171335000601474576236333763-6132-3632-3864-633339323534-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.250553 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"mo_stored_procedure\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.250854 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"17659553495752704417-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.255412 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"__mo_index_unique_018eeb9e-59d2-7617-a154-11d7076e9aa7\" does not exist"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.256283 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272430,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007247418063-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.258016 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272430,"txn":"018eeb9e58ef77ac911064a79e78c3db"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.258189 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"mo_stages\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.258492 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"81864792419687503-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.261859 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"__mo_index_unique_018eeb9e-59da-7051-9437-8be2571f6bd0\" does not exist"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.263624 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272432,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007255467460-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare
Table Scan Free

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
{"level":"INFO","time":"2024/04/17 10:33:27.266699 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272432,"txn":"018eeb9e58ef77ac911064a79e78c3db"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.267387 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"mo_sessions\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.267702 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"17162504610971768626-171335000601474576236333763-6132-3632-3864-633339323534-1"}
gc 7 @3.151s 0%: 0.027+6.1+0.002 ms clock, 0.22+0.12/12/22+0.021 ms cpu, 145->146->114 MB, 170 MB goal, 0 MB stacks, 0 MB globals, 8 P

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.270215 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"mo_configurations\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.270508 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"12782905202037918717-171335000601474576236333763-6132-3632-3864-633339323534-1"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.274034 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"mo_locks\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.274334 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"10735374460159106905-171335000601474576236333763-6132-3632-3864-633339323534-1"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.277907 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"mo_variables\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.278221 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"9242458464043650222-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.281666 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272437,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007275650007-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.283526 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272437,"txn":"018eeb9e58ef77ac911064a79e78c3db"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.283803 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"mo_transactions\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.284134 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"3098377550136061714-171335000601474576236333763-6132-3632-3864-633339323534-1"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.287728 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"mo_cache\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.288042 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"1720368786678244576-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.291691 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {1 272418}"}
cnList Length  1
blkNum  2
Node_TableScan  1
Node_TableScan  1
{"level":"INFO","time":"2024/04/17 10:33:27.292291 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"12210362200037563148-171335000601474576236333763-6132-3632-3864-633339323534-1"}
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  3 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.__mo_index_unique_018eeb9e-59a4-7c59-bcf6-17cf56207a8b[__mo_index_idx_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_account[account_id],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert uk -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Prepare
Table Scan Free
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.296083 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"272417-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.299670 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"272418-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.302098 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {1 272420}"}
cnList Length  1
blkNum  2
Node_TableScan  1
Node_TableScan  1
{"level":"INFO","time":"2024/04/17 10:33:27.302569 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"14654272238225080006-171335000601474576236333763-6132-3632-3864-633339323534-1"}
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  3 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.__mo_index_unique_018eeb9e-59ac-7a3a-9836-7fd7441e98dc[__mo_index_idx_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role[role_id],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert uk -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.306172 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"272419-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.309716 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"272420-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.312319 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {1 272420}"}
cnList Length  1
blkNum  2
Node_TableScan  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  3 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role[role_id],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.__mo_index_unique_018eeb9e-59ac-7a3a-9836-7fd7441e98dc[__mo_index_idx_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert uk -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Free
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
{"level":"ERROR","time":"2024/04/17 10:33:27.313282 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {1 272416}"}
cnList Length  1
blkNum  2
Node_TableScan  1
Node_TableScan  1
{"level":"INFO","time":"2024/04/17 10:33:27.313760 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"16126018040296012174-171335000601474576236333763-6132-3632-3864-633339323534-1"}
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  3 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.__mo_index_unique_018eeb9e-599e-7f6e-b46e-536a3b4e008f[__mo_index_idx_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_user[user_id],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert uk -> lockop -> connect to MergeReceiver 1]
}
Table Scan Free
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.316334 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"272415-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.319888 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"272416-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.322398 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {1 272416}"}
cnList Length  1
blkNum  2
Node_TableScan  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  3 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.__mo_index_unique_018eeb9e-599e-7f6e-b46e-536a3b4e008f[__mo_index_idx_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert uk -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_user[user_id],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.323737 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"272423-171335000601474576236333763-6132-3632-3864-633339323534-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_user_grant[role_id user_id __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.346997 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"272421-171335000601474576236333763-6132-3632-3864-633339323534-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_user_grant[role_id user_id __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_user_grant[role_id user_id __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_user_grant[role_id user_id __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
{"level":"INFO","time":"2024/04/17 10:33:27.351225 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"272426-171335000601474576236333763-6132-3632-3864-633339323534-1"}
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> insert]
DataSource: [],

Scope 1 (Magic: CreateDatabase, Receiver: nil): []
{"level":"INFO","time":"2024/04/17 10:33:27.431034 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"11252198315851844014-171335000601474576236333763-6132-3632-3864-633339323534-1"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.433681 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"user\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.434071 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"16257607599902505819-171335000601474576236333763-6132-3632-3864-633339323534-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.439182 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"db\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.439525 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"14772569255141302079-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.441992 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"__mo_index_secondary_018eeb9e-5a8f-778b-b74e-f68463472b30\" does not exist"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.443277 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"procs_priv\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.443599 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"6558950444890655467-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.445939 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"__mo_index_secondary_018eeb9e-5a93-7124-a840-46f0e7708b2b\" does not exist"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.447184 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"columns_priv\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.447504 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"3883141640527811529-171335000601474576236333763-6132-3632-3864-633339323534-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.450986 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"tables_priv\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.451300 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"3454461711835926291-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.453669 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"__mo_index_secondary_018eeb9e-5a9a-78d5-9bf7-a918fe91616c\" does not exist"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.455028 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"role_edges\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.455330 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"2196745434121042179-171335000601474576236333763-6132-3632-3864-633339323534-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_indexes[id column_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free

Scope 1 (Magic: CreateDatabase, Receiver: nil): []

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.458898 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"key_column_usage\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.459208 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"8349792358815059177-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.461552 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272450,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007455592219-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
dispatch Prepare  2 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.463598 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272450,"txn":"018eeb9e58ef77ac911064a79e78c3db"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.464637 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"columns\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.464961 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"8455792545977853160-171335000601474576236333763-6132-3632-3864-633339323534-1"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.467727 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"profiling\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.468037 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"11377258984736036978-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.471430 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272452,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007465270744-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.473530 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272452,"txn":"018eeb9e58ef77ac911064a79e78c3db"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.473886 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"processlist\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.474250 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"10730481119686851632-171335000601474576236333763-6132-3632-3864-633339323534-1"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.477850 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"user_privileges\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.478142 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"7559060494148337775-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.481577 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272454,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007475533484-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.483762 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272454,"txn":"018eeb9e58ef77ac911064a79e78c3db"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.484259 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"schemata\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.484585 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"3913900444169054018-171335000601474576236333763-6132-3632-3864-633339323534-1"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.488020 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"character_sets\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.488307 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"6621917371076353804-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.491719 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272456,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007485901471-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.493856 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272456,"txn":"018eeb9e58ef77ac911064a79e78c3db"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.494097 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"triggers\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.494400 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"12964140266130095048-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.497934 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272457,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007491829507-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.500052 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272457,"txn":"018eeb9e58ef77ac911064a79e78c3db"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.501560 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"tables\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.501865 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"10984980051992817271-171335000601474576236333763-6132-3632-3864-633339323534-1"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.505489 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"partitions\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.505814 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"13634678573022607167-171335000601474576236333763-6132-3632-3864-633339323534-1"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.508785 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"views\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.509079 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"10030751670401889311-171335000601474576236333763-6132-3632-3864-633339323534-1"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.512236 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"statistics\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.512541 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"7650391230497958084-171335000601474576236333763-6132-3632-3864-633339323534-1"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.516354 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"referential_constraints\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.516639 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"9471454205803418686-171335000601474576236333763-6132-3632-3864-633339323534-1"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.520397 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"engines\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.520741 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"10325706659696800699-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.524090 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272463,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007518076365-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.526173 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272463,"txn":"018eeb9e58ef77ac911064a79e78c3db"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.526446 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"routines\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.526755 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"4644201947762160535-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.530403 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272464,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007522051406-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.532725 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272464,"txn":"018eeb9e58ef77ac911064a79e78c3db"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.532949 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"parameters\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.533233 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"5948428241884829318-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.535576 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272465,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007528121316-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.537583 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272465,"txn":"018eeb9e58ef77ac911064a79e78c3db"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.537750 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"keywords\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.538064 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"1529733256814707964-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.541468 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272466,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007535614853-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.543762 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272466,"txn":"018eeb9e58ef77ac911064a79e78c3db"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.544001 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"schema_privileges\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.544328 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"7279519719160270749-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.547657 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272467,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007541595588-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.549894 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272467,"txn":"018eeb9e58ef77ac911064a79e78c3db"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.550119 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"table_privileges\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.550401 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"13245001359583459591-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.553836 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272468,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007547787467-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.555887 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272468,"txn":"018eeb9e58ef77ac911064a79e78c3db"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.556165 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"column_privileges\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.556477 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"13257682273536834648-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.559999 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272469,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007553940976-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.562243 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272469,"txn":"018eeb9e58ef77ac911064a79e78c3db"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.562496 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"collations\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.562816 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"7800280365977779017-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.565173 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272470,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007560044330-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.567435 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272470,"txn":"018eeb9e58ef77ac911064a79e78c3db"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.567652 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"table_constraints\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.567959 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"1782076549621913041-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.571334 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272471,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007565228503-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.573541 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272471,"txn":"018eeb9e58ef77ac911064a79e78c3db"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.573834 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"events\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.574160 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"3728135238414625079-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.577734 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272472,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007571392410-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.579900 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272472,"txn":"018eeb9e58ef77ac911064a79e78c3db"}
cnList Length  1
blkNum  0

Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> insert]
DataSource: [],

Scope 1 (Magic: CreateDatabase, Receiver: nil): []
{"level":"INFO","time":"2024/04/17 10:33:27.581831 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"17946649166864976837-171335000601474576236333763-6132-3632-3864-633339323534-1"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.584341 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"metric\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.584652 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"16775188172115873373-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.588042 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272474,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007582084904-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.590246 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272474,"txn":"018eeb9e58ef77ac911064a79e78c3db"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.590526 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"sql_statement_cu\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.590830 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"2410261466237513817-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.593208 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272475,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007588131844-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.595540 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272475,"txn":"018eeb9e58ef77ac911064a79e78c3db"}
{"level":"ERROR","time":"2024/04/17 10:33:27.595777 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}
{"level":"ERROR","time":"2024/04/17 10:33:27.595943 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.596065 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"sql_statement_total\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.596360 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"9813000392225551218-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.600041 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}
{"level":"ERROR","time":"2024/04/17 10:33:27.600260 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.600423 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"sql_statement_errors\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.600765 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"17383261273631531604-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.604263 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}
{"level":"ERROR","time":"2024/04/17 10:33:27.604427 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.604658 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}
{"level":"ERROR","time":"2024/04/17 10:33:27.604798 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.604904 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"sql_transaction_total\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.605240 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"17648274202372229128-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.607627 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}
{"level":"ERROR","time":"2024/04/17 10:33:27.607788 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.607955 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"sql_transaction_errors\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.608278 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"1188524100608383528-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.611811 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}
{"level":"ERROR","time":"2024/04/17 10:33:27.612018 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.612162 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"sql_statement_duration_total\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.612533 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"10003700840225087063-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.616071 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}
{"level":"ERROR","time":"2024/04/17 10:33:27.616236 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.616355 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"server_connections\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.616656 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"8309044626403639480-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.620219 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}
{"level":"ERROR","time":"2024/04/17 10:33:27.620389 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.620534 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"server_storage_usage\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.620863 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"3315849554007853952-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.625493 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}
{"level":"ERROR","time":"2024/04/17 10:33:27.625689 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.625814 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"process_cpu_percent\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.626122 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"2651326522315812661-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.629693 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}
{"level":"ERROR","time":"2024/04/17 10:33:27.629862 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.629982 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"process_resident_memory_bytes\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.630298 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"6521661203265807074-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.636286 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}
{"level":"ERROR","time":"2024/04/17 10:33:27.636425 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.636558 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"process_open_fds\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.636894 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"881189634582408485-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.639370 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}
{"level":"ERROR","time":"2024/04/17 10:33:27.639545 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.639659 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"process_cpu_seconds_total\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.639990 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"1851229431191812974-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.643453 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}
{"level":"ERROR","time":"2024/04/17 10:33:27.643629 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.643772 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"sys_cpu_seconds_total\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.644067 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"674309062122332931-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.647593 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}
{"level":"ERROR","time":"2024/04/17 10:33:27.647725 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.647836 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"sys_cpu_combined_percent\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.648120 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"6293215398011920628-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.651684 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}
{"level":"ERROR","time":"2024/04/17 10:33:27.651840 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.651983 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"sys_memory_used\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.652302 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"2428848547857093379-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.655927 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}
{"level":"ERROR","time":"2024/04/17 10:33:27.656096 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.656238 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"sys_memory_available\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.656556 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"7649792552703080734-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.660214 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}
{"level":"ERROR","time":"2024/04/17 10:33:27.660384 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.660535 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"sys_disk_read_bytes\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.660866 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"10959909506119836663-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.665497 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}
{"level":"ERROR","time":"2024/04/17 10:33:27.665659 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.665811 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"sys_disk_write_bytes\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.666110 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"16224316305125184473-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.669644 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}
{"level":"ERROR","time":"2024/04/17 10:33:27.669771 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.669880 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"sys_net_recv_bytes\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.670159 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"1151751453729862769-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.673801 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}
{"level":"ERROR","time":"2024/04/17 10:33:27.673953 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.674078 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"sys_net_sent_bytes\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.674378 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"1713226789900196483-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.677979 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}
{"level":"ERROR","time":"2024/04/17 10:33:27.678131 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272473 272474}"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.678239 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"mo_log_message_count\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.678546 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"15505044802235713563-171335000601474576236333763-6132-3632-3864-633339323534-1"}

Scope 1 (Magic: CreateDatabase, Receiver: nil): []
{"level":"INFO","time":"2024/04/17 10:33:27.682382 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"11583644641166248499-171335000601474576236333763-6132-3632-3864-633339323534-1"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.686136 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"statement_info\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.686433 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"4123722773182122388-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.690109 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272498,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007683690678-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.692494 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272498,"txn":"018eeb9e58ef77ac911064a79e78c3db"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.692924 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"rawlog\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.693255 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"8403917406817639794-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.695685 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:89","msg":"create auto increment table","uuid":"36333763-6132-3632-3864-633339323534","table-id":272499,"txn":"018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007690075088-1"}
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name __mo_cpkey_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:27.697916 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"36333763-6132-3632-3864-633339323534","table-id":272499,"txn":"018eeb9e58ef77ac911064a79e78c3db"}
{"level":"ERROR","time":"2024/04/17 10:33:27.698148 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272497 272499}"}
{"level":"ERROR","time":"2024/04/17 10:33:27.698358 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272497 272499}"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.698477 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"log_info\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.698765 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"15612839207714152227-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.703633 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272497 272499}"}
{"level":"ERROR","time":"2024/04/17 10:33:27.703863 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272497 272499}"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.704008 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"error_info\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.704316 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"13763449926032029983-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.707821 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272497 272499}"}
{"level":"ERROR","time":"2024/04/17 10:33:27.708046 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272497 272499}"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.708174 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"span_info\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.708500 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"11325382545385172990-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"ERROR","time":"2024/04/17 10:33:27.712082 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272497 272498}"}
{"level":"ERROR","time":"2024/04/17 10:33:27.712464 +0000","caller":"disttae/stats.go:395","msg":"cannot get table by ID {272497 272498}"}

Scope 1 (Magic: CreateTable, Receiver: nil): []
{"level":"ERROR","time":"2024/04/17 10:33:27.712583 +0000","caller":"disttae/txn_database.go:296","msg":"error: SQL parser error: table \"sql_statement_hotspot\" does not exist"}
{"level":"INFO","time":"2024/04/17 10:33:27.712902 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"14120360456849107291-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:33:27.715340 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[mo_indexes]"}
{"level":"INFO","time":"2024/04/17 10:33:27.715461 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[mo_table_partitions]"}
{"level":"INFO","time":"2024/04/17 10:33:27.715582 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[mo_increment_columns]"}
{"level":"INFO","time":"2024/04/17 10:33:27.715650 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[mo_foreign_keys]"}
{"level":"INFO","time":"2024/04/17 10:33:27.715784 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[sys_async_task]"}
{"level":"INFO","time":"2024/04/17 10:33:27.715871 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[__mo_index_unique_018eeb9e-5910-70d5-8c07-fe897e0b4df4]"}
{"level":"INFO","time":"2024/04/17 10:33:27.715899 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[sys_cron_task]"}
{"level":"INFO","time":"2024/04/17 10:33:27.715957 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[__mo_index_unique_018eeb9e-591a-7fa5-a882-6853183bd21e]"}
{"level":"INFO","time":"2024/04/17 10:33:27.715981 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[sys_daemon_task]"}
{"level":"INFO","time":"2024/04/17 10:33:27.716116 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26]"}
{"level":"INFO","time":"2024/04/17 10:33:27.716162 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb]"}
{"level":"INFO","time":"2024/04/17 10:33:27.716188 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19]"}
{"level":"INFO","time":"2024/04/17 10:33:27.716228 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e]"}
{"level":"INFO","time":"2024/04/17 10:33:27.716262 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[__mo_index_secondary_018eeb9e-5934-73af-860e-25aba1574a94]"}
{"level":"INFO","time":"2024/04/17 10:33:27.716297 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[__mo_index_secondary_018eeb9e-5938-7da8-b749-ad5b204c5b61]"}
{"level":"INFO","time":"2024/04/17 10:33:27.716334 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[mo_version]"}
{"level":"INFO","time":"2024/04/17 10:33:27.716386 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[mo_upgrade]"}
{"level":"INFO","time":"2024/04/17 10:33:27.716491 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[mo_upgrade_tenant]"}
{"level":"INFO","time":"2024/04/17 10:33:27.716571 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[trace_event_txn]"}
{"level":"INFO","time":"2024/04/17 10:33:27.716648 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[trace_event_data]"}
{"level":"INFO","time":"2024/04/17 10:33:27.716721 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[trace_table_filters]"}
{"level":"INFO","time":"2024/04/17 10:33:27.716766 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[trace_txn_filters]"}
{"level":"INFO","time":"2024/04/17 10:33:27.716800 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[trace_statement_filters]"}
{"level":"INFO","time":"2024/04/17 10:33:27.716833 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[trace_event_error]"}
{"level":"INFO","time":"2024/04/17 10:33:27.716868 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[trace_statement]"}
{"level":"INFO","time":"2024/04/17 10:33:27.716908 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[trace_event_txn_action]"}
{"level":"INFO","time":"2024/04/17 10:33:27.716967 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[trace_features]"}
{"level":"INFO","time":"2024/04/17 10:33:27.717003 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[mo_user]"}
{"level":"INFO","time":"2024/04/17 10:33:27.717063 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[__mo_index_unique_018eeb9e-599e-7f6e-b46e-536a3b4e008f]"}
{"level":"INFO","time":"2024/04/17 10:33:27.717095 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[mo_account]"}
{"level":"INFO","time":"2024/04/17 10:33:27.717182 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[__mo_index_unique_018eeb9e-59a4-7c59-bcf6-17cf56207a8b]"}
{"level":"INFO","time":"2024/04/17 10:33:27.717228 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[mo_role]"}
{"level":"INFO","time":"2024/04/17 10:33:27.717269 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[__mo_index_unique_018eeb9e-59ac-7a3a-9836-7fd7441e98dc]"}
{"level":"INFO","time":"2024/04/17 10:33:27.717311 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[mo_user_grant]"}
{"level":"INFO","time":"2024/04/17 10:33:27.717363 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[mo_role_grant]"}
{"level":"INFO","time":"2024/04/17 10:33:27.717451 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[mo_role_privs]"}
{"level":"INFO","time":"2024/04/17 10:33:27.717530 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[mo_user_defined_function]"}
{"level":"INFO","time":"2024/04/17 10:33:27.717645 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[__mo_index_unique_018eeb9e-59be-71c2-9ae4-88000cbf249f]"}
{"level":"INFO","time":"2024/04/17 10:33:27.717694 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[mo_mysql_compatibility_mode]"}
{"level":"INFO","time":"2024/04/17 10:33:27.717768 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[mo_snapshots]"}
{"level":"INFO","time":"2024/04/17 10:33:27.717845 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[__mo_index_unique_018eeb9e-59ca-775b-967a-6198a63d8d50]"}
{"level":"INFO","time":"2024/04/17 10:33:27.717877 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[mo_pubs]"}
{"level":"INFO","time":"2024/04/17 10:33:27.717958 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[mo_stored_procedure]"}
{"level":"INFO","time":"2024/04/17 10:33:27.718069 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[__mo_index_unique_018eeb9e-59d2-7617-a154-11d7076e9aa7]"}
{"level":"INFO","time":"2024/04/17 10:33:27.718112 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[mo_stages]"}
{"level":"INFO","time":"2024/04/17 10:33:27.718185 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[__mo_index_unique_018eeb9e-59da-7051-9437-8be2571f6bd0]"}
{"level":"INFO","time":"2024/04/17 10:33:27.718237 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[mo_sessions]"}
{"level":"INFO","time":"2024/04/17 10:33:27.718378 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[mo_configurations]"}
{"level":"INFO","time":"2024/04/17 10:33:27.718435 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[mo_locks]"}
{"level":"INFO","time":"2024/04/17 10:33:27.718499 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[mo_variables]"}
{"level":"INFO","time":"2024/04/17 10:33:27.718554 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[mo_transactions]"}
{"level":"INFO","time":"2024/04/17 10:33:27.718661 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[mo_cache]"}
{"level":"INFO","time":"2024/04/17 10:33:27.719476 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[user]"}
{"level":"INFO","time":"2024/04/17 10:33:27.719766 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[db]"}
{"level":"INFO","time":"2024/04/17 10:33:27.719915 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[__mo_index_secondary_018eeb9e-5a8f-778b-b74e-f68463472b30]"}
{"level":"INFO","time":"2024/04/17 10:33:27.719957 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[procs_priv]"}
{"level":"INFO","time":"2024/04/17 10:33:27.720009 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[__mo_index_secondary_018eeb9e-5a93-7124-a840-46f0e7708b2b]"}
{"level":"INFO","time":"2024/04/17 10:33:27.720047 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[columns_priv]"}
{"level":"INFO","time":"2024/04/17 10:33:27.720133 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[tables_priv]"}
{"level":"INFO","time":"2024/04/17 10:33:27.720212 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[__mo_index_secondary_018eeb9e-5a9a-78d5-9bf7-a918fe91616c]"}
{"level":"INFO","time":"2024/04/17 10:33:27.720248 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[role_edges]"}
{"level":"INFO","time":"2024/04/17 10:33:27.720305 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[key_column_usage]"}
{"level":"INFO","time":"2024/04/17 10:33:27.720403 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[columns]"}
{"level":"INFO","time":"2024/04/17 10:33:27.720555 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[profiling]"}
{"level":"INFO","time":"2024/04/17 10:33:27.720685 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[processlist]"}
{"level":"INFO","time":"2024/04/17 10:33:27.720824 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[user_privileges]"}
{"level":"INFO","time":"2024/04/17 10:33:27.720869 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[schemata]"}
{"level":"INFO","time":"2024/04/17 10:33:27.720906 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[character_sets]"}
{"level":"INFO","time":"2024/04/17 10:33:27.720959 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[triggers]"}
{"level":"INFO","time":"2024/04/17 10:33:27.721142 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[tables]"}
{"level":"INFO","time":"2024/04/17 10:33:27.721300 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[partitions]"}
{"level":"INFO","time":"2024/04/17 10:33:27.721455 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[views]"}
{"level":"INFO","time":"2024/04/17 10:33:27.721539 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[statistics]"}
{"level":"INFO","time":"2024/04/17 10:33:27.721663 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[referential_constraints]"}
{"level":"INFO","time":"2024/04/17 10:33:27.721737 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[engines]"}
{"level":"INFO","time":"2024/04/17 10:33:27.721788 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[routines]"}
{"level":"INFO","time":"2024/04/17 10:33:27.721962 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[parameters]"}
{"level":"INFO","time":"2024/04/17 10:33:27.722076 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[keywords]"}
{"level":"INFO","time":"2024/04/17 10:33:27.722132 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[schema_privileges]"}
{"level":"INFO","time":"2024/04/17 10:33:27.722186 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[table_privileges]"}
{"level":"INFO","time":"2024/04/17 10:33:27.722263 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[column_privileges]"}
{"level":"INFO","time":"2024/04/17 10:33:27.722329 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[collations]"}
{"level":"INFO","time":"2024/04/17 10:33:27.722393 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[table_constraints]"}
{"level":"INFO","time":"2024/04/17 10:33:27.722450 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[events]"}
{"level":"INFO","time":"2024/04/17 10:33:27.723182 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[metric]"}
{"level":"INFO","time":"2024/04/17 10:33:27.723369 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[sql_statement_cu]"}
{"level":"INFO","time":"2024/04/17 10:33:27.723491 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[sql_statement_total]"}
{"level":"INFO","time":"2024/04/17 10:33:27.723591 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[sql_statement_errors]"}
{"level":"INFO","time":"2024/04/17 10:33:27.723716 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[sql_transaction_total]"}
{"level":"INFO","time":"2024/04/17 10:33:27.723814 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[sql_transaction_errors]"}
{"level":"INFO","time":"2024/04/17 10:33:27.723927 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[sql_statement_duration_total]"}
{"level":"INFO","time":"2024/04/17 10:33:27.724044 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[server_connections]"}
{"level":"INFO","time":"2024/04/17 10:33:27.724153 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[server_storage_usage]"}
{"level":"INFO","time":"2024/04/17 10:33:27.724260 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[process_cpu_percent]"}
{"level":"INFO","time":"2024/04/17 10:33:27.724346 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[process_resident_memory_bytes]"}
{"level":"INFO","time":"2024/04/17 10:33:27.724447 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[process_open_fds]"}
{"level":"INFO","time":"2024/04/17 10:33:27.724538 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[process_cpu_seconds_total]"}
{"level":"INFO","time":"2024/04/17 10:33:27.724645 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[sys_cpu_seconds_total]"}
{"level":"INFO","time":"2024/04/17 10:33:27.724758 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[sys_cpu_combined_percent]"}
{"level":"INFO","time":"2024/04/17 10:33:27.724863 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[sys_memory_used]"}
{"level":"INFO","time":"2024/04/17 10:33:27.724951 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[sys_memory_available]"}
{"level":"INFO","time":"2024/04/17 10:33:27.725054 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[sys_disk_read_bytes]"}
{"level":"INFO","time":"2024/04/17 10:33:27.725144 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[sys_disk_write_bytes]"}
{"level":"INFO","time":"2024/04/17 10:33:27.725247 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[sys_net_recv_bytes]"}
{"level":"INFO","time":"2024/04/17 10:33:27.725339 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[sys_net_sent_bytes]"}
{"level":"INFO","time":"2024/04/17 10:33:27.725438 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[mo_log_message_count]"}
{"level":"INFO","time":"2024/04/17 10:33:27.725541 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[statement_info]"}
{"level":"INFO","time":"2024/04/17 10:33:27.725932 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[rawlog]"}
{"level":"INFO","time":"2024/04/17 10:33:27.726280 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[log_info]"}
{"level":"INFO","time":"2024/04/17 10:33:27.726463 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[error_info]"}
{"level":"INFO","time":"2024/04/17 10:33:27.726600 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[span_info]"}
{"level":"INFO","time":"2024/04/17 10:33:27.726772 +0000","caller":"disttae/tools.go:847","msg":"precommit: create table: 018eeb9e58ef77ac911064a79e78c3db/Active/S:1713350007709837048-1-[sql_statement_hotspot]"}
gc 8 @3.611s 0%: 0.091+6.8+0.014 ms clock, 0.73+0.18/13/32+0.11 ms cpu, 196->200->130 MB, 230 MB goal, 0 MB stacks, 0 MB globals, 8 P
{"level":"INFO","time":"2024/04/17 10:33:28.001182 +0000","name":"cn-service","caller":"bootstrap/service.go:395","msg":"bootstrap system init completed","uuid":"36333763-6132-3632-3864-633339323534"}
{"level":"INFO","time":"2024/04/17 10:33:28.001247 +0000","name":"cn-service","caller":"bootstrap/service.go:398","msg":"wait bootstrap logtail applied","uuid":"36333763-6132-3632-3864-633339323534"}
{"level":"INFO","time":"2024/04/17 10:33:28.003423 +0000","name":"cn-service","caller":"bootstrap/service.go:405","msg":"successfully completed bootstrap","uuid":"36333763-6132-3632-3864-633339323534"}
{"level":"INFO","time":"2024/04/17 10:33:28.003585 +0000","name":"cn-service","caller":"bootstrap/service_upgrade.go:36","msg":"start bootstrap upgrade","uuid":"36333763-6132-3632-3864-633339323534","module":"upgrade-framework"}
{"level":"INFO","time":"2024/04/17 10:33:28.003628 +0000","name":"cn-service","caller":"bootstrap/service_upgrade.go:498","msg":"upgrade config","uuid":"36333763-6132-3632-3864-633339323534","module":"upgrade-framework","check-upgrade-duration":"5s","check-upgrade-tenant-duration":"10s","upgrade-tenant-tasks":4,"tenant-batch":16}
{"level":"INFO","time":"2024/04/17 10:33:28.003994 +0000","caller":"frontend/server.go:70","msg":"Server Listening on : 0.0.0.0:6001 "}
{"level":"INFO","time":"2024/04/17 10:33:28.004001 +0000","name":"cn-backend.pipeline-client","caller":"morpc/client.go:365","msg":"gc idle backends task started"}
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_tables[relname reldatabase relkind account_id],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_columns[account_id att_database att_relname attname atttyp attnum attnotnull att_default att_is_auto_increment att_comment],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  1
{"level":"INFO","time":"2024/04/17 10:33:28.009040 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 1, tbl: 272401] succeed"}
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_version[version version_offset state create_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:28.010362 +0000","name":"cn-service","caller":"bootstrap/service_upgrade.go:140","msg":"get current mo cluster latest version","uuid":"36333763-6132-3632-3864-633339323534","module":"upgrade-framework","latest":"1.2.0","final":"1.2.0"}
{"level":"INFO","time":"2024/04/17 10:33:29.022128 +0000","name":"cn-service","caller":"cnservice/server_heartbeat.go:118","msg":"applying schedule command","uuid":"36333763-6132-3632-3864-633339323534","command":"C/CreateTask 36333763-6132-3632-3864-633339323534"}
cnList Length  1
blkNum  1
cnList Length  1
blkNum  1
{"level":"INFO","time":"2024/04/17 10:33:31.957120 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 1, tbl: 272426] succeed"}
Node_TableScan  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
Table Scan Free
cnList Length  1
blkNum  1
cnList Length  1
blkNum  1
Node_TableScan  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:31.962958 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 93.841µs, Establish: 7.848872ms, UpgradeTLS: 0s, Authenticate: 7.844856ms, SendErrPacket: 0s, SendOKPacket: 21.76µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 7.809721ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 102|10.158.4.99:56174|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 518|018eeb9e-6c32-7a89-b978-cff6c2ecf14a"}
{"level":"INFO","time":"2024/04/17 10:33:31.963141 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 102|10.158.4.99:56174|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 518|018eeb9e-6c32-7a89-b978-cff6c2ecf14a"}
cnList Length  1
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  1
blkNum  1
{"level":"INFO","time":"2024/04/17 10:33:31.964834 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 272389, tbl: 272390] succeed"}
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:31.967913 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 6.626027ms, Establish: 12.936106ms, UpgradeTLS: 0s, Authenticate: 12.929834ms, SendErrPacket: 0s, SendOKPacket: 24.544µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 12.887137ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 101|10.158.4.99:56172|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 517|018eeb9e-6c32-7e34-88e4-8caa69d32512"}
cnList Length  1
blkNum  1
Node_TableScan  1
{"level":"INFO","time":"2024/04/17 10:33:31.968060 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 101|10.158.4.99:56172|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 517|018eeb9e-6c32-7e34-88e4-8caa69d32512"}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"ERROR","time":"2024/04/17 10:33:31.968618 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"383624c1-9f41-6b14-bb23-e290a1e691b7","span_id":"84bf648b43136fbe"}}
{"level":"ERROR","time":"2024/04/17 10:33:31.968654 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 101|10.158.4.99:56172|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 517|018eeb9e-6c32-7e34-88e4-8caa69d32512","session_id":"018eeb9e-6c32-7e34-88e4-8caa69d32512"}
{"level":"ERROR","time":"2024/04/17 10:33:31.968680 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 101|10.158.4.99:56172|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 517|018eeb9e-6c32-7e34-88e4-8caa69d32512","session_id":"018eeb9e-6c32-7e34-88e4-8caa69d32512"}
{"level":"INFO","time":"2024/04/17 10:33:31.968744 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 101"}
cnList Length  1
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  1
blkNum  1
{"level":"INFO","time":"2024/04/17 10:33:31.969896 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 272389, tbl: 272392] succeed"}
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:32.020910 +0000","name":"cn-service","caller":"cnservice/server_heartbeat.go:118","msg":"applying schedule command","uuid":"36333763-6132-3632-3864-633339323534","command":"C/JoinGossipCluster 36333763-6132-3632-3864-633339323534"}
{"level":"INFO","time":"2024/04/17 10:33:32.021741 +0000","name":"cn-service.gossip","caller":"gossip/node.go:135","msg":"node join cluster successfully","uuid":"36333763-6132-3632-3864-633339323534","node ID":"36333763-6132-3632-3864-633339323534","joined nodes":1}
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_version[version version_offset state __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:33.014264 +0000","name":"cn-service","caller":"bootstrap/service_upgrade.go:320","msg":"final version state loaded","uuid":"36333763-6132-3632-3864-633339323534","module":"upgrade-framework","final":"1.2.0","versionOffset":35,"state":2}
{"level":"INFO","time":"2024/04/17 10:33:33.014331 +0000","name":"cn-service","caller":"bootstrap/service_upgrade.go:276","msg":"upgrade task exit","uuid":"36333763-6132-3632-3864-633339323534","module":"upgrade-framework","final":"1.2.0"}
cnList Length  1
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  1
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
Table Scan Free
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:34.959872 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 119.487µs, Establish: 8.513393ms, UpgradeTLS: 0s, Authenticate: 8.507874ms, SendErrPacket: 0s, SendOKPacket: 22.03µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 8.467119ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 103|10.158.4.99:56206|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 299|018eeb9e-77e7-7e61-8dd9-d6a9b2da0a2f"}
{"level":"INFO","time":"2024/04/17 10:33:34.960071 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 103|10.158.4.99:56206|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 299|018eeb9e-77e7-7e61-8dd9-d6a9b2da0a2f"}
{"level":"ERROR","time":"2024/04/17 10:33:34.960354 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"d45fd3a2-6c41-d20a-c87f-7099f5cd9cdd","span_id":"81bda310612272cc"}}
{"level":"ERROR","time":"2024/04/17 10:33:34.960383 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 103|10.158.4.99:56206|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 299|018eeb9e-77e7-7e61-8dd9-d6a9b2da0a2f","session_id":"018eeb9e-77e7-7e61-8dd9-d6a9b2da0a2f"}
{"level":"ERROR","time":"2024/04/17 10:33:34.960403 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 103|10.158.4.99:56206|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 299|018eeb9e-77e7-7e61-8dd9-d6a9b2da0a2f","session_id":"018eeb9e-77e7-7e61-8dd9-d6a9b2da0a2f"}
{"level":"INFO","time":"2024/04/17 10:33:34.960464 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 103"}
cnList Length  1
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  1
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  1
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:36.020961 +0000","caller":"blockio/pipeline.go:495","msg":"SelectivityStats: BLK[0/0=0.0000] COL[0/0=0.0000] RDF[0/0=0.0000,0/0=0.0000]RDD[0s/0s/0s/0]"}
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:37.926947 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 125.428µs, Establish: 6.420992ms, UpgradeTLS: 0s, Authenticate: 6.41449ms, SendErrPacket: 0s, SendOKPacket: 26.016µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 6.369078ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 104|10.158.4.99:56256|{account sys:mo_logger: -- 0:0:0}|goRoutineId 523|018eeb9e-8380-793e-a102-50d4d42ad597"}
{"level":"INFO","time":"2024/04/17 10:33:37.927149 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 104|10.158.4.99:56256|{account sys:mo_logger:moadmin -- 0:4294967295:0}|goRoutineId 523|018eeb9e-8380-793e-a102-50d4d42ad597"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
cnList Length  2
blkNum  1
Node_TableScan  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:37.957761 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 88.532µs, Establish: 5.170595ms, UpgradeTLS: 0s, Authenticate: 5.165877ms, SendErrPacket: 0s, SendOKPacket: 23.543µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.125784ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 105|10.158.4.99:56258|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 507|018eeb9e-83a0-7abb-879e-b6f69f61a855"}
{"level":"INFO","time":"2024/04/17 10:33:37.957928 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 105|10.158.4.99:56258|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 507|018eeb9e-83a0-7abb-879e-b6f69f61a855"}
{"level":"ERROR","time":"2024/04/17 10:33:37.958182 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"ba20b762-9012-ea00-a367-727ca43faf9b","span_id":"091be5760bab6292"}}
{"level":"ERROR","time":"2024/04/17 10:33:37.958230 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 105|10.158.4.99:56258|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 507|018eeb9e-83a0-7abb-879e-b6f69f61a855","session_id":"018eeb9e-83a0-7abb-879e-b6f69f61a855"}
{"level":"ERROR","time":"2024/04/17 10:33:37.958269 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 105|10.158.4.99:56258|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 507|018eeb9e-83a0-7abb-879e-b6f69f61a855","session_id":"018eeb9e-83a0-7abb-879e-b6f69f61a855"}
{"level":"INFO","time":"2024/04/17 10:33:37.958319 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 105"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
cnList Length  2
blkNum  1
Node_TableScan  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
Table Scan Free
cnList Length  2
blkNum  1
cnList Length  2
blkNum  1
Node_TableScan  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare
Table Scan Free
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:39.033045 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 69.657µs, Establish: 5.971743ms, UpgradeTLS: 0s, Authenticate: 5.967527ms, SendErrPacket: 0s, SendOKPacket: 21.068µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.932994ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 107|10.158.4.118:51502|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 541|018eeb9e-87d2-7ea3-b28b-31f696d9e82d"}
{"level":"INFO","time":"2024/04/17 10:33:39.033114 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 107|10.158.4.118:51502|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 541|018eeb9e-87d2-7ea3-b28b-31f696d9e82d"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:39.039305 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 135.737µs, Establish: 12.258102ms, UpgradeTLS: 0s, Authenticate: 12.25177ms, SendErrPacket: 0s, SendOKPacket: 20.597µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 12.211046ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 106|10.158.4.118:51500|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 540|018eeb9e-87d2-7f20-9a8b-4b7f5f0cc297"}
{"level":"INFO","time":"2024/04/17 10:33:39.039358 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 106|10.158.4.118:51500|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 540|018eeb9e-87d2-7f20-9a8b-4b7f5f0cc297"}
{"level":"ERROR","time":"2024/04/17 10:33:39.039491 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"2f438289-3b4f-c00a-c806-f69ff1a821d7","span_id":"3423d655c8f0b37c"}}
{"level":"ERROR","time":"2024/04/17 10:33:39.039535 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 106|10.158.4.118:51500|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 540|018eeb9e-87d2-7f20-9a8b-4b7f5f0cc297","session_id":"018eeb9e-87d2-7f20-9a8b-4b7f5f0cc297"}
{"level":"ERROR","time":"2024/04/17 10:33:39.039558 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 106|10.158.4.118:51500|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 540|018eeb9e-87d2-7f20-9a8b-4b7f5f0cc297","session_id":"018eeb9e-87d2-7f20-9a8b-4b7f5f0cc297"}
{"level":"INFO","time":"2024/04/17 10:33:39.039607 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 106"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
{"level":"INFO","time":"2024/04/17 10:33:39.040750 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 272389, tbl: 272394] succeed"}
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Node_TableScan  1
Table Scan Prepare
Table Scan Free
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:40.958974 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 134.886µs, Establish: 5.134711ms, UpgradeTLS: 0s, Authenticate: 5.129261ms, SendErrPacket: 0s, SendOKPacket: 20.588µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.093205ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 108|10.158.4.99:56282|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 584|018eeb9e-8f59-7a02-b304-79701c0c73cc"}
{"level":"INFO","time":"2024/04/17 10:33:40.959158 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 108|10.158.4.99:56282|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 584|018eeb9e-8f59-7a02-b304-79701c0c73cc"}
{"level":"ERROR","time":"2024/04/17 10:33:40.959421 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"4d79b7e7-92d5-60cc-81e9-004ecd7d5ed6","span_id":"1939bd92d617757e"}}
{"level":"ERROR","time":"2024/04/17 10:33:40.959449 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 108|10.158.4.99:56282|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 584|018eeb9e-8f59-7a02-b304-79701c0c73cc","session_id":"018eeb9e-8f59-7a02-b304-79701c0c73cc"}
{"level":"ERROR","time":"2024/04/17 10:33:40.959473 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 108|10.158.4.99:56282|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 584|018eeb9e-8f59-7a02-b304-79701c0c73cc","session_id":"018eeb9e-8f59-7a02-b304-79701c0c73cc"}
{"level":"INFO","time":"2024/04/17 10:33:40.959526 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 108"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:40.987491 +0000","name":"cn-service.StatsLog","caller":"mometric/stats_log_writer.go:91","msg":"fs:CN:36333763-6132-3632-3864-633339323534:LOCAL","uuid":"36333763-6132-3632-3864-633339323534","FileService.Cache.Read":1,"FileService.Cache.Memory.Read":1,"FileService.FileWithChecksum.Write":38,"FileService.FileWithChecksum.UnderlyingWrite":42}
{"level":"INFO","time":"2024/04/17 10:33:40.987533 +0000","name":"cn-service.StatsLog","caller":"mometric/stats_log_writer.go:121","msg":"duration: 15000000000, blk hit rate: 0/0=1.0000, entry hit rate: 0/0=1.0000, (average) blks in each reader: 0/0=1.0000","uuid":"36333763-6132-3632-3864-633339323534"}
cnList Length  2
blkNum  1
cnList Length  2
blkNum  1
Node_TableScan  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
Table Scan Free
cnList Length  2
blkNum  1
cnList Length  2
blkNum  1
Node_TableScan  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:42.535707 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 121.872µs, Establish: 7.188341ms, UpgradeTLS: 0s, Authenticate: 7.181658ms, SendErrPacket: 0s, SendOKPacket: 22.722µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 7.132928ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 109|10.158.4.119:34318|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 614|018eeb9e-9580-7fa4-ab24-38e2f87e3ea0"}
{"level":"INFO","time":"2024/04/17 10:33:42.535888 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 109|10.158.4.119:34318|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 614|018eeb9e-9580-7fa4-ab24-38e2f87e3ea0"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:42.539280 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 65.149µs, Establish: 10.514146ms, UpgradeTLS: 0s, Authenticate: 10.509046ms, SendErrPacket: 0s, SendOKPacket: 21.4µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 10.46742ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 110|10.158.4.119:34320|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 615|018eeb9e-9580-76e4-9246-e0a243f7ae9a"}
{"level":"INFO","time":"2024/04/17 10:33:42.539475 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 110|10.158.4.119:34320|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 615|018eeb9e-9580-76e4-9246-e0a243f7ae9a"}
{"level":"ERROR","time":"2024/04/17 10:33:42.539719 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"f74c3c81-0684-f2a6-98b1-de53274790ce","span_id":"a117ed28d79c77d9"}}
{"level":"ERROR","time":"2024/04/17 10:33:42.539758 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 110|10.158.4.119:34320|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 615|018eeb9e-9580-76e4-9246-e0a243f7ae9a","session_id":"018eeb9e-9580-76e4-9246-e0a243f7ae9a"}
{"level":"ERROR","time":"2024/04/17 10:33:42.539793 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 110|10.158.4.119:34320|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 615|018eeb9e-9580-76e4-9246-e0a243f7ae9a","session_id":"018eeb9e-9580-76e4-9246-e0a243f7ae9a"}
{"level":"INFO","time":"2024/04/17 10:33:42.539843 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 110"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:43.500286 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 104.16µs, Establish: 5.937252ms, UpgradeTLS: 0s, Authenticate: 5.931751ms, SendErrPacket: 0s, SendOKPacket: 22.149µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.893592ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 111|10.158.4.119:34326|{account sys:mo_logger: -- 0:0:0}|goRoutineId 585|018eeb9e-9946-731b-9ece-41e781d8494a"}
{"level":"INFO","time":"2024/04/17 10:33:43.500479 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 111|10.158.4.119:34326|{account sys:mo_logger:moadmin -- 0:4294967295:0}|goRoutineId 585|018eeb9e-9946-731b-9ece-41e781d8494a"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
{"level":"WARN","time":"2024/04/17 10:33:43.503107 +0000","name":"cn-service.morpc","caller":"morpc/backend.go:457","msg":"system is busy, write loop schedule interval is too large","uuid":"36333763-6132-3632-3864-633339323534","interval":"5.566015137s","last-ping-trigger-time":"0001/01/01 00:00:00.000000 +0000","ping-interval":"24s"}
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:43.962023 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 94.832µs, Establish: 9.932417ms, UpgradeTLS: 0s, Authenticate: 9.927036ms, SendErrPacket: 0s, SendOKPacket: 22.851µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 9.888657ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 112|10.158.4.99:56312|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 483|018eeb9e-9b0f-7997-8328-26bcfa76845b"}
{"level":"INFO","time":"2024/04/17 10:33:43.962232 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 112|10.158.4.99:56312|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 483|018eeb9e-9b0f-7997-8328-26bcfa76845b"}
{"level":"ERROR","time":"2024/04/17 10:33:43.962493 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"36bb7d53-e6cc-fef1-7b88-b6a3a1ac0d99","span_id":"e424ed37ee8ce526"}}
{"level":"ERROR","time":"2024/04/17 10:33:43.962523 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 112|10.158.4.99:56312|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 483|018eeb9e-9b0f-7997-8328-26bcfa76845b","session_id":"018eeb9e-9b0f-7997-8328-26bcfa76845b"}
{"level":"ERROR","time":"2024/04/17 10:33:43.962564 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 112|10.158.4.99:56312|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 483|018eeb9e-9b0f-7997-8328-26bcfa76845b","session_id":"018eeb9e-9b0f-7997-8328-26bcfa76845b"}
{"level":"INFO","time":"2024/04/17 10:33:43.962627 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 112"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
{"level":"INFO","time":"2024/04/17 10:33:46.020849 +0000","caller":"blockio/pipeline.go:495","msg":"SelectivityStats: BLK[0/0=0.0000] COL[0/0=0.0000] RDF[0/0=0.0000,0/0=0.0000]RDD[0s/0s/0s/0]"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
cnList Length  2
blkNum  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Node_TableScan  1
Table Scan Prepare
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:46.963767 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 118.676µs, Establish: 5.037283ms, UpgradeTLS: 0s, Authenticate: 5.031833ms, SendErrPacket: 0s, SendOKPacket: 22.091µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 4.991289ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 113|10.158.4.99:56336|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 485|018eeb9e-a6ce-758c-b662-4429bf3b2945"}
{"level":"INFO","time":"2024/04/17 10:33:46.963948 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 113|10.158.4.99:56336|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 485|018eeb9e-a6ce-758c-b662-4429bf3b2945"}
{"level":"ERROR","time":"2024/04/17 10:33:46.964252 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"95944f84-2c6c-d882-c6d8-57a9538733da","span_id":"24663df095495517"}}
{"level":"ERROR","time":"2024/04/17 10:33:46.964292 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 113|10.158.4.99:56336|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 485|018eeb9e-a6ce-758c-b662-4429bf3b2945","session_id":"018eeb9e-a6ce-758c-b662-4429bf3b2945"}
{"level":"ERROR","time":"2024/04/17 10:33:46.964320 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 113|10.158.4.99:56336|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 485|018eeb9e-a6ce-758c-b662-4429bf3b2945","session_id":"018eeb9e-a6ce-758c-b662-4429bf3b2945"}
{"level":"INFO","time":"2024/04/17 10:33:46.964380 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 113"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:49.960541 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 142.175µs, Establish: 5.421779ms, UpgradeTLS: 0s, Authenticate: 5.415377ms, SendErrPacket: 0s, SendOKPacket: 24.486µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.375683ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 114|10.158.4.99:56364|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 417|018eeb9e-b27f-7245-8314-de0cd61f7586"}
{"level":"INFO","time":"2024/04/17 10:33:49.960736 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 114|10.158.4.99:56364|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 417|018eeb9e-b27f-7245-8314-de0cd61f7586"}
{"level":"ERROR","time":"2024/04/17 10:33:49.961014 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"f45072fa-84af-00cb-2379-d150fb712982","span_id":"b4c1a8f5b7b36db4"}}
{"level":"ERROR","time":"2024/04/17 10:33:49.961042 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 114|10.158.4.99:56364|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 417|018eeb9e-b27f-7245-8314-de0cd61f7586","session_id":"018eeb9e-b27f-7245-8314-de0cd61f7586"}
{"level":"ERROR","time":"2024/04/17 10:33:49.961064 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 114|10.158.4.99:56364|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 417|018eeb9e-b27f-7245-8314-de0cd61f7586","session_id":"018eeb9e-b27f-7245-8314-de0cd61f7586"}
{"level":"INFO","time":"2024/04/17 10:33:49.961124 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 114"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
{"level":"WARN","time":"2024/04/17 10:33:52.917943 +0000","name":"cn-service.morpc","caller":"morpc/backend.go:457","msg":"system is busy, write loop schedule interval is too large","uuid":"36333763-6132-3632-3864-633339323534","interval":"7.539301651s","last-ping-trigger-time":"0001/01/01 00:00:00.000000 +0000","ping-interval":"24s"}
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
cnList Length  2
len(s.RemoteReceivRegInfos)  0 0
blkNum  1
Table Scan Prepare
Node_TableScan  1
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:52.958920 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 114.273µs, Establish: 5.077023ms, UpgradeTLS: 0s, Authenticate: 5.072184ms, SendErrPacket: 0s, SendOKPacket: 21.109µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.036267ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 115|10.158.4.99:56390|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 495|018eeb9e-be39-7198-bc8c-5f5e0679705d"}
{"level":"INFO","time":"2024/04/17 10:33:52.959141 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 115|10.158.4.99:56390|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 495|018eeb9e-be39-7198-bc8c-5f5e0679705d"}
{"level":"ERROR","time":"2024/04/17 10:33:52.959738 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"5839c017-1e54-ff98-eb01-d83241dfba07","span_id":"0cc08eba7fe7779c"}}
{"level":"ERROR","time":"2024/04/17 10:33:52.959776 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 115|10.158.4.99:56390|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 495|018eeb9e-be39-7198-bc8c-5f5e0679705d","session_id":"018eeb9e-be39-7198-bc8c-5f5e0679705d"}
{"level":"ERROR","time":"2024/04/17 10:33:52.959812 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 115|10.158.4.99:56390|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 495|018eeb9e-be39-7198-bc8c-5f5e0679705d","session_id":"018eeb9e-be39-7198-bc8c-5f5e0679705d"}
{"level":"INFO","time":"2024/04/17 10:33:52.959871 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 115"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
gc 9 @30.729s 0%: 0.076+4.7+0.002 ms clock, 0.61+0.21/9.3/26+0.019 ms cpu, 222->222->119 MB, 261 MB goal, 0 MB stacks, 0 MB globals, 8 P
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Node_TableScan  1
Table Scan Prepare
Table Scan Free
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:55.958772 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 99.405µs, Establish: 5.04846ms, UpgradeTLS: 0s, Authenticate: 5.042099ms, SendErrPacket: 0s, SendOKPacket: 25.798µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.000259ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 116|10.158.4.99:56418|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 622|018eeb9e-c9f1-7fe1-b2dd-2bcfa230b514"}
{"level":"INFO","time":"2024/04/17 10:33:55.958958 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 116|10.158.4.99:56418|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 622|018eeb9e-c9f1-7fe1-b2dd-2bcfa230b514"}
{"level":"ERROR","time":"2024/04/17 10:33:55.959217 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"ee852279-3fb8-1b90-9f93-beb59a28f514","span_id":"0d4850a27d0a60fa"}}
{"level":"ERROR","time":"2024/04/17 10:33:55.959249 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 116|10.158.4.99:56418|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 622|018eeb9e-c9f1-7fe1-b2dd-2bcfa230b514","session_id":"018eeb9e-c9f1-7fe1-b2dd-2bcfa230b514"}
{"level":"ERROR","time":"2024/04/17 10:33:55.959277 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 116|10.158.4.99:56418|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 622|018eeb9e-c9f1-7fe1-b2dd-2bcfa230b514","session_id":"018eeb9e-c9f1-7fe1-b2dd-2bcfa230b514"}
{"level":"INFO","time":"2024/04/17 10:33:55.959334 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 116"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:55.986952 +0000","name":"cn-service.StatsLog","caller":"mometric/stats_log_writer.go:121","msg":"duration: 15000000000, blk hit rate: 0/0=1.0000, entry hit rate: 0/0=1.0000, (average) blks in each reader: 0/0=1.0000","uuid":"36333763-6132-3632-3864-633339323534"}
{"level":"INFO","time":"2024/04/17 10:33:56.021110 +0000","caller":"blockio/pipeline.go:495","msg":"SelectivityStats: BLK[0/0=0.0000] COL[0/0=0.0000] RDF[0/0=0.0000,0/0=0.0000]RDD[0s/0s/0s/0]"}
cnList Length  2
{"level":"WARN","time":"2024/04/17 10:33:58.490491 +0000","name":"cn-service.morpc","caller":"morpc/backend.go:457","msg":"system is busy, write loop schedule interval is too large","uuid":"36333763-6132-3632-3864-633339323534","interval":"5.567666864s","last-ping-trigger-time":"0001/01/01 00:00:00.000000 +0000","ping-interval":"24s"}
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
cnList Length  2
blkNum  1
Node_TableScan  1
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:33:58.957737 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 89.736µs, Establish: 5.111925ms, UpgradeTLS: 0s, Authenticate: 5.106995ms, SendErrPacket: 0s, SendOKPacket: 22.261µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.066199ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 117|10.158.4.99:56448|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 713|018eeb9e-d5a8-7aaa-a641-05dfc205b700"}
{"level":"INFO","time":"2024/04/17 10:33:58.959800 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 117|10.158.4.99:56448|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 713|018eeb9e-d5a8-7aaa-a641-05dfc205b700"}
{"level":"ERROR","time":"2024/04/17 10:33:58.960093 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"48b58a0b-ba77-4a48-1895-dded510b1703","span_id":"085a253539f14bbf"}}
{"level":"ERROR","time":"2024/04/17 10:33:58.960123 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 117|10.158.4.99:56448|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 713|018eeb9e-d5a8-7aaa-a641-05dfc205b700","session_id":"018eeb9e-d5a8-7aaa-a641-05dfc205b700"}
{"level":"ERROR","time":"2024/04/17 10:33:58.960143 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 117|10.158.4.99:56448|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 713|018eeb9e-d5a8-7aaa-a641-05dfc205b700","session_id":"018eeb9e-d5a8-7aaa-a641-05dfc205b700"}
{"level":"INFO","time":"2024/04/17 10:33:58.960219 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 117"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
{"level":"INFO","time":"2024/04/17 10:34:00.007340 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 272389, tbl: 272391] succeed"}
cnList Length  2
blkNum  1
Node_TableScan  1
Node_AGG  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge group -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> group -> connect to MergeReceiver 0]
    DataSource: mo_task.__mo_index_unique_018eeb9e-5910-70d5-8c07-fe897e0b4df4[__mo_index_idx_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[task_metadata_id trigger_times],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1
{"level":"INFO","time":"2024/04/17 10:34:00.012572 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"17840880931881006875-171335000601474576236333763-6132-3632-3864-633339323534-1"}
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert 2nd -> lockop -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert 2nd -> lockop -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert 2nd -> lockop -> insert]
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert 2nd -> lockop -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert uk -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_task.__mo_index_unique_018eeb9e-5910-70d5-8c07-fe897e0b4df4[__mo_index_idx_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
dispatch Prepare  6 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
{"level":"INFO","time":"2024/04/17 10:34:00.015261 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"272390-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:34:00.019028 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"272391-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:34:00.019128 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"272398-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:34:00.019236 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"272396-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:34:00.019305 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"272395-171335000601474576236333763-6132-3632-3864-633339323534-1"}
{"level":"INFO","time":"2024/04/17 10:34:00.019374 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:535","msg":"bind created","uuid":"36333763-6132-3632-3864-633339323534","service":"171335000601474576236333763-6132-3632-3864-633339323534","remote":false,"bind":"272397-171335000601474576236333763-6132-3632-3864-633339323534-1"}
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:01.956694 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 140.532µs, Establish: 5.182385ms, UpgradeTLS: 0s, Authenticate: 5.176995ms, SendErrPacket: 0s, SendOKPacket: 21.329µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.140287ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 118|10.158.4.99:56470|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 734|018eeb9e-e15f-7fb0-b1fe-2a9b7e14e9d9"}
{"level":"INFO","time":"2024/04/17 10:34:01.956864 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 118|10.158.4.99:56470|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 734|018eeb9e-e15f-7fb0-b1fe-2a9b7e14e9d9"}
{"level":"ERROR","time":"2024/04/17 10:34:01.957168 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"29009d86-f382-6b8e-6b0f-7dcea8d63a9a","span_id":"b359b52217feb514"}}
{"level":"ERROR","time":"2024/04/17 10:34:01.957212 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 118|10.158.4.99:56470|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 734|018eeb9e-e15f-7fb0-b1fe-2a9b7e14e9d9","session_id":"018eeb9e-e15f-7fb0-b1fe-2a9b7e14e9d9"}
{"level":"ERROR","time":"2024/04/17 10:34:01.957237 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 118|10.158.4.99:56470|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 734|018eeb9e-e15f-7fb0-b1fe-2a9b7e14e9d9","session_id":"018eeb9e-e15f-7fb0-b1fe-2a9b7e14e9d9"}
{"level":"INFO","time":"2024/04/17 10:34:01.957302 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 118"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
{"level":"INFO","time":"2024/04/17 10:34:01.964959 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 272389, tbl: 272395] succeed"}
{"level":"INFO","time":"2024/04/17 10:34:01.966605 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 272389, tbl: 272396] succeed"}
{"level":"INFO","time":"2024/04/17 10:34:01.968049 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 272389, tbl: 272397] succeed"}
{"level":"INFO","time":"2024/04/17 10:34:01.969601 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 272389, tbl: 272398] succeed"}
cnList Length  2
blkNum  5
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
dispatch Prepare  6 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 2
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
Inner Join Prepare 102119
dispatch Prepare  2 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 102119
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 102119
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 102119
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
Table Scan Prepare
Table Scan Prepare
Table Scan Prepare
Table Scan Free
Table Scan Free
Table Scan Free
Inner Join Free
Table Scan Prepare
Inner Join Free
Table Scan Free
Inner Join Free
Inner Join Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
cnList Length  2
blkNum  1
Node_TableScan  1
Table Scan Free

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:04.961624 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 125.464µs, Establish: 9.855853ms, UpgradeTLS: 0s, Authenticate: 9.848069ms, SendErrPacket: 0s, SendOKPacket: 21.15µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 9.810578ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 119|10.158.4.99:56502|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 768|018eeb9e-ed17-7c03-9c1c-5780f8468dd9"}
{"level":"INFO","time":"2024/04/17 10:34:04.961825 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 119|10.158.4.99:56502|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 768|018eeb9e-ed17-7c03-9c1c-5780f8468dd9"}
{"level":"ERROR","time":"2024/04/17 10:34:04.962111 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"2d698f01-cdb5-d88f-a677-acbb19a1ea5c","span_id":"4abbb5cb69339db8"}}
{"level":"ERROR","time":"2024/04/17 10:34:04.962139 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 119|10.158.4.99:56502|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 768|018eeb9e-ed17-7c03-9c1c-5780f8468dd9","session_id":"018eeb9e-ed17-7c03-9c1c-5780f8468dd9"}
{"level":"ERROR","time":"2024/04/17 10:34:04.962158 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 119|10.158.4.99:56502|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 768|018eeb9e-ed17-7c03-9c1c-5780f8468dd9","session_id":"018eeb9e-ed17-7c03-9c1c-5780f8468dd9"}
{"level":"INFO","time":"2024/04/17 10:34:04.962231 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 119"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:06.020851 +0000","caller":"blockio/pipeline.go:495","msg":"SelectivityStats: BLK[0/0=0.0000] COL[0/0=0.0000] RDF[0/0=0.0000,0/0=0.0000]RDD[0s/0s/0s/0]"}
cnList Length  2
{"level":"WARN","time":"2024/04/17 10:34:07.918157 +0000","name":"cn-service.morpc","caller":"morpc/backend.go:457","msg":"system is busy, write loop schedule interval is too large","uuid":"36333763-6132-3632-3864-633339323534","interval":"5.986741345s","last-ping-trigger-time":"2024/04/17 10:34:01.931383 +0000","ping-interval":"24s"}
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
cnList Length  2
blkNum  1
Table Scan Free
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:07.961032 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 121.087µs, Establish: 5.779957ms, UpgradeTLS: 0s, Authenticate: 5.773735ms, SendErrPacket: 0s, SendOKPacket: 25.056µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.733261ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 120|10.158.4.99:56528|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 697|018eeb9e-f8d3-7450-a4f3-9a3fb3231737"}
{"level":"INFO","time":"2024/04/17 10:34:07.961218 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 120|10.158.4.99:56528|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 697|018eeb9e-f8d3-7450-a4f3-9a3fb3231737"}
{"level":"ERROR","time":"2024/04/17 10:34:07.961462 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"aa143e06-25f3-f96e-ff6c-a91c5d04464c","span_id":"d4fc324d6a16cf5f"}}
{"level":"ERROR","time":"2024/04/17 10:34:07.961498 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 120|10.158.4.99:56528|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 697|018eeb9e-f8d3-7450-a4f3-9a3fb3231737","session_id":"018eeb9e-f8d3-7450-a4f3-9a3fb3231737"}
{"level":"ERROR","time":"2024/04/17 10:34:07.961540 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 120|10.158.4.99:56528|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 697|018eeb9e-f8d3-7450-a4f3-9a3fb3231737","session_id":"018eeb9e-f8d3-7450-a4f3-9a3fb3231737"}
{"level":"INFO","time":"2024/04/17 10:34:07.961598 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 120"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:09.027562 +0000","name":"cn-service.MetricStorage","caller":"mometric/cron_task.go:122","msg":"started","uuid":"36333763-6132-3632-3864-633339323534","span":{"trace_id":"f75d58c0-9827-df3c-8103-6bea7f8743f0","span_id":"615ca6ced7af7c5a"}}
{"level":"INFO","time":"2024/04/17 10:34:09.027630 +0000","name":"cn-service.MetricStorage","caller":"mometric/cron_task.go:211","msg":"checkNewAccountSize started","uuid":"36333763-6132-3632-3864-633339323534","span":{"trace_id":"f75d58c0-9827-df3c-8103-6bea7f8743f0","span_id":"7cb50b19a8e07449"}}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:10.027853 +0000","name":"cn-service.MetricStorage","caller":"mometric/cron_task.go:143","msg":"start next round","uuid":"36333763-6132-3632-3864-633339323534","span":{"trace_id":"f75d58c0-9827-df3c-8103-6bea7f8743f0","span_id":"615ca6ced7af7c5a"}}
{"level":"INFO","time":"2024/04/17 10:34:10.027983 +0000","caller":"frontend/internal_executor.go:179","msg":"internalExecutor new session","span":{"trace_id":"f75d58c0-9827-df3c-8103-6bea7f8743f0","span_id":"e12b213dccd5abe7"},"session uuid":"018eeb9f-00eb-7042-a446-1faeebd07d0a"}
cnList Length  2
blkNum  1
{"level":"INFO","time":"2024/04/17 10:34:10.030865 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 1, tbl: 272417] succeed"}
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_account[account_id account_name status created_time comments suspended_time],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  4
Node_TableScan  1
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [1, 2]): [product]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 1]
  DataSource: mo_catalog.mo_tables[relname relkind account_id],
  Scope 2 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [2].]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_database[datname dat_type],
  }
}
Node_AGG  1
{"level":"INFO","time":"2024/04/17 10:34:10.033730 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 1, tbl: 272415] succeed"}
Node_TableScan  1
Node_TableScan  1
Node_AGG  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [projection -> connect to MergeReceiver 2]
  DataSource: mo_catalog.mo_user[user_id user_name],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge group -> projection -> connect to MergeReceiver 1]
      PreScopes: {
      Scope 1 (Magic: Remote, Receiver: []): [projection -> group -> connect to MergeReceiver 0]
      DataSource: mo_catalog.mo_user[user_id],
    }
  }
}
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [9, 10]): [loop single]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [3]): [merge group -> projection -> connect to MergeReceiver 9]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: [1, 2]): [product -> group -> connect to MergeReceiver 3]
      PreScopes: {
      Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 1]
      DataSource: mo_catalog.mo_tables[relname relkind account_id],
      Scope 2 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [2].]
        PreScopes: {
        Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
        DataSource: mo_catalog.mo_database[datname dat_type],
      }
    }
  }
  Scope 2 (Magic: Merge, Receiver: [8]): [merge -> dispatch to all of MergeReceiver [10].]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: [6, 7]): [join -> connect to MergeReceiver 8]
      PreScopes: {
      Scope 1 (Magic: Remote, Receiver: []): [projection -> connect to MergeReceiver 6]
      DataSource: mo_catalog.mo_user[user_id user_name],
      Scope 2 (Magic: Merge, Receiver: [5]): [merge -> dispatch to all of MergeReceiver [7].]
        PreScopes: {
        Scope 1 (Magic: Merge, Receiver: [4]): [merge group -> projection -> connect to MergeReceiver 5]
          PreScopes: {
          Scope 1 (Magic: Remote, Receiver: []): [projection -> group -> connect to MergeReceiver 4]
          DataSource: mo_catalog.mo_user[user_id],
        }
      }
    }
  }
}
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [11]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [9, 10]): [loop single -> projection -> connect to MergeReceiver 11]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [3]): [merge group -> projection -> connect to MergeReceiver 9]
      PreScopes: {
      Scope 1 (Magic: Remote, Receiver: [1, 2]): [product -> group -> connect to MergeReceiver 3]
        PreScopes: {
        Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 1]
        DataSource: mo_catalog.mo_tables[relname relkind account_id],
        Scope 2 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [2].]
          PreScopes: {
          Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
          DataSource: mo_catalog.mo_database[datname dat_type],
        }
      }
    }
    Scope 2 (Magic: Merge, Receiver: [8]): [merge -> dispatch to all of MergeReceiver [10].]
      PreScopes: {
      Scope 1 (Magic: Remote, Receiver: [6, 7]): [join -> connect to MergeReceiver 8]
        PreScopes: {
        Scope 1 (Magic: Remote, Receiver: []): [projection -> connect to MergeReceiver 6]
        DataSource: mo_catalog.mo_user[user_id user_name],
        Scope 2 (Magic: Merge, Receiver: [5]): [merge -> dispatch to all of MergeReceiver [7].]
          PreScopes: {
          Scope 1 (Magic: Merge, Receiver: [4]): [merge group -> projection -> connect to MergeReceiver 5]
            PreScopes: {
            Scope 1 (Magic: Remote, Receiver: []): [projection -> group -> connect to MergeReceiver 4]
            DataSource: mo_catalog.mo_user[user_id],
          }
        }
      }
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 2
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 42949672950
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
Table Scan Free
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Prepare
Table Scan Free
Table Scan Free
Table Scan Free
Inner Join Free
{"level":"INFO","time":"2024/04/17 10:34:10.035718 +0000","name":"cn-service.MetricStorage","caller":"mometric/cron_task.go:194","msg":"wait next round","uuid":"36333763-6132-3632-3864-633339323534","span":{"trace_id":"f75d58c0-9827-df3c-8103-6bea7f8743f0","span_id":"615ca6ced7af7c5a"}}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:10.959578 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 86.371µs, Establish: 5.406812ms, UpgradeTLS: 0s, Authenticate: 5.401583ms, SendErrPacket: 0s, SendOKPacket: 22.803µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.364344ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 121|10.158.4.99:56554|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 641|018eeb9f-0489-7f7c-813e-9949614e25a9"}
{"level":"INFO","time":"2024/04/17 10:34:10.959728 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 121|10.158.4.99:56554|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 641|018eeb9f-0489-7f7c-813e-9949614e25a9"}
{"level":"ERROR","time":"2024/04/17 10:34:10.960002 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"61a74d7f-a7cb-7153-5902-8291addbe496","span_id":"f1f92405a044e990"}}
{"level":"ERROR","time":"2024/04/17 10:34:10.960041 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 121|10.158.4.99:56554|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 641|018eeb9f-0489-7f7c-813e-9949614e25a9","session_id":"018eeb9f-0489-7f7c-813e-9949614e25a9"}
{"level":"ERROR","time":"2024/04/17 10:34:10.960066 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 121|10.158.4.99:56554|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 641|018eeb9f-0489-7f7c-813e-9949614e25a9","session_id":"018eeb9f-0489-7f7c-813e-9949614e25a9"}
{"level":"INFO","time":"2024/04/17 10:34:10.960108 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 121"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:10.987777 +0000","name":"cn-service.StatsLog","caller":"mometric/stats_log_writer.go:121","msg":"duration: 15000000000, blk hit rate: 0/0=1.0000, entry hit rate: 0/0=1.0000, (average) blks in each reader: 0/0=1.0000","uuid":"36333763-6132-3632-3864-633339323534"}
gc 10 @48.354s 0%: 0.031+4.8+0.022 ms clock, 0.24+0.42/9.3/23+0.17 ms cpu, 204->205->120 MB, 239 MB goal, 0 MB stacks, 0 MB globals, 8 P
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
{"level":"WARN","time":"2024/04/17 10:34:13.491091 +0000","name":"cn-service.morpc","caller":"morpc/backend.go:457","msg":"system is busy, write loop schedule interval is too large","uuid":"36333763-6132-3632-3864-633339323534","interval":"5.567566363s","last-ping-trigger-time":"2024/04/17 10:34:01.931383 +0000","ping-interval":"24s"}
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:13.960718 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 110.046µs, Establish: 5.878712ms, UpgradeTLS: 0s, Authenticate: 5.87321ms, SendErrPacket: 0s, SendOKPacket: 22.22µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.836694ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 122|10.158.4.99:56584|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 849|018eeb9f-103f-7c11-b0df-68d07631f139"}
{"level":"INFO","time":"2024/04/17 10:34:13.960879 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 122|10.158.4.99:56584|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 849|018eeb9f-103f-7c11-b0df-68d07631f139"}
{"level":"ERROR","time":"2024/04/17 10:34:13.961144 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"99d87ed2-7d95-a4c6-b543-7ab2010ed9af","span_id":"94071a311aab21e1"}}
{"level":"ERROR","time":"2024/04/17 10:34:13.961175 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 122|10.158.4.99:56584|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 849|018eeb9f-103f-7c11-b0df-68d07631f139","session_id":"018eeb9f-103f-7c11-b0df-68d07631f139"}
{"level":"ERROR","time":"2024/04/17 10:34:13.961207 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 122|10.158.4.99:56584|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 849|018eeb9f-103f-7c11-b0df-68d07631f139","session_id":"018eeb9f-103f-7c11-b0df-68d07631f139"}
{"level":"INFO","time":"2024/04/17 10:34:13.961271 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 122"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  5
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  6 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107100
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
dispatch Prepare  1 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107100
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107100
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107100
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Prepare
Table Scan Prepare
Table Scan Free
Table Scan Free
Table Scan Prepare
Inner Join Free
Inner Join Free
Table Scan Free
Inner Join Free
Table Scan Free
Inner Join Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
{"level":"INFO","time":"2024/04/17 10:34:16.020698 +0000","caller":"blockio/pipeline.go:495","msg":"SelectivityStats: BLK[0/0=0.0000] COL[0/0=0.0000] RDF[0/0=0.0000,0/0=0.0000]RDD[0s/0s/0s/0]"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:16.959946 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 111.167µs, Establish: 5.195399ms, UpgradeTLS: 0s, Authenticate: 5.181003ms, SendErrPacket: 0s, SendOKPacket: 21.701µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.145356ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 123|10.158.4.99:56612|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 907|018eeb9f-1bfa-7c95-aa85-65ce3f54a8b8"}
{"level":"INFO","time":"2024/04/17 10:34:16.960128 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 123|10.158.4.99:56612|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 907|018eeb9f-1bfa-7c95-aa85-65ce3f54a8b8"}
{"level":"ERROR","time":"2024/04/17 10:34:16.960411 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"ee8070d7-a331-606f-9c6c-9209d34d22cd","span_id":"0dd7a01d826faa7d"}}
{"level":"ERROR","time":"2024/04/17 10:34:16.960450 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 123|10.158.4.99:56612|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 907|018eeb9f-1bfa-7c95-aa85-65ce3f54a8b8","session_id":"018eeb9f-1bfa-7c95-aa85-65ce3f54a8b8"}
{"level":"ERROR","time":"2024/04/17 10:34:16.960480 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 123|10.158.4.99:56612|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 907|018eeb9f-1bfa-7c95-aa85-65ce3f54a8b8","session_id":"018eeb9f-1bfa-7c95-aa85-65ce3f54a8b8"}
{"level":"INFO","time":"2024/04/17 10:34:16.960533 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 123"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
cnList Length  2
blkNum  1
Node_TableScan  1
Table Scan Free

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:19.032473 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 103.442µs, Establish: 5.607395ms, UpgradeTLS: 0s, Authenticate: 5.599791ms, SendErrPacket: 0s, SendOKPacket: 22.14µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.562904ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 124|10.158.4.118:51706|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 826|018eeb9f-2412-790d-bdfb-88f249a4189c"}
{"level":"INFO","time":"2024/04/17 10:34:19.032551 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 124|10.158.4.118:51706|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 826|018eeb9f-2412-790d-bdfb-88f249a4189c"}
{"level":"ERROR","time":"2024/04/17 10:34:19.032651 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"4c93eb66-c70d-f494-278c-4a9ee18d052f","span_id":"1e68d622b570a5bc"}}
{"level":"ERROR","time":"2024/04/17 10:34:19.032687 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 124|10.158.4.118:51706|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 826|018eeb9f-2412-790d-bdfb-88f249a4189c","session_id":"018eeb9f-2412-790d-bdfb-88f249a4189c"}
{"level":"ERROR","time":"2024/04/17 10:34:19.032715 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 124|10.158.4.118:51706|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 826|018eeb9f-2412-790d-bdfb-88f249a4189c","session_id":"018eeb9f-2412-790d-bdfb-88f249a4189c"}
{"level":"INFO","time":"2024/04/17 10:34:19.032774 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 124"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  5
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  6 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 2
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107108

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Inner Join Prepare 107108
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107108
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107108
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
dispatch Prepare  2 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
Table Scan Prepare
Table Scan Prepare
Table Scan Free
Table Scan Free
Inner Join Free
Inner Join Free
Table Scan Prepare
Table Scan Prepare
Table Scan Free
Table Scan Free
Inner Join Free
Inner Join Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:19.958250 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 120.975µs, Establish: 5.322816ms, UpgradeTLS: 0s, Authenticate: 5.317465ms, SendErrPacket: 0s, SendOKPacket: 22.1µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.280086ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 125|10.158.4.99:56640|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 978|018eeb9f-27b0-7e83-89e3-34210e8d72d8"}
{"level":"INFO","time":"2024/04/17 10:34:19.958438 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 125|10.158.4.99:56640|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 978|018eeb9f-27b0-7e83-89e3-34210e8d72d8"}
{"level":"ERROR","time":"2024/04/17 10:34:19.958701 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"af3b6bcf-e9f9-1fea-0121-5c04fea97cb6","span_id":"dafa4069d5fac31b"}}
{"level":"ERROR","time":"2024/04/17 10:34:19.958747 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 125|10.158.4.99:56640|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 978|018eeb9f-27b0-7e83-89e3-34210e8d72d8","session_id":"018eeb9f-27b0-7e83-89e3-34210e8d72d8"}
{"level":"ERROR","time":"2024/04/17 10:34:19.958778 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 125|10.158.4.99:56640|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 978|018eeb9f-27b0-7e83-89e3-34210e8d72d8","session_id":"018eeb9f-27b0-7e83-89e3-34210e8d72d8"}
{"level":"INFO","time":"2024/04/17 10:34:19.958841 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 125"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
{"level":"WARN","time":"2024/04/17 10:34:22.918044 +0000","name":"cn-service.morpc","caller":"morpc/backend.go:457","msg":"system is busy, write loop schedule interval is too large","uuid":"36333763-6132-3632-3864-633339323534","interval":"7.539259684s","last-ping-trigger-time":"2024/04/17 10:34:01.931383 +0000","ping-interval":"24s"}
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
{"level":"ERROR","time":"2024/04/17 10:34:22.927504 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"891340ae-383a-764b-a705-657a73ae1717","span_id":"886f96a26b949391"}}
{"level":"INFO","time":"2024/04/17 10:34:22.927583 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 104"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:22.957819 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 95.758µs, Establish: 4.862791ms, UpgradeTLS: 0s, Authenticate: 4.857761ms, SendErrPacket: 0s, SendOKPacket: 22.231µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 4.816534ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 126|10.158.4.99:56668|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 983|018eeb9f-3368-7b4e-9e90-93228828ab80"}
{"level":"INFO","time":"2024/04/17 10:34:22.958014 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 126|10.158.4.99:56668|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 983|018eeb9f-3368-7b4e-9e90-93228828ab80"}
{"level":"ERROR","time":"2024/04/17 10:34:22.958297 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"6a14d360-7923-410a-a651-7e354769e9e1","span_id":"2ffa71517b06b68a"}}
{"level":"ERROR","time":"2024/04/17 10:34:22.958327 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 126|10.158.4.99:56668|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 983|018eeb9f-3368-7b4e-9e90-93228828ab80","session_id":"018eeb9f-3368-7b4e-9e90-93228828ab80"}
{"level":"ERROR","time":"2024/04/17 10:34:22.958356 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 126|10.158.4.99:56668|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 983|018eeb9f-3368-7b4e-9e90-93228828ab80","session_id":"018eeb9f-3368-7b4e-9e90-93228828ab80"}
{"level":"INFO","time":"2024/04/17 10:34:22.958408 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 126"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  5
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107134
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107134
dispatch Prepare  2 0
Table Scan Free
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107134

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  6 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107134
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Prepare
Table Scan Prepare
Table Scan Free
Table Scan Free
Inner Join Free
Table Scan Free
Inner Join Free
Table Scan Prepare
Table Scan Free
Inner Join Free
Inner Join Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
cnList Length  2
blkNum  1
Table Scan Prepare
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:25.957522 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 97.662µs, Establish: 5.744702ms, UpgradeTLS: 0s, Authenticate: 5.739392ms, SendErrPacket: 0s, SendOKPacket: 21.6µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.703255ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 127|10.158.4.99:56698|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1032|018eeb9f-3f1f-779b-80ae-6e2914d3b87d"}
{"level":"INFO","time":"2024/04/17 10:34:25.957691 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 127|10.158.4.99:56698|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1032|018eeb9f-3f1f-779b-80ae-6e2914d3b87d"}
{"level":"ERROR","time":"2024/04/17 10:34:25.957954 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"a0aa0e43-a2f3-e757-fbcf-de16acb035f0","span_id":"89883dee297dd580"}}
{"level":"ERROR","time":"2024/04/17 10:34:25.957982 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 127|10.158.4.99:56698|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1032|018eeb9f-3f1f-779b-80ae-6e2914d3b87d","session_id":"018eeb9f-3f1f-779b-80ae-6e2914d3b87d"}
{"level":"ERROR","time":"2024/04/17 10:34:25.957998 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 127|10.158.4.99:56698|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1032|018eeb9f-3f1f-779b-80ae-6e2914d3b87d","session_id":"018eeb9f-3f1f-779b-80ae-6e2914d3b87d"}
{"level":"INFO","time":"2024/04/17 10:34:25.958053 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 127"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:25.987622 +0000","name":"cn-service.MOCollector","caller":"export/batch_processor.go:638","msg":"stats","uuid":"36333763-6132-3632-3864-633339323534","MODiscardable":true,"MaxBufferCnt":2147483647,"TotalBufferCnt":2,"QueueLength":0,"statement_infoBufferCnt":1,"statement_infoDiscardCnt":0,"rawlogBufferCnt":1,"rawlogDiscardCnt":0}
{"level":"INFO","time":"2024/04/17 10:34:25.987732 +0000","name":"cn-service.StatsLog","caller":"mometric/stats_log_writer.go:121","msg":"duration: 15000000000, blk hit rate: 0/0=1.0000, entry hit rate: 0/0=1.0000, (average) blks in each reader: 0/0=1.0000","uuid":"36333763-6132-3632-3864-633339323534"}
{"level":"INFO","time":"2024/04/17 10:34:26.020736 +0000","caller":"blockio/pipeline.go:495","msg":"SelectivityStats: BLK[0/0=0.0000] COL[0/0=0.0000] RDF[0/0=0.0000,0/0=0.0000]RDD[0s/0s/0s/0]"}
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
{"level":"ERROR","time":"2024/04/17 10:34:28.503751 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"cf7e069f-57f3-7042-d5af-6ef7f0a177a4","span_id":"79341539930c7d2d"}}
{"level":"INFO","time":"2024/04/17 10:34:28.503840 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 111"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:28.956312 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 115.234µs, Establish: 4.999445ms, UpgradeTLS: 0s, Authenticate: 4.994184ms, SendErrPacket: 0s, SendOKPacket: 21.311µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 4.957567ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 128|10.158.4.99:56726|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1053|018eeb9f-4ad7-7235-8239-e56a574fee78"}
{"level":"INFO","time":"2024/04/17 10:34:28.957238 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 128|10.158.4.99:56726|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1053|018eeb9f-4ad7-7235-8239-e56a574fee78"}
{"level":"ERROR","time":"2024/04/17 10:34:28.957483 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"ea4e726b-51e7-c1b5-820e-11829f411d9e","span_id":"1dd8d1ba15879687"}}
{"level":"ERROR","time":"2024/04/17 10:34:28.957538 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 128|10.158.4.99:56726|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1053|018eeb9f-4ad7-7235-8239-e56a574fee78","session_id":"018eeb9f-4ad7-7235-8239-e56a574fee78"}
{"level":"ERROR","time":"2024/04/17 10:34:28.957563 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 128|10.158.4.99:56726|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1053|018eeb9f-4ad7-7235-8239-e56a574fee78","session_id":"018eeb9f-4ad7-7235-8239-e56a574fee78"}
{"level":"INFO","time":"2024/04/17 10:34:28.957607 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 128"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:29.031334 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 113.321µs, Establish: 4.972013ms, UpgradeTLS: 0s, Authenticate: 4.967696ms, SendErrPacket: 0s, SendOKPacket: 20.508µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 4.932709ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 129|10.158.4.118:51754|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1066|018eeb9f-4b22-78b3-8dc1-b3b4a8741ca9"}
{"level":"INFO","time":"2024/04/17 10:34:29.031383 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 129|10.158.4.118:51754|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1066|018eeb9f-4b22-78b3-8dc1-b3b4a8741ca9"}
{"level":"ERROR","time":"2024/04/17 10:34:29.031494 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"467d67ef-eb9c-92cf-b26e-4e3b7f751d91","span_id":"c8dabf7a7c0c6f98"}}
{"level":"ERROR","time":"2024/04/17 10:34:29.031524 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 129|10.158.4.118:51754|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1066|018eeb9f-4b22-78b3-8dc1-b3b4a8741ca9","session_id":"018eeb9f-4b22-78b3-8dc1-b3b4a8741ca9"}
{"level":"ERROR","time":"2024/04/17 10:34:29.031541 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 129|10.158.4.118:51754|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1066|018eeb9f-4b22-78b3-8dc1-b3b4a8741ca9","session_id":"018eeb9f-4b22-78b3-8dc1-b3b4a8741ca9"}
{"level":"INFO","time":"2024/04/17 10:34:29.031596 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 129"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  5
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at __mo_rowid],
}
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107142

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  6 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107142
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107142
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107142
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
Table Scan Free

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Prepare
Table Scan Free
Table Scan Free
Table Scan Prepare
Inner Join Free
Inner Join Free
Table Scan Prepare
Table Scan Free
Inner Join Free
Table Scan Free
Inner Join Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:30.384974 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 106.909µs, Establish: 5.097498ms, UpgradeTLS: 0s, Authenticate: 5.091957ms, SendErrPacket: 0s, SendOKPacket: 22.942µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.053475ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 130|10.158.4.119:34558|{account sys:mo_logger: -- 0:0:0}|goRoutineId 1082|018eeb9f-506b-770d-b157-2500638b6780"}
{"level":"INFO","time":"2024/04/17 10:34:30.385176 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 130|10.158.4.119:34558|{account sys:mo_logger:moadmin -- 0:4294967295:0}|goRoutineId 1082|018eeb9f-506b-770d-b157-2500638b6780"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:31.962108 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 101.71µs, Establish: 5.305013ms, UpgradeTLS: 0s, Authenticate: 5.298992ms, SendErrPacket: 0s, SendOKPacket: 22.763µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.259768ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 131|10.158.4.99:56748|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1116|018eeb9f-5692-72ea-941a-dc02d4466c4a"}
{"level":"INFO","time":"2024/04/17 10:34:31.962300 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 131|10.158.4.99:56748|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1116|018eeb9f-5692-72ea-941a-dc02d4466c4a"}
{"level":"ERROR","time":"2024/04/17 10:34:31.962569 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"13ef1f84-aca3-cead-875e-82730b33154c","span_id":"3ab8f7ee3abf73c8"}}
{"level":"ERROR","time":"2024/04/17 10:34:31.962611 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 131|10.158.4.99:56748|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1116|018eeb9f-5692-72ea-941a-dc02d4466c4a","session_id":"018eeb9f-5692-72ea-941a-dc02d4466c4a"}
{"level":"ERROR","time":"2024/04/17 10:34:31.962643 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 131|10.158.4.99:56748|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1116|018eeb9f-5692-72ea-941a-dc02d4466c4a","session_id":"018eeb9f-5692-72ea-941a-dc02d4466c4a"}
{"level":"INFO","time":"2024/04/17 10:34:31.962699 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 131"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
gc 11 @67.853s 0%: 0.069+5.5+0.003 ms clock, 0.55+0.046/10/25+0.025 ms cpu, 208->209->124 MB, 241 MB goal, 0 MB stacks, 0 MB globals, 8 P
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  5
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
Inner Join Prepare 107168
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 2
len(s.RemoteReceivRegInfos)  0 0
Inner Join Prepare 107168
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
Inner Join Prepare 107168

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at __mo_rowid],
}
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  6 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107168
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
Table Scan Free
Table Scan Prepare
Table Scan Free
Table Scan Prepare
Table Scan Prepare
Table Scan Prepare
Table Scan Free
Inner Join Free
Inner Join Free
Table Scan Free
Table Scan Free
Inner Join Free
Inner Join Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:34.961985 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 97.111µs, Establish: 8.46258ms, UpgradeTLS: 0s, Authenticate: 8.456338ms, SendErrPacket: 0s, SendOKPacket: 24.817µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 8.415963ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 132|10.158.4.99:56780|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1121|018eeb9f-6249-7e7a-af5d-a0035e261a1a"}
{"level":"INFO","time":"2024/04/17 10:34:34.962163 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 132|10.158.4.99:56780|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1121|018eeb9f-6249-7e7a-af5d-a0035e261a1a"}
{"level":"ERROR","time":"2024/04/17 10:34:34.962449 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"fa3ec2a8-3c0c-2a27-9a6c-4dacf72d7a03","span_id":"f50b9bed6b99e01c"}}
{"level":"ERROR","time":"2024/04/17 10:34:34.962484 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 132|10.158.4.99:56780|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1121|018eeb9f-6249-7e7a-af5d-a0035e261a1a","session_id":"018eeb9f-6249-7e7a-af5d-a0035e261a1a"}
{"level":"ERROR","time":"2024/04/17 10:34:34.962517 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 132|10.158.4.99:56780|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1121|018eeb9f-6249-7e7a-af5d-a0035e261a1a","session_id":"018eeb9f-6249-7e7a-af5d-a0035e261a1a"}
{"level":"INFO","time":"2024/04/17 10:34:34.962568 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 132"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:36.020808 +0000","caller":"blockio/pipeline.go:495","msg":"SelectivityStats: BLK[0/0=0.0000] COL[0/0=0.0000] RDF[0/0=0.0000,0/0=0.0000]RDD[0s/0s/0s/0]"}
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:37.923399 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 113.722µs, Establish: 5.049938ms, UpgradeTLS: 0s, Authenticate: 5.043046ms, SendErrPacket: 0s, SendOKPacket: 23.413µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.001108ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 133|10.158.4.99:56830|{account sys:mo_logger: -- 0:0:0}|goRoutineId 1188|018eeb9f-6ddd-7f90-9cff-78be2a185207"}
{"level":"INFO","time":"2024/04/17 10:34:37.923604 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 133|10.158.4.99:56830|{account sys:mo_logger:moadmin -- 0:4294967295:0}|goRoutineId 1188|018eeb9f-6ddd-7f90-9cff-78be2a185207"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
{"level":"WARN","time":"2024/04/17 10:34:37.924310 +0000","name":"cn-service.morpc","caller":"morpc/backend.go:457","msg":"system is busy, write loop schedule interval is too large","uuid":"36333763-6132-3632-3864-633339323534","interval":"7.538256575s","last-ping-trigger-time":"2024/04/17 10:34:25.931982 +0000","ping-interval":"24s"}
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:37.968585 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 80.52µs, Establish: 4.518471ms, UpgradeTLS: 0s, Authenticate: 4.514371ms, SendErrPacket: 0s, SendOKPacket: 20.869µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 4.480709ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 134|10.158.4.99:56832|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1160|018eeb9f-6e09-7b75-b923-980632ab44d3"}
{"level":"INFO","time":"2024/04/17 10:34:37.969487 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 134|10.158.4.99:56832|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1160|018eeb9f-6e09-7b75-b923-980632ab44d3"}
{"level":"ERROR","time":"2024/04/17 10:34:37.969791 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"7d749275-c9c1-1035-fa05-28c547512fbb","span_id":"e29da3171b77470c"}}
{"level":"ERROR","time":"2024/04/17 10:34:37.969824 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 134|10.158.4.99:56832|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1160|018eeb9f-6e09-7b75-b923-980632ab44d3","session_id":"018eeb9f-6e09-7b75-b923-980632ab44d3"}
{"level":"ERROR","time":"2024/04/17 10:34:37.969847 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 134|10.158.4.99:56832|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1160|018eeb9f-6e09-7b75-b923-980632ab44d3","session_id":"018eeb9f-6e09-7b75-b923-980632ab44d3"}
{"level":"INFO","time":"2024/04/17 10:34:37.969904 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 134"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
cnList Length  2
blkNum  1
len(s.RemoteReceivRegInfos)  0 0
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:39.031653 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 104.335µs, Establish: 5.258458ms, UpgradeTLS: 0s, Authenticate: 5.253318ms, SendErrPacket: 0s, SendOKPacket: 25.188µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.214365ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 135|10.158.4.118:51798|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1146|018eeb9f-7232-7a65-b5f9-50e103ae46e7"}
{"level":"INFO","time":"2024/04/17 10:34:39.031719 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 135|10.158.4.118:51798|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1146|018eeb9f-7232-7a65-b5f9-50e103ae46e7"}
{"level":"ERROR","time":"2024/04/17 10:34:39.031848 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"f3872a09-7842-d6c8-8e21-fd389e08e895","span_id":"a49e40cc788089a5"}}
{"level":"ERROR","time":"2024/04/17 10:34:39.031884 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 135|10.158.4.118:51798|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1146|018eeb9f-7232-7a65-b5f9-50e103ae46e7","session_id":"018eeb9f-7232-7a65-b5f9-50e103ae46e7"}
{"level":"ERROR","time":"2024/04/17 10:34:39.031905 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 135|10.158.4.118:51798|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1146|018eeb9f-7232-7a65-b5f9-50e103ae46e7","session_id":"018eeb9f-7232-7a65-b5f9-50e103ae46e7"}
{"level":"INFO","time":"2024/04/17 10:34:39.031945 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 135"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  5
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
!!!!! dispatch.SendToAllLocalFunc
Inner Join Prepare 107176
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 2
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107176
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  6 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Inner Join Prepare 107176
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107176
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
Table Scan Prepare
Table Scan Prepare
Table Scan Prepare
Table Scan Prepare
Table Scan Free
Table Scan Free
Table Scan Free
Table Scan Free
Inner Join Free
Inner Join Free
Inner Join Free
Inner Join Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:40.955171 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 106.929µs, Establish: 5.04473ms, UpgradeTLS: 0s, Authenticate: 5.039129ms, SendErrPacket: 0s, SendOKPacket: 24.666µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 4.999163ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 136|10.158.4.99:56858|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1178|018eeb9f-79b5-7200-a938-6bdf96562f26"}
{"level":"INFO","time":"2024/04/17 10:34:40.955387 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 136|10.158.4.99:56858|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1178|018eeb9f-79b5-7200-a938-6bdf96562f26"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"ERROR","time":"2024/04/17 10:34:40.957231 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"bf012731-fa3e-5166-c7dc-4364a9af5b50","span_id":"1b8c4d5935f6fb5a"}}
{"level":"ERROR","time":"2024/04/17 10:34:40.957262 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 136|10.158.4.99:56858|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1178|018eeb9f-79b5-7200-a938-6bdf96562f26","session_id":"018eeb9f-79b5-7200-a938-6bdf96562f26"}
{"level":"ERROR","time":"2024/04/17 10:34:40.957289 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 136|10.158.4.99:56858|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1178|018eeb9f-79b5-7200-a938-6bdf96562f26","session_id":"018eeb9f-79b5-7200-a938-6bdf96562f26"}
{"level":"INFO","time":"2024/04/17 10:34:40.957342 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 136"}
{"level":"INFO","time":"2024/04/17 10:34:40.987701 +0000","name":"cn-service.StatsLog","caller":"mometric/stats_log_writer.go:121","msg":"duration: 15000000000, blk hit rate: 0/0=1.0000, entry hit rate: 0/0=1.0000, (average) blks in each reader: 0/0=1.0000","uuid":"36333763-6132-3632-3864-633339323534"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
{"level":"WARN","time":"2024/04/17 10:34:43.491291 +0000","name":"cn-service.morpc","caller":"morpc/backend.go:457","msg":"system is busy, write loop schedule interval is too large","uuid":"36333763-6132-3632-3864-633339323534","interval":"5.56277345s","last-ping-trigger-time":"2024/04/17 10:34:25.931982 +0000","ping-interval":"24s"}
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:43.956280 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 124.912µs, Establish: 5.670033ms, UpgradeTLS: 0s, Authenticate: 5.664793ms, SendErrPacket: 0s, SendOKPacket: 22.952µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.626323ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 137|10.158.4.99:56888|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1262|018eeb9f-856e-793b-9b3f-46c1fab1c8c7"}
{"level":"INFO","time":"2024/04/17 10:34:43.957079 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 137|10.158.4.99:56888|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1262|018eeb9f-856e-793b-9b3f-46c1fab1c8c7"}
{"level":"ERROR","time":"2024/04/17 10:34:43.957333 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"efed5e25-24c4-35f0-c1ac-b3ad2ee86c4b","span_id":"aad8759307438da8"}}
{"level":"ERROR","time":"2024/04/17 10:34:43.957367 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 137|10.158.4.99:56888|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1262|018eeb9f-856e-793b-9b3f-46c1fab1c8c7","session_id":"018eeb9f-856e-793b-9b3f-46c1fab1c8c7"}
{"level":"ERROR","time":"2024/04/17 10:34:43.957400 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 137|10.158.4.99:56888|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1262|018eeb9f-856e-793b-9b3f-46c1fab1c8c7","session_id":"018eeb9f-856e-793b-9b3f-46c1fab1c8c7"}
{"level":"INFO","time":"2024/04/17 10:34:43.957457 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 137"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  5
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
dispatch Prepare  2 0
Inner Join Prepare 107202
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  6 0
dispatch Prepare  1 0
Inner Join Prepare 107202
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107202
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107202
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
Table Scan Free
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
Inner Join Free
Table Scan Prepare
Table Scan Free
Inner Join Free
Table Scan Prepare
Table Scan Free
Inner Join Free
Table Scan Prepare
Table Scan Free
Inner Join Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
{"level":"INFO","time":"2024/04/17 10:34:46.020896 +0000","caller":"blockio/pipeline.go:495","msg":"SelectivityStats: BLK[0/0=0.0000] COL[0/0=0.0000] RDF[0/0=0.0000,0/0=0.0000]RDD[0s/0s/0s/0]"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
cnList Length  2
blkNum  1
Node_TableScan  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
Table Scan Prepare
Table Scan Free

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:46.957581 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 109.113µs, Establish: 5.410092ms, UpgradeTLS: 0s, Authenticate: 5.403783ms, SendErrPacket: 0s, SendOKPacket: 20.7µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.364648ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 138|10.158.4.99:56912|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1239|018eeb9f-9127-77ac-9415-064ee2de022a"}
{"level":"INFO","time":"2024/04/17 10:34:46.957760 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 138|10.158.4.99:56912|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1239|018eeb9f-9127-77ac-9415-064ee2de022a"}
{"level":"ERROR","time":"2024/04/17 10:34:46.958042 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"1513d48a-5be1-404d-5e07-3a9b7ddc298d","span_id":"00f2f536153cc34c"}}
{"level":"ERROR","time":"2024/04/17 10:34:46.958089 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 138|10.158.4.99:56912|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1239|018eeb9f-9127-77ac-9415-064ee2de022a","session_id":"018eeb9f-9127-77ac-9415-064ee2de022a"}
{"level":"ERROR","time":"2024/04/17 10:34:46.958113 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 138|10.158.4.99:56912|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1239|018eeb9f-9127-77ac-9415-064ee2de022a","session_id":"018eeb9f-9127-77ac-9415-064ee2de022a"}
{"level":"INFO","time":"2024/04/17 10:34:46.958176 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 138"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
Table Scan Free

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:49.032396 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 108.714µs, Establish: 5.883029ms, UpgradeTLS: 0s, Authenticate: 5.878019ms, SendErrPacket: 0s, SendOKPacket: 23.543µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.84136ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 139|10.158.4.118:51868|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1332|018eeb9f-9942-74ee-80f2-3cc0020b0aad"}
{"level":"INFO","time":"2024/04/17 10:34:49.032459 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 139|10.158.4.118:51868|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1332|018eeb9f-9942-74ee-80f2-3cc0020b0aad"}
{"level":"ERROR","time":"2024/04/17 10:34:49.032581 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"8b37b5f5-ca64-0271-c5c3-102d60002c94","span_id":"91bbf721696d52a9"}}
{"level":"ERROR","time":"2024/04/17 10:34:49.032609 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 139|10.158.4.118:51868|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1332|018eeb9f-9942-74ee-80f2-3cc0020b0aad","session_id":"018eeb9f-9942-74ee-80f2-3cc0020b0aad"}
{"level":"ERROR","time":"2024/04/17 10:34:49.032624 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 139|10.158.4.118:51868|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1332|018eeb9f-9942-74ee-80f2-3cc0020b0aad","session_id":"018eeb9f-9942-74ee-80f2-3cc0020b0aad"}
{"level":"INFO","time":"2024/04/17 10:34:49.032684 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 139"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  5
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at __mo_rowid],
}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  6 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
dispatch Prepare  2 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107210
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107210
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107210
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107210
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
Table Scan Prepare
Table Scan Prepare
Table Scan Prepare
Table Scan Free
Table Scan Prepare
Inner Join Free
Table Scan Free
Table Scan Free
Table Scan Free
Inner Join Free
Inner Join Free
Inner Join Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:49.958174 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 106.118µs, Establish: 5.434819ms, UpgradeTLS: 0s, Authenticate: 5.42992ms, SendErrPacket: 0s, SendOKPacket: 21.379µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.393692ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 140|10.158.4.99:56942|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1272|018eeb9f-9ce0-76c9-9f19-aa266f54140c"}
{"level":"INFO","time":"2024/04/17 10:34:49.958342 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 140|10.158.4.99:56942|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1272|018eeb9f-9ce0-76c9-9f19-aa266f54140c"}
{"level":"ERROR","time":"2024/04/17 10:34:49.958611 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"5c200488-3f1a-93fa-8026-fe47072c320c","span_id":"ba350b3bdc29988a"}}
{"level":"ERROR","time":"2024/04/17 10:34:49.958640 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 140|10.158.4.99:56942|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1272|018eeb9f-9ce0-76c9-9f19-aa266f54140c","session_id":"018eeb9f-9ce0-76c9-9f19-aa266f54140c"}
{"level":"ERROR","time":"2024/04/17 10:34:49.958658 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 140|10.158.4.99:56942|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1272|018eeb9f-9ce0-76c9-9f19-aa266f54140c","session_id":"018eeb9f-9ce0-76c9-9f19-aa266f54140c"}
{"level":"INFO","time":"2024/04/17 10:34:49.958717 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 140"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  5
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  6 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107236
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107236
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107236
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107236
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
Table Scan Prepare
Table Scan Prepare
Table Scan Free
Table Scan Free
Inner Join Free
Inner Join Free
Table Scan Prepare
Table Scan Free
Table Scan Prepare
Inner Join Free
Table Scan Free
Inner Join Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Table Scan Prepare
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:55.959102 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 127.509µs, Establish: 7.965114ms, UpgradeTLS: 0s, Authenticate: 7.95751ms, SendErrPacket: 0s, SendOKPacket: 22.893µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 7.918537ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 141|10.158.4.99:56994|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1436|018eeb9f-b44e-7a0c-b7cd-deae23dbea1e"}
{"level":"INFO","time":"2024/04/17 10:34:55.959307 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 141|10.158.4.99:56994|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1436|018eeb9f-b44e-7a0c-b7cd-deae23dbea1e"}
{"level":"ERROR","time":"2024/04/17 10:34:55.959591 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"a0eacb85-e436-c9fd-8806-304bca426ffb","span_id":"2cb18a67ba62aedf"}}
{"level":"ERROR","time":"2024/04/17 10:34:55.959630 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 141|10.158.4.99:56994|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1436|018eeb9f-b44e-7a0c-b7cd-deae23dbea1e","session_id":"018eeb9f-b44e-7a0c-b7cd-deae23dbea1e"}
{"level":"ERROR","time":"2024/04/17 10:34:55.959663 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 141|10.158.4.99:56994|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1436|018eeb9f-b44e-7a0c-b7cd-deae23dbea1e","session_id":"018eeb9f-b44e-7a0c-b7cd-deae23dbea1e"}
{"level":"INFO","time":"2024/04/17 10:34:55.959715 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 141"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:55.986978 +0000","name":"cn-service.StatsLog","caller":"mometric/stats_log_writer.go:121","msg":"duration: 15000000000, blk hit rate: 0/0=1.0000, entry hit rate: 0/0=1.0000, (average) blks in each reader: 0/0=1.0000","uuid":"36333763-6132-3632-3864-633339323534"}
gc 12 @91.886s 0%: 0.11+6.1+0.002 ms clock, 0.94+0.083/11/27+0.020 ms cpu, 238->238->128 MB, 248 MB goal, 0 MB stacks, 0 MB globals, 8 P
{"level":"INFO","time":"2024/04/17 10:34:56.021706 +0000","caller":"blockio/pipeline.go:495","msg":"SelectivityStats: BLK[0/0=0.0000] COL[0/0=0.0000] RDF[0/0=0.0000,0/0=0.0000]RDD[0s/0s/0s/0]"}
cnList Length  2
{"level":"WARN","time":"2024/04/17 10:34:58.490229 +0000","name":"cn-service.morpc","caller":"morpc/backend.go:457","msg":"system is busy, write loop schedule interval is too large","uuid":"36333763-6132-3632-3864-633339323534","interval":"5.566807119s","last-ping-trigger-time":"2024/04/17 10:34:49.932147 +0000","ping-interval":"24s"}
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
cnList Length  2
blkNum  1
!!!!! dispatch.SendToAllLocalFunc
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:58.957156 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 117.971µs, Establish: 5.411967ms, UpgradeTLS: 0s, Authenticate: 5.407288ms, SendErrPacket: 0s, SendOKPacket: 22.02µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.369677ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 142|10.158.4.99:57022|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1463|018eeb9f-c007-7eae-890d-1f238898d44b"}
{"level":"INFO","time":"2024/04/17 10:34:58.957310 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 142|10.158.4.99:57022|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1463|018eeb9f-c007-7eae-890d-1f238898d44b"}
{"level":"ERROR","time":"2024/04/17 10:34:58.957621 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"f96c00ed-9872-1eab-8223-d54d4ed1c914","span_id":"850442fd0974e811"}}
{"level":"ERROR","time":"2024/04/17 10:34:58.957661 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 142|10.158.4.99:57022|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1463|018eeb9f-c007-7eae-890d-1f238898d44b","session_id":"018eeb9f-c007-7eae-890d-1f238898d44b"}
{"level":"ERROR","time":"2024/04/17 10:34:58.957691 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 142|10.158.4.99:57022|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1463|018eeb9f-c007-7eae-890d-1f238898d44b","session_id":"018eeb9f-c007-7eae-890d-1f238898d44b"}
{"level":"INFO","time":"2024/04/17 10:34:58.957745 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 142"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
Table Scan Free

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:34:59.031319 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 75.873µs, Establish: 5.211432ms, UpgradeTLS: 0s, Authenticate: 5.208127ms, SendErrPacket: 0s, SendOKPacket: 20.138µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.176557ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 143|10.158.4.118:51918|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1441|018eeb9f-c052-77aa-9980-4249c3a1ebb8"}
{"level":"INFO","time":"2024/04/17 10:34:59.031376 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 143|10.158.4.118:51918|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1441|018eeb9f-c052-77aa-9980-4249c3a1ebb8"}
{"level":"ERROR","time":"2024/04/17 10:34:59.031528 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"c385519d-ff34-59b6-67d1-c938d8a16c8c","span_id":"5d4ece324f0e8dcc"}}
{"level":"ERROR","time":"2024/04/17 10:34:59.031557 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 143|10.158.4.118:51918|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1441|018eeb9f-c052-77aa-9980-4249c3a1ebb8","session_id":"018eeb9f-c052-77aa-9980-4249c3a1ebb8"}
{"level":"ERROR","time":"2024/04/17 10:34:59.031573 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 143|10.158.4.118:51918|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1441|018eeb9f-c052-77aa-9980-4249c3a1ebb8","session_id":"018eeb9f-c052-77aa-9980-4249c3a1ebb8"}
{"level":"INFO","time":"2024/04/17 10:34:59.031620 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 143"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  5
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  6 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107244
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107244
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107244
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107244
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
Table Scan Prepare
Table Scan Prepare
Table Scan Free
Table Scan Prepare
Table Scan Prepare
Inner Join Free
Table Scan Free
Inner Join Free
Table Scan Free
Table Scan Free
Inner Join Free
Inner Join Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
Node_AGG  1
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge group -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> group -> connect to MergeReceiver 0]
    DataSource: mo_task.__mo_index_unique_018eeb9e-5910-70d5-8c07-fe897e0b4df4[__mo_index_idx_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:00.007487 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 116.519µs, Establish: 5.754307ms, UpgradeTLS: 0s, Authenticate: 5.748958ms, SendErrPacket: 0s, SendOKPacket: 21.641µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.711056ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 144|10.158.4.99:57034|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1280|018eeb9f-c421-7911-8523-452d7a6a7432"}
{"level":"INFO","time":"2024/04/17 10:35:00.007708 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 144|10.158.4.99:57034|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1280|018eeb9f-c421-7911-8523-452d7a6a7432"}
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[task_metadata_id trigger_times],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> projection -> pre insert -> lockop -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  6 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert 2nd -> lockop -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert 2nd -> lockop -> insert]

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert 2nd -> lockop -> insert]

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert 2nd -> lockop -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert uk -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [3, 4]): [merge -> fuzzy filter -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> connect to MergeReceiver 3]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_task.__mo_index_unique_018eeb9e-5910-70d5-8c07-fe897e0b4df4[__mo_index_idx_col],
  }
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [1]): [merge -> projection -> connect to MergeReceiver 2]
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare
Table Scan Free
{"level":"ERROR","time":"2024/04/17 10:35:00.015765 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"5badad55-5cf5-fba9-24c9-51678c905a2f","span_id":"7136e9964d8ba24c"}}
{"level":"ERROR","time":"2024/04/17 10:35:00.015807 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 102|10.158.4.99:56174|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 518|018eeb9e-6c32-7a89-b978-cff6c2ecf14a","session_id":"018eeb9e-6c32-7a89-b978-cff6c2ecf14a"}
{"level":"ERROR","time":"2024/04/17 10:35:00.015836 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 102|10.158.4.99:56174|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 518|018eeb9e-6c32-7a89-b978-cff6c2ecf14a","session_id":"018eeb9e-6c32-7a89-b978-cff6c2ecf14a"}
{"level":"INFO","time":"2024/04/17 10:35:00.015901 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 102"}
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
len(s.RemoteReceivRegInfos)  0 0
blkNum  1
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
Node_TableScan  1
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:01.961101 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 96.941µs, Establish: 9.270306ms, UpgradeTLS: 0s, Authenticate: 9.263413ms, SendErrPacket: 0s, SendOKPacket: 29.565µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 9.211165ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 145|10.158.4.99:57046|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1281|018eeb9f-cbbf-7b24-bbcf-1c7a04bedac5"}
{"level":"INFO","time":"2024/04/17 10:35:01.961347 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 145|10.158.4.99:57046|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1281|018eeb9f-cbbf-7b24-bbcf-1c7a04bedac5"}
{"level":"ERROR","time":"2024/04/17 10:35:01.961662 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"5f7953c5-c796-030c-5a3e-d20a97b89171","span_id":"5814661f0724b91c"}}
{"level":"ERROR","time":"2024/04/17 10:35:01.961698 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 145|10.158.4.99:57046|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1281|018eeb9f-cbbf-7b24-bbcf-1c7a04bedac5","session_id":"018eeb9f-cbbf-7b24-bbcf-1c7a04bedac5"}
{"level":"ERROR","time":"2024/04/17 10:35:01.961724 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 145|10.158.4.99:57046|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1281|018eeb9f-cbbf-7b24-bbcf-1c7a04bedac5","session_id":"018eeb9f-cbbf-7b24-bbcf-1c7a04bedac5"}
{"level":"INFO","time":"2024/04/17 10:35:01.961780 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 145"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  5
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 14419
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 2

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at __mo_rowid],
}
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  6 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
dispatch Prepare  1 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
Inner Join Prepare 14419
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 14419
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 14419
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
Table Scan Prepare
Table Scan Free
Table Scan Prepare
Inner Join Free
Table Scan Free
Inner Join Free
Table Scan Prepare
Table Scan Prepare
Table Scan Free
Inner Join Free
Table Scan Free
Inner Join Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  5
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at __mo_rowid],
}
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
len(s.RemoteReceivRegInfos)  0 0
Inner Join Prepare 107270

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107270
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107270
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107270
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
dispatch Prepare  6 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Prepare
Table Scan Prepare
Table Scan Free
Table Scan Free
Inner Join Free
Table Scan Free
Inner Join Free
Inner Join Free
Table Scan Prepare
Table Scan Free
Inner Join Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:04.956865 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 106.629µs, Establish: 4.974424ms, UpgradeTLS: 0s, Authenticate: 4.968813ms, SendErrPacket: 0s, SendOKPacket: 21.01µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 4.928598ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 146|10.158.4.99:57080|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1550|018eeb9f-d777-753e-8e30-4fd00b948fbb"}
{"level":"INFO","time":"2024/04/17 10:35:04.958678 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 146|10.158.4.99:57080|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1550|018eeb9f-d777-753e-8e30-4fd00b948fbb"}
{"level":"ERROR","time":"2024/04/17 10:35:04.958960 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"cc4f2e60-0466-cab2-087b-1677fd73fee6","span_id":"a1acb89649ab3fe9"}}
{"level":"ERROR","time":"2024/04/17 10:35:04.958997 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 146|10.158.4.99:57080|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1550|018eeb9f-d777-753e-8e30-4fd00b948fbb","session_id":"018eeb9f-d777-753e-8e30-4fd00b948fbb"}
{"level":"ERROR","time":"2024/04/17 10:35:04.959033 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 146|10.158.4.99:57080|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1550|018eeb9f-d777-753e-8e30-4fd00b948fbb","session_id":"018eeb9f-d777-753e-8e30-4fd00b948fbb"}
{"level":"INFO","time":"2024/04/17 10:35:04.959099 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 146"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
{"level":"INFO","time":"2024/04/17 10:35:06.021025 +0000","caller":"blockio/pipeline.go:495","msg":"SelectivityStats: BLK[0/0=0.0000] COL[0/0=0.0000] RDF[0/0=0.0000,0/0=0.0000]RDD[0s/0s/0s/0]"}
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  5
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at __mo_rowid],
}

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 2
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 109220
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Inner Join Prepare 109220
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  6 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 109220
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 109220
Table Scan Free
Table Scan Prepare
Table Scan Prepare
Table Scan Free
Table Scan Prepare
Table Scan Free
Table Scan Prepare
Inner Join Free
Table Scan Free
Inner Join Free
Table Scan Free
Inner Join Free
Inner Join Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:07.957546 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 101.761µs, Establish: 4.841444ms, UpgradeTLS: 0s, Authenticate: 4.834542ms, SendErrPacket: 0s, SendOKPacket: 22.161µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 4.794817ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 147|10.158.4.99:57106|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1634|018eeb9f-e330-79fe-bdf4-1ef178811c0b"}
{"level":"INFO","time":"2024/04/17 10:35:07.959316 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 147|10.158.4.99:57106|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1634|018eeb9f-e330-79fe-bdf4-1ef178811c0b"}
{"level":"ERROR","time":"2024/04/17 10:35:07.959573 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"d492673d-daba-5b3f-7d73-6e9c7a0ccf08","span_id":"3d61e18cdfe84427"}}
{"level":"ERROR","time":"2024/04/17 10:35:07.959598 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 147|10.158.4.99:57106|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1634|018eeb9f-e330-79fe-bdf4-1ef178811c0b","session_id":"018eeb9f-e330-79fe-bdf4-1ef178811c0b"}
{"level":"ERROR","time":"2024/04/17 10:35:07.959623 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 147|10.158.4.99:57106|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1634|018eeb9f-e330-79fe-bdf4-1ef178811c0b","session_id":"018eeb9f-e330-79fe-bdf4-1ef178811c0b"}
{"level":"INFO","time":"2024/04/17 10:35:07.959679 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 147"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
gc 13 @104.806s 0%: 0.028+4.6+0.002 ms clock, 0.23+0.50/8.9/24+0.023 ms cpu, 246->246->120 MB, 258 MB goal, 0 MB stacks, 0 MB globals, 8 P
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:09.027710 +0000","caller":"frontend/internal_executor.go:179","msg":"internalExecutor new session","span":{"trace_id":"f75d58c0-9827-df3c-8103-6bea7f8743f0","span_id":"e6fe5024e7c76bc6"},"session uuid":"018eeb9f-e763-7451-9b19-e44088334519"}
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
cnList Length  2
blkNum  1
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:09.032350 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 122.531µs, Establish: 6.355776ms, UpgradeTLS: 0s, Authenticate: 6.350017ms, SendErrPacket: 0s, SendOKPacket: 19.206µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 6.310892ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 148|10.158.4.118:51962|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1636|018eeb9f-e761-7471-9309-c41485189b6e"}
{"level":"INFO","time":"2024/04/17 10:35:09.032402 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 148|10.158.4.118:51962|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1636|018eeb9f-e761-7471-9309-c41485189b6e"}
{"level":"ERROR","time":"2024/04/17 10:35:09.032532 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"883b58c2-cf8c-6cea-4bcb-7c0c21667c09","span_id":"c3b68bfa4616f4bd"}}
{"level":"ERROR","time":"2024/04/17 10:35:09.032562 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 148|10.158.4.118:51962|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1636|018eeb9f-e761-7471-9309-c41485189b6e","session_id":"018eeb9f-e761-7471-9309-c41485189b6e"}
{"level":"ERROR","time":"2024/04/17 10:35:09.032590 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 148|10.158.4.118:51962|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1636|018eeb9f-e761-7471-9309-c41485189b6e","session_id":"018eeb9f-e761-7471-9309-c41485189b6e"}
{"level":"INFO","time":"2024/04/17 10:35:09.032648 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 148"}
{"level":"INFO","time":"2024/04/17 10:35:09.032689 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 1, tbl: 272423] succeed"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level with_grant_option],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_account[account_name created_time],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  5
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
dispatch Prepare  2 0
dispatch Prepare  6 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 2
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
Inner Join Prepare 107278
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107278
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
Inner Join Prepare 107278
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107278
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Prepare
Table Scan Prepare
Table Scan Free
Table Scan Prepare
Inner Join Free
Table Scan Free
Table Scan Free
Inner Join Free
Inner Join Free
Table Scan Free
Inner Join Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:10.957846 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 101.97µs, Establish: 5.018946ms, UpgradeTLS: 0s, Authenticate: 5.012875ms, SendErrPacket: 0s, SendOKPacket: 20.388µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 4.971447ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 149|10.158.4.99:57130|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1601|018eeb9f-eee8-7749-9285-aff4d1489898"}
{"level":"INFO","time":"2024/04/17 10:35:10.958025 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 149|10.158.4.99:57130|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1601|018eeb9f-eee8-7749-9285-aff4d1489898"}
{"level":"ERROR","time":"2024/04/17 10:35:10.958256 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"c05662a3-8080-7812-b0ca-ed69b854251e","span_id":"eb1263a3bee0692c"}}
{"level":"ERROR","time":"2024/04/17 10:35:10.958279 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 149|10.158.4.99:57130|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1601|018eeb9f-eee8-7749-9285-aff4d1489898","session_id":"018eeb9f-eee8-7749-9285-aff4d1489898"}
{"level":"ERROR","time":"2024/04/17 10:35:10.958315 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 149|10.158.4.99:57130|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1601|018eeb9f-eee8-7749-9285-aff4d1489898","session_id":"018eeb9f-eee8-7749-9285-aff4d1489898"}
{"level":"INFO","time":"2024/04/17 10:35:10.958365 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 149"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:10.986999 +0000","name":"cn-service.StatsLog","caller":"mometric/stats_log_writer.go:121","msg":"duration: 15000000000, blk hit rate: 0/0=1.0000, entry hit rate: 0/0=1.0000, (average) blks in each reader: 0/0=1.0000","uuid":"36333763-6132-3632-3864-633339323534"}
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
gc 14 @107.677s 0%: 0.079+6.2+0.003 ms clock, 0.63+0.075/11/27+0.025 ms cpu, 230->230->122 MB, 242 MB goal, 0 MB stacks, 0 MB globals, 8 P
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:12.532552 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 93.744µs, Establish: 4.755763ms, UpgradeTLS: 0s, Authenticate: 4.750264ms, SendErrPacket: 0s, SendOKPacket: 21.43µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 4.712283ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 150|10.158.4.119:34778|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1714|018eeb9f-f50f-7a3a-b59d-5e0b2c10fa16"}
{"level":"INFO","time":"2024/04/17 10:35:12.532721 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 150|10.158.4.119:34778|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1714|018eeb9f-f50f-7a3a-b59d-5e0b2c10fa16"}
{"level":"ERROR","time":"2024/04/17 10:35:12.532971 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"6a4a00fc-77de-291c-340b-ca4866ba30aa","span_id":"97ef6788ed7c34fd"}}
{"level":"ERROR","time":"2024/04/17 10:35:12.533012 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 150|10.158.4.119:34778|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1714|018eeb9f-f50f-7a3a-b59d-5e0b2c10fa16","session_id":"018eeb9f-f50f-7a3a-b59d-5e0b2c10fa16"}
{"level":"ERROR","time":"2024/04/17 10:35:12.533036 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 150|10.158.4.119:34778|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1714|018eeb9f-f50f-7a3a-b59d-5e0b2c10fa16","session_id":"018eeb9f-f50f-7a3a-b59d-5e0b2c10fa16"}
{"level":"INFO","time":"2024/04/17 10:35:12.533098 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 150"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  2
blkNum  5
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at __mo_rowid],
}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  6 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 109444
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 2
len(s.RemoteReceivRegInfos)  0 0
Inner Join Prepare 109444
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 109444
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 109444
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
Table Scan Prepare
Table Scan Prepare
Table Scan Free
Table Scan Prepare
Inner Join Free
Table Scan Free
Table Scan Prepare
Table Scan Free
Table Scan Free
Inner Join Free
Inner Join Free
Inner Join Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:12.539422 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 117.32µs, Establish: 5.433682ms, UpgradeTLS: 0s, Authenticate: 5.429824ms, SendErrPacket: 0s, SendOKPacket: 19.968µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.398426ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 151|10.158.4.119:34780|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1715|018eeb9f-f515-71e9-81be-6fdb1ab73079"}
{"level":"INFO","time":"2024/04/17 10:35:12.539612 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 151|10.158.4.119:34780|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1715|018eeb9f-f515-71e9-81be-6fdb1ab73079"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"ERROR","time":"2024/04/17 10:35:12.541796 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"8a601f71-791a-a424-6d7f-c1d127cd76e3","span_id":"b52c779dee7fd198"}}
{"level":"ERROR","time":"2024/04/17 10:35:12.541825 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 109|10.158.4.119:34318|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 614|018eeb9e-9580-7fa4-ab24-38e2f87e3ea0","session_id":"018eeb9e-9580-7fa4-ab24-38e2f87e3ea0"}
{"level":"ERROR","time":"2024/04/17 10:35:12.541840 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 109|10.158.4.119:34318|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 614|018eeb9e-9580-7fa4-ab24-38e2f87e3ea0","session_id":"018eeb9e-9580-7fa4-ab24-38e2f87e3ea0"}
{"level":"INFO","time":"2024/04/17 10:35:12.541894 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 109"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:12.665910 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 93.364µs, Establish: 6.020058ms, UpgradeTLS: 0s, Authenticate: 6.013285ms, SendErrPacket: 0s, SendOKPacket: 21.569µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.97275ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 152|10.158.4.119:34782|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1670|018eeb9f-f593-7159-9947-b8de473115f4"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
{"level":"INFO","time":"2024/04/17 10:35:12.666090 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 152|10.158.4.119:34782|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1670|018eeb9f-f593-7159-9947-b8de473115f4"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"ERROR","time":"2024/04/17 10:35:12.667915 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"20d972e4-6604-8599-ebee-50500cbd50db","span_id":"294c8438aea81b74"}}
{"level":"ERROR","time":"2024/04/17 10:35:12.667943 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 152|10.158.4.119:34782|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1670|018eeb9f-f593-7159-9947-b8de473115f4","session_id":"018eeb9f-f593-7159-9947-b8de473115f4"}
{"level":"ERROR","time":"2024/04/17 10:35:12.667961 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 152|10.158.4.119:34782|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1670|018eeb9f-f593-7159-9947-b8de473115f4","session_id":"018eeb9f-f593-7159-9947-b8de473115f4"}
{"level":"INFO","time":"2024/04/17 10:35:12.668012 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 152"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0
cnList Length  2

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
gc 15 @109.462s 0%: 0.068+6.7+0.015 ms clock, 0.54+0.22/13/29+0.12 ms cpu, 244->246->138 MB, 246 MB goal, 0 MB stacks, 0 MB globals, 8 P
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:13.958715 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 133.47µs, Establish: 5.32562ms, UpgradeTLS: 0s, Authenticate: 5.3203ms, SendErrPacket: 0s, SendOKPacket: 21.79µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.28281ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 153|10.158.4.99:57162|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1738|018eeb9f-faa1-767f-b8be-c0cfe1ed099a"}
{"level":"INFO","time":"2024/04/17 10:35:13.958902 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 153|10.158.4.99:57162|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1738|018eeb9f-faa1-767f-b8be-c0cfe1ed099a"}
{"level":"ERROR","time":"2024/04/17 10:35:13.959175 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"c77926cc-fd61-9c29-0e4d-6dbb00ef9b78","span_id":"82c71cd1a2afd61b"}}
{"level":"ERROR","time":"2024/04/17 10:35:13.959231 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 153|10.158.4.99:57162|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1738|018eeb9f-faa1-767f-b8be-c0cfe1ed099a","session_id":"018eeb9f-faa1-767f-b8be-c0cfe1ed099a"}
{"level":"ERROR","time":"2024/04/17 10:35:13.959267 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 153|10.158.4.99:57162|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1738|018eeb9f-faa1-767f-b8be-c0cfe1ed099a","session_id":"018eeb9f-faa1-767f-b8be-c0cfe1ed099a"}
{"level":"INFO","time":"2024/04/17 10:35:13.959320 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 153"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  5
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  6 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 2
len(s.RemoteReceivRegInfos)  0 0
Inner Join Prepare 107304
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 2
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107304
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107304
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
Inner Join Prepare 107304
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
Table Scan Prepare
Table Scan Free
Inner Join Free
Table Scan Prepare
Table Scan Prepare
Table Scan Prepare
Table Scan Free
Table Scan Free
Table Scan Free
Inner Join Free
Inner Join Free
Inner Join Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0
cnList Length  2
blkNum  1

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
Node_TableScan  1
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
dispatch Prepare  8 0
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
gc 16 @110.702s 0%: 0.035+5.7+0.030 ms clock, 0.28+0.76/11/30+0.24 ms cpu, 270->270->131 MB, 277 MB goal, 0 MB stacks, 0 MB globals, 8 P
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"ERROR","time":"2024/04/17 10:35:15.385896 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"5b0c5769-32b7-0689-5268-926b6300bb4e","span_id":"87587f583de51ec0"}}
{"level":"INFO","time":"2024/04/17 10:35:15.385985 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 130"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:15.410374 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 104.336µs, Establish: 13.612658ms, UpgradeTLS: 0s, Authenticate: 13.606977ms, SendErrPacket: 0s, SendOKPacket: 26.18µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 13.565089ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 154|10.158.4.119:34796|{account sys:mo_logger: -- 0:0:0}|goRoutineId 1773|018eeba0-0044-7ea5-b3fe-f0b069acbf61"}
{"level":"INFO","time":"2024/04/17 10:35:15.410561 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 154|10.158.4.119:34796|{account sys:mo_logger:moadmin -- 0:4294967295:0}|goRoutineId 1773|018eeba0-0044-7ea5-b3fe-f0b069acbf61"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  5
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  6 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 2

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Inner Join Prepare 151484
len(s.RemoteReceivRegInfos)  0 2
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
!!!!! dispatch.SendToAllLocalFunc
Inner Join Prepare 151484
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 151484
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 151484
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
Table Scan Prepare
Table Scan Prepare
Table Scan Free
Table Scan Prepare
Inner Join Free
Table Scan Prepare
Table Scan Free
Inner Join Free
Table Scan Free
Inner Join Free
Table Scan Free
Inner Join Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:16.020889 +0000","caller":"blockio/pipeline.go:495","msg":"SelectivityStats: BLK[0/0=0.0000] COL[0/0=0.0000] RDF[0/0=0.0000,0/0=0.0000]RDD[0s/0s/0s/0]"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
gc 17 @112.720s 0%: 0.047+6.1+0.017 ms clock, 0.38+0.11/12/34+0.13 ms cpu, 257->257->136 MB, 264 MB goal, 0 MB stacks, 0 MB globals, 8 P
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
cnList Length  2
blkNum  1
Table Scan Free
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
cnList Length  2
blkNum  0
Table Scan Free

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
{"level":"INFO","time":"2024/04/17 10:35:16.962021 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 95.638µs, Establish: 6.972199ms, UpgradeTLS: 0s, Authenticate: 6.966188ms, SendErrPacket: 0s, SendOKPacket: 20.238µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 6.931303ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 155|10.158.4.99:57190|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1802|018eeba0-065a-7e33-b027-68b5ea38174f"}
{"level":"INFO","time":"2024/04/17 10:35:16.962231 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 155|10.158.4.99:57190|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1802|018eeba0-065a-7e33-b027-68b5ea38174f"}
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"ERROR","time":"2024/04/17 10:35:16.962538 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"6f7a9be7-458c-e5ff-b037-04b17004b16d","span_id":"f0e82b79d08e3af9"}}
{"level":"ERROR","time":"2024/04/17 10:35:16.962569 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 155|10.158.4.99:57190|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1802|018eeba0-065a-7e33-b027-68b5ea38174f","session_id":"018eeba0-065a-7e33-b027-68b5ea38174f"}
{"level":"ERROR","time":"2024/04/17 10:35:16.962598 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 155|10.158.4.99:57190|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1802|018eeba0-065a-7e33-b027-68b5ea38174f","session_id":"018eeba0-065a-7e33-b027-68b5ea38174f"}
{"level":"INFO","time":"2024/04/17 10:35:16.962659 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 155"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
Table Scan Free

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:19.032409 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 114.765µs, Establish: 5.551974ms, UpgradeTLS: 0s, Authenticate: 5.546182ms, SendErrPacket: 0s, SendOKPacket: 21.11µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.508272ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 156|10.158.4.118:52018|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1783|018eeba0-0e72-704a-89fb-7234987bab09"}
{"level":"INFO","time":"2024/04/17 10:35:19.032497 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 156|10.158.4.118:52018|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1783|018eeba0-0e72-704a-89fb-7234987bab09"}
{"level":"ERROR","time":"2024/04/17 10:35:19.032637 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"6deaa6ce-33f7-1eab-431e-421b42c46bd1","span_id":"30d4875c8d51ec19"}}
{"level":"ERROR","time":"2024/04/17 10:35:19.032664 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 156|10.158.4.118:52018|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1783|018eeba0-0e72-704a-89fb-7234987bab09","session_id":"018eeba0-0e72-704a-89fb-7234987bab09"}
{"level":"ERROR","time":"2024/04/17 10:35:19.032683 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 156|10.158.4.118:52018|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1783|018eeba0-0e72-704a-89fb-7234987bab09","session_id":"018eeba0-0e72-704a-89fb-7234987bab09"}
{"level":"INFO","time":"2024/04/17 10:35:19.032741 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 156"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  5
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
dispatch Prepare  6 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107312
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc
Table Scan Free

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107312
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107312
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107312
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
Inner Join Free
Table Scan Prepare
Table Scan Free
Inner Join Free
Table Scan Prepare
Table Scan Prepare
Table Scan Free
Inner Join Free
Table Scan Free
Inner Join Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:19.959372 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 112.201µs, Establish: 5.800567ms, UpgradeTLS: 0s, Authenticate: 5.795078ms, SendErrPacket: 0s, SendOKPacket: 20.289µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.759821ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 157|10.158.4.99:57220|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1866|018eeba0-120e-7fa1-bbf0-f1307a507c88"}
{"level":"INFO","time":"2024/04/17 10:35:19.959561 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 157|10.158.4.99:57220|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1866|018eeba0-120e-7fa1-bbf0-f1307a507c88"}
{"level":"ERROR","time":"2024/04/17 10:35:19.959866 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"4d2ca056-9d27-b52e-abc4-a141b1aae21c","span_id":"6deac3ecfdb5ad47"}}
{"level":"ERROR","time":"2024/04/17 10:35:19.959905 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 157|10.158.4.99:57220|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1866|018eeba0-120e-7fa1-bbf0-f1307a507c88","session_id":"018eeba0-120e-7fa1-bbf0-f1307a507c88"}
{"level":"ERROR","time":"2024/04/17 10:35:19.959927 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 157|10.158.4.99:57220|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1866|018eeba0-120e-7fa1-bbf0-f1307a507c88","session_id":"018eeba0-120e-7fa1-bbf0-f1307a507c88"}
{"level":"INFO","time":"2024/04/17 10:35:19.959976 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 157"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
{"level":"WARN","time":"2024/04/17 10:35:22.918822 +0000","name":"cn-service.morpc","caller":"morpc/backend.go:457","msg":"system is busy, write loop schedule interval is too large","uuid":"36333763-6132-3632-3864-633339323534","interval":"7.220129499s","last-ping-trigger-time":"2024/04/17 10:35:13.932418 +0000","ping-interval":"24s"}
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
{"level":"ERROR","time":"2024/04/17 10:35:22.925874 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"a99c3668-23fb-1f20-8806-fa8a1c6b86f0","span_id":"cc7c2eed65099110"}}
{"level":"INFO","time":"2024/04/17 10:35:22.926044 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 133"}
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:22.931586 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 134.11µs, Establish: 5.065383ms, UpgradeTLS: 0s, Authenticate: 5.059382ms, SendErrPacket: 0s, SendOKPacket: 21.63µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.023926ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 158|10.158.4.99:57248|{account sys:mo_logger: -- 0:0:0}|goRoutineId 1819|018eeba0-1dae-76fb-a88c-cdd1e4ac56fa"}
{"level":"INFO","time":"2024/04/17 10:35:22.931750 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 158|10.158.4.99:57248|{account sys:mo_logger:moadmin -- 0:4294967295:0}|goRoutineId 1819|018eeba0-1dae-76fb-a88c-cdd1e4ac56fa"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:22.960301 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 105.316µs, Establish: 4.555599ms, UpgradeTLS: 0s, Authenticate: 4.551411ms, SendErrPacket: 0s, SendOKPacket: 21.149µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 4.517728ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 159|10.158.4.99:57252|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1882|018eeba0-1dca-7932-acc5-fe35ccd2761f"}
{"level":"INFO","time":"2024/04/17 10:35:22.960461 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 159|10.158.4.99:57252|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1882|018eeba0-1dca-7932-acc5-fe35ccd2761f"}
{"level":"ERROR","time":"2024/04/17 10:35:22.960704 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"1a79dd2b-fc1c-bb19-9d24-8ccb8d59d58f","span_id":"ff03267db651a66f"}}
{"level":"ERROR","time":"2024/04/17 10:35:22.960732 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 159|10.158.4.99:57252|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1882|018eeba0-1dca-7932-acc5-fe35ccd2761f","session_id":"018eeba0-1dca-7932-acc5-fe35ccd2761f"}
{"level":"ERROR","time":"2024/04/17 10:35:22.960763 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 159|10.158.4.99:57252|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1882|018eeba0-1dca-7932-acc5-fe35ccd2761f","session_id":"018eeba0-1dca-7932-acc5-fe35ccd2761f"}
{"level":"INFO","time":"2024/04/17 10:35:22.960818 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 159"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  5
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at __mo_rowid],
}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
dispatch Prepare  6 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107338
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
dispatch Prepare  1 0
Inner Join Prepare 107338
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107338
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107338
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
Table Scan Free
Table Scan Prepare
Table Scan Prepare
Table Scan Prepare
Table Scan Free
Table Scan Prepare
Table Scan Free
Inner Join Free
Table Scan Free
Table Scan Free
Inner Join Free
Inner Join Free
Inner Join Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:25.959802 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 138.318µs, Establish: 5.407033ms, UpgradeTLS: 0s, Authenticate: 5.401482ms, SendErrPacket: 0s, SendOKPacket: 21.119µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.36266ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 160|10.158.4.99:57280|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1822|018eeba0-297f-7ab8-b558-0bec8dc33750"}
{"level":"INFO","time":"2024/04/17 10:35:25.960000 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 160|10.158.4.99:57280|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1822|018eeba0-297f-7ab8-b558-0bec8dc33750"}
{"level":"ERROR","time":"2024/04/17 10:35:25.960292 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"1b154d9d-136e-19ba-d1dc-445a82229bb1","span_id":"82910d74511e4187"}}
{"level":"ERROR","time":"2024/04/17 10:35:25.960321 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 160|10.158.4.99:57280|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1822|018eeba0-297f-7ab8-b558-0bec8dc33750","session_id":"018eeba0-297f-7ab8-b558-0bec8dc33750"}
{"level":"ERROR","time":"2024/04/17 10:35:25.960352 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 160|10.158.4.99:57280|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1822|018eeba0-297f-7ab8-b558-0bec8dc33750","session_id":"018eeba0-297f-7ab8-b558-0bec8dc33750"}
{"level":"INFO","time":"2024/04/17 10:35:25.960402 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 160"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:25.986975 +0000","name":"cn-service.StatsLog","caller":"mometric/stats_log_writer.go:91","msg":"fs:CN:36333763-6132-3632-3864-633339323534:SHARED","uuid":"36333763-6132-3632-3864-633339323534","FileService.S3.Head":2,"FileService.S3.Put":2}
{"level":"INFO","time":"2024/04/17 10:35:25.987007 +0000","name":"cn-service.StatsLog","caller":"mometric/stats_log_writer.go:121","msg":"duration: 15000000000, blk hit rate: 0/0=1.0000, entry hit rate: 0/0=1.0000, (average) blks in each reader: 0/0=1.0000","uuid":"36333763-6132-3632-3864-633339323534"}
{"level":"INFO","time":"2024/04/17 10:35:25.987890 +0000","name":"cn-service.MOCollector","caller":"export/batch_processor.go:638","msg":"stats","uuid":"36333763-6132-3632-3864-633339323534","MODiscardable":true,"MaxBufferCnt":2147483647,"TotalBufferCnt":2,"QueueLength":0,"statement_infoBufferCnt":1,"statement_infoDiscardCnt":0,"rawlogBufferCnt":1,"rawlogDiscardCnt":0}
{"level":"INFO","time":"2024/04/17 10:35:26.021468 +0000","caller":"blockio/pipeline.go:495","msg":"SelectivityStats: BLK[0/0=0.0000] COL[0/0=0.0000] RDF[0/0=0.0000,0/0=0.0000]RDD[0s/0s/0s/0]"}
cnList Length  2
{"level":"WARN","time":"2024/04/17 10:35:28.492625 +0000","name":"cn-service.morpc","caller":"morpc/backend.go:457","msg":"system is busy, write loop schedule interval is too large","uuid":"36333763-6132-3632-3864-633339323534","interval":"5.560059229s","last-ping-trigger-time":"2024/04/17 10:35:13.932418 +0000","ping-interval":"24s"}
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
gc 18 @124.540s 0%: 0.031+10+0.016 ms clock, 0.25+0/16/40+0.13 ms cpu, 265->265->155 MB, 272 MB goal, 0 MB stacks, 0 MB globals, 8 P
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:28.954924 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 119.604µs, Establish: 5.045216ms, UpgradeTLS: 0s, Authenticate: 5.039564ms, SendErrPacket: 0s, SendOKPacket: 21.47µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.003417ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 161|10.158.4.99:57308|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1971|018eeba0-3535-76c5-bb05-1ed7ea4e5ab8"}
{"level":"INFO","time":"2024/04/17 10:35:28.955080 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 161|10.158.4.99:57308|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1971|018eeba0-3535-76c5-bb05-1ed7ea4e5ab8"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"ERROR","time":"2024/04/17 10:35:28.956790 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"ab576ad8-ae20-c161-2aae-563885b13b0a","span_id":"49f219952ff693da"}}
{"level":"ERROR","time":"2024/04/17 10:35:28.956820 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 161|10.158.4.99:57308|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1971|018eeba0-3535-76c5-bb05-1ed7ea4e5ab8","session_id":"018eeba0-3535-76c5-bb05-1ed7ea4e5ab8"}
{"level":"ERROR","time":"2024/04/17 10:35:28.956842 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 161|10.158.4.99:57308|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1971|018eeba0-3535-76c5-bb05-1ed7ea4e5ab8","session_id":"018eeba0-3535-76c5-bb05-1ed7ea4e5ab8"}
{"level":"INFO","time":"2024/04/17 10:35:28.956898 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 161"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
dispatch Prepare  2 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:29.030849 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 71.043µs, Establish: 4.631291ms, UpgradeTLS: 0s, Authenticate: 4.625701ms, SendErrPacket: 0s, SendOKPacket: 21.329µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 4.592529ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 162|10.158.4.118:52066|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1972|018eeba0-3582-77bf-9dcc-01342844c092"}
{"level":"INFO","time":"2024/04/17 10:35:29.030905 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 162|10.158.4.118:52066|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1972|018eeba0-3582-77bf-9dcc-01342844c092"}
{"level":"ERROR","time":"2024/04/17 10:35:29.031031 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"ed7f770f-99fe-3be4-71e3-8ab2316207fb","span_id":"02a29c2041e912ea"}}
{"level":"ERROR","time":"2024/04/17 10:35:29.031060 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 162|10.158.4.118:52066|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1972|018eeba0-3582-77bf-9dcc-01342844c092","session_id":"018eeba0-3582-77bf-9dcc-01342844c092"}
{"level":"ERROR","time":"2024/04/17 10:35:29.031077 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 162|10.158.4.118:52066|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1972|018eeba0-3582-77bf-9dcc-01342844c092","session_id":"018eeba0-3582-77bf-9dcc-01342844c092"}
{"level":"INFO","time":"2024/04/17 10:35:29.031125 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 162"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  5
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107346

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
dispatch Prepare  2 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107346
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  6 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107346
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107346
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
Table Scan Prepare
Table Scan Prepare
Table Scan Prepare
Table Scan Prepare
Table Scan Free
Table Scan Free
Inner Join Free
Inner Join Free
Table Scan Free
Table Scan Free
Inner Join Free
Inner Join Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
{"level":"ERROR","time":"2024/04/17 10:35:30.416478 +0000","caller":"types/datetime.go:191","msg":"error: invalid input: invalid datetime value \"\"materielName\"\": \"\"片状电阻\"\""}
{"level":"ERROR","time":"2024/04/17 10:35:30.416524 +0000","caller":"external/external.go:1258","msg":"parse field[\"\"materielName\"\": \"\"片状电阻\"\"] err:invalid input: invalid datetime value \"\"materielName\"\": \"\"片状电阻\"\""}
{"level":"ERROR","time":"2024/04/17 10:35:30.416585 +0000","caller":"external/external.go:1259","msg":"error: internal error: the input value '\"\"materielName\"\": \"\"片状电阻\"\"' is not Datetime type for column 12","span":{"trace_id":"f0c1be8a-65cc-ccfa-d1c5-be946d32bd78","span_id":"e9d6f943df5c4017"}}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Node_TableScan  1
Table Scan Prepare
Table Scan Free
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:31.958161 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 154.769µs, Establish: 5.490679ms, UpgradeTLS: 0s, Authenticate: 5.485309ms, SendErrPacket: 0s, SendOKPacket: 27.281µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.44335ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 163|10.158.4.99:57330|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 1974|018eeba0-40f0-77a2-8df3-66ce21cc9eae"}
{"level":"INFO","time":"2024/04/17 10:35:31.958344 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 163|10.158.4.99:57330|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1974|018eeba0-40f0-77a2-8df3-66ce21cc9eae"}
{"level":"ERROR","time":"2024/04/17 10:35:31.958581 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"2f582e83-f48e-d52c-2cca-2544a81074af","span_id":"cba353700660b28c"}}
{"level":"ERROR","time":"2024/04/17 10:35:31.958610 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 163|10.158.4.99:57330|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1974|018eeba0-40f0-77a2-8df3-66ce21cc9eae","session_id":"018eeba0-40f0-77a2-8df3-66ce21cc9eae"}
{"level":"ERROR","time":"2024/04/17 10:35:31.958633 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 163|10.158.4.99:57330|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 1974|018eeba0-40f0-77a2-8df3-66ce21cc9eae","session_id":"018eeba0-40f0-77a2-8df3-66ce21cc9eae"}
{"level":"INFO","time":"2024/04/17 10:35:31.958689 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 163"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
gc 19 @128.575s 0%: 0.032+6.3+0.002 ms clock, 0.25+0.080/12/34+0.023 ms cpu, 305->305->141 MB, 312 MB goal, 0 MB stacks, 0 MB globals, 8 P
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  5
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107372
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107372
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
dispatch Prepare  2 0
Inner Join Prepare 107372
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107372

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  6 0
Table Scan Prepare
Table Scan Free
Table Scan Prepare
Table Scan Prepare
Table Scan Free
Table Scan Prepare
Table Scan Prepare
Inner Join Free
Table Scan Free
Table Scan Free
Inner Join Free
Table Scan Free
Inner Join Free
Inner Join Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:34.958167 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 135.854µs, Establish: 5.351988ms, UpgradeTLS: 0s, Authenticate: 5.346198ms, SendErrPacket: 0s, SendOKPacket: 21.1µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.305942ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 164|10.158.4.99:57366|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 2010|018eeba0-4ca8-7a8e-9ab2-00571be6cdce"}
{"level":"INFO","time":"2024/04/17 10:35:34.958339 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 164|10.158.4.99:57366|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 2010|018eeba0-4ca8-7a8e-9ab2-00571be6cdce"}
{"level":"ERROR","time":"2024/04/17 10:35:34.958601 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"4061a7a7-eb6c-efb8-12e8-248557c25cbd","span_id":"870a9a6c564d822c"}}
{"level":"ERROR","time":"2024/04/17 10:35:34.958631 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 164|10.158.4.99:57366|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 2010|018eeba0-4ca8-7a8e-9ab2-00571be6cdce","session_id":"018eeba0-4ca8-7a8e-9ab2-00571be6cdce"}
{"level":"ERROR","time":"2024/04/17 10:35:34.958653 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 164|10.158.4.99:57366|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 2010|018eeba0-4ca8-7a8e-9ab2-00571be6cdce","session_id":"018eeba0-4ca8-7a8e-9ab2-00571be6cdce"}
{"level":"INFO","time":"2024/04/17 10:35:34.958714 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 164"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:36.021384 +0000","caller":"blockio/pipeline.go:495","msg":"SelectivityStats: BLK[0/0=0.0000] COL[0/0=0.0000] RDF[0/0=0.0000,0/0=0.0000]RDD[0s/0s/0s/0]"}
cnList Length  2
{"level":"WARN","time":"2024/04/17 10:35:37.918869 +0000","name":"cn-service.morpc","caller":"morpc/backend.go:457","msg":"system is busy, write loop schedule interval is too large","uuid":"36333763-6132-3632-3864-633339323534","interval":"7.507250776s","last-ping-trigger-time":"2024/04/17 10:35:13.932418 +0000","ping-interval":"24s"}
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:37.957272 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 130.744µs, Establish: 4.858977ms, UpgradeTLS: 0s, Authenticate: 4.852115ms, SendErrPacket: 0s, SendOKPacket: 23.764µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 4.809364ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 165|10.158.4.99:57420|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 2083|018eeba0-5860-7059-abf8-1a516383158d"}
{"level":"INFO","time":"2024/04/17 10:35:37.957449 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 165|10.158.4.99:57420|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 2083|018eeba0-5860-7059-abf8-1a516383158d"}
{"level":"ERROR","time":"2024/04/17 10:35:37.957705 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"574589dc-71c6-1064-6430-e50757bf9190","span_id":"c05045a6c3784438"}}
{"level":"ERROR","time":"2024/04/17 10:35:37.957737 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 165|10.158.4.99:57420|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 2083|018eeba0-5860-7059-abf8-1a516383158d","session_id":"018eeba0-5860-7059-abf8-1a516383158d"}
{"level":"ERROR","time":"2024/04/17 10:35:37.957763 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 165|10.158.4.99:57420|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 2083|018eeba0-5860-7059-abf8-1a516383158d","session_id":"018eeba0-5860-7059-abf8-1a516383158d"}
{"level":"INFO","time":"2024/04/17 10:35:37.957827 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 165"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:39.032244 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 102.201µs, Establish: 6.063169ms, UpgradeTLS: 0s, Authenticate: 6.058351ms, SendErrPacket: 0s, SendOKPacket: 20.198µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 6.024406ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 166|10.158.4.118:52110|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 2084|018eeba0-5c92-7166-97eb-1cd016f3723c"}
{"level":"INFO","time":"2024/04/17 10:35:39.032320 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 166|10.158.4.118:52110|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 2084|018eeba0-5c92-7166-97eb-1cd016f3723c"}
{"level":"ERROR","time":"2024/04/17 10:35:39.032447 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"cf1cf3b2-ac8c-767e-88ee-69d5580246a5","span_id":"a5ab8f3a4dec3de5"}}
{"level":"ERROR","time":"2024/04/17 10:35:39.032487 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 166|10.158.4.118:52110|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 2084|018eeba0-5c92-7166-97eb-1cd016f3723c","session_id":"018eeba0-5c92-7166-97eb-1cd016f3723c"}
{"level":"ERROR","time":"2024/04/17 10:35:39.032511 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 166|10.158.4.118:52110|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 2084|018eeba0-5c92-7166-97eb-1cd016f3723c","session_id":"018eeba0-5c92-7166-97eb-1cd016f3723c"}
{"level":"INFO","time":"2024/04/17 10:35:39.032571 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 166"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  5
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107380
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107380
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107380
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107380
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
dispatch Prepare  6 0
Table Scan Free
Table Scan Prepare
Table Scan Prepare
Table Scan Prepare
Table Scan Free
Table Scan Free
Inner Join Free
Table Scan Prepare
Table Scan Free
Inner Join Free
Table Scan Free
Inner Join Free
Inner Join Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_account[account_id account_name status version suspended_time],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_user[user_id user_name authentication_string default_role],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
{"level":"INFO","time":"2024/04/17 10:35:40.507446 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 1, tbl: 272419] succeed"}
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_role[role_id role_name],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:40.514080 +0000","name":"cn-service.frontend","caller":"frontend/session.go:1837","msg":"{account sys:dump:moadmin -- 0:1:0}","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 167|10.144.0.12:28847|{account sys:dump: -- 0:0:0}|goRoutineId 2107|018eeba0-6258-7c22-a81a-63a27e15cd43","session_id":"018eeba0-6258-7c22-a81a-63a27e15cd43"}
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:40.519079 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 117.42µs, Establish: 14.080833ms, UpgradeTLS: 0s, Authenticate: 14.075073ms, SendErrPacket: 0s, SendOKPacket: 29.145µs, CheckTenant: 865.228µs, CheckUser: 466.442µs, CheckRole: 2.342089ms, CheckDbName: 0s, InitGlobalSysVar: 4.921044ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 167|10.144.0.12:28847|{account sys:dump: -- 0:0:0}|goRoutineId 2107|018eeba0-6258-7c22-a81a-63a27e15cd43"}
{"level":"INFO","time":"2024/04/17 10:35:40.519869 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 167|10.144.0.12:28847|{account sys:dump:moadmin -- 0:1:0}|goRoutineId 2107|018eeba0-6258-7c22-a81a-63a27e15cd43"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge limit -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> limit -> connect to MergeReceiver 0]
    DataSource: [],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Table Scan Prepare
Table Scan Free
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:40.956602 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 89.518µs, Establish: 5.324657ms, UpgradeTLS: 0s, Authenticate: 5.319419ms, SendErrPacket: 0s, SendOKPacket: 21.891µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.26766ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 168|10.158.4.99:57444|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 2166|018eeba0-6417-7ce0-b661-e126e1fb81e8"}
{"level":"INFO","time":"2024/04/17 10:35:40.956768 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 168|10.158.4.99:57444|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 2166|018eeba0-6417-7ce0-b661-e126e1fb81e8"}
{"level":"ERROR","time":"2024/04/17 10:35:40.957018 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"4f2f20c5-8248-31a7-055d-5000dd313608","span_id":"651f94343d8f8f5b"}}
{"level":"ERROR","time":"2024/04/17 10:35:40.957047 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 168|10.158.4.99:57444|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 2166|018eeba0-6417-7ce0-b661-e126e1fb81e8","session_id":"018eeba0-6417-7ce0-b661-e126e1fb81e8"}
{"level":"ERROR","time":"2024/04/17 10:35:40.957076 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 168|10.158.4.99:57444|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 2166|018eeba0-6417-7ce0-b661-e126e1fb81e8","session_id":"018eeba0-6417-7ce0-b661-e126e1fb81e8"}
{"level":"INFO","time":"2024/04/17 10:35:40.957141 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 168"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:40.986953 +0000","name":"cn-service.StatsLog","caller":"mometric/stats_log_writer.go:91","msg":"fs:CN:36333763-6132-3632-3864-633339323534:SHARED","uuid":"36333763-6132-3632-3864-633339323534","FileService.S3.Head":1,"FileService.S3.Put":1}
{"level":"INFO","time":"2024/04/17 10:35:40.986996 +0000","name":"cn-service.StatsLog","caller":"mometric/stats_log_writer.go:121","msg":"duration: 15000000000, blk hit rate: 0/0=1.0000, entry hit rate: 0/0=1.0000, (average) blks in each reader: 0/0=1.0000","uuid":"36333763-6132-3632-3864-633339323534"}
{"level":"INFO","time":"2024/04/17 10:35:41.383315 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 273083, tbl: 273263] succeed"}
{"level":"INFO","time":"2024/04/17 10:35:41.415739 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 273083, tbl: 273253] succeed"}
{"level":"INFO","time":"2024/04/17 10:35:41.476103 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 273083, tbl: 273254] succeed"}
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level with_grant_option],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1524
Node_TableScan  2
Node_TableScan  1
Node_join  2 2 1
!!!!! dispatch.SendToAllFunc

Scope 1 (Magic: Remote, Receiver: [1, 2]): [unknown]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 1]
  DataSource: jh_etao_wms.t_materiel[id reel_id part_no stock_num],
  Scope 2 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [2]. cross-cn receiver info: [addr: 10.158.4.119:6002, uuid 018eeba0-6625-7dfa-b49f-70038f3fa04c]]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: jh_etao_wms.__mo_index_unique_018eeba0-058f-73ff-a772-448ed1f11a59[__mo_index_idx_col __mo_index_pri_col],
  }
}
Scope 2 (Magic: Remote, Receiver: [3, 4(018eeba0-6625-7dfa-b49f-70038f3fa04c)]): [unknown]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 3]
  DataSource: jh_etao_wms.t_materiel[id reel_id part_no stock_num],
}
Node_TableScan  2
Node_join  2 2 2
!!!!! dispatch.SendToAllFunc
!!!!! dispatch.SendToAllFunc

Scope 1 (Magic: Remote, Receiver: [5, 6]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [1, 2]): [unknown -> connect to MergeReceiver 5]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 1]
    DataSource: jh_etao_wms.t_materiel[id reel_id part_no stock_num],
    Scope 2 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [2]. cross-cn receiver info: [addr: 10.158.4.119:6002, uuid 018eeba0-6625-7dfa-b49f-70038f3fa04c]]
      PreScopes: {
      Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
      DataSource: jh_etao_wms.__mo_index_unique_018eeba0-058f-73ff-a772-448ed1f11a59[__mo_index_idx_col __mo_index_pri_col],
    }
  }
  Scope 2 (Magic: Merge, Receiver: [3, 4]): [merge -> dispatch to all of MergeReceiver [6]. cross-cn receiver info: [addr: 10.158.4.119:6002, uuid 018eeba0-6625-74d7-80c4-27a01fb2ec6e]]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 3]
    DataSource: jh_etao_wms.t_materiel_ext[reel_id cur_position in_timestamp],
    Scope 2 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 4]
    DataSource: jh_etao_wms.t_materiel_ext[reel_id cur_position in_timestamp],
  }
}
Scope 2 (Magic: Remote, Receiver: [9, 10(018eeba0-6625-74d7-80c4-27a01fb2ec6e)]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [7, 8(018eeba0-6625-7dfa-b49f-70038f3fa04c)]): [unknown -> connect to MergeReceiver 9]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 7]
    DataSource: jh_etao_wms.t_materiel[id reel_id part_no stock_num],
  }
}
Node_AGG  2
!!!!! dispatch.SendToAllFunc
!!!!! dispatch.SendToAllFunc

Scope 1 (Magic: Merge, Receiver: [13]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [11, 12]): [merge group -> projection -> projection -> connect to MergeReceiver 13]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: [5, 6]): [join -> group -> connect to MergeReceiver 11]
      PreScopes: {
      Scope 1 (Magic: Remote, Receiver: [1, 2]): [unknown -> connect to MergeReceiver 5]
        PreScopes: {
        Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 1]
        DataSource: jh_etao_wms.t_materiel[id reel_id part_no stock_num],
        Scope 2 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [2]. cross-cn receiver info: [addr: 10.158.4.119:6002, uuid 018eeba0-6625-7dfa-b49f-70038f3fa04c]]
          PreScopes: {
          Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
          DataSource: jh_etao_wms.__mo_index_unique_018eeba0-058f-73ff-a772-448ed1f11a59[__mo_index_idx_col __mo_index_pri_col],
        }
      }
      Scope 2 (Magic: Merge, Receiver: [3, 4]): [merge -> dispatch to all of MergeReceiver [6]. cross-cn receiver info: [addr: 10.158.4.119:6002, uuid 018eeba0-6625-74d7-80c4-27a01fb2ec6e]]
        PreScopes: {
        Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 3]
        DataSource: jh_etao_wms.t_materiel_ext[reel_id cur_position in_timestamp],
        Scope 2 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 4]
        DataSource: jh_etao_wms.t_materiel_ext[reel_id cur_position in_timestamp],
      }
    }
    Scope 2 (Magic: Remote, Receiver: [9, 10(018eeba0-6625-74d7-80c4-27a01fb2ec6e)]): [join -> group -> connect to MergeReceiver 12]
      PreScopes: {
      Scope 1 (Magic: Remote, Receiver: [7, 8(018eeba0-6625-7dfa-b49f-70038f3fa04c)]): [unknown -> connect to MergeReceiver 9]
        PreScopes: {
        Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 7]
        DataSource: jh_etao_wms.t_materiel[id reel_id part_no stock_num],
      }
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Inner Join Prepare 1672
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Inner Join Prepare 1672
len(s.RemoteReceivRegInfos)  0 0
Inner Join Prepare 1672
len(s.RemoteReceivRegInfos)  0 0
Inner Join Prepare 1672
len(s.RemoteReceivRegInfos)  0 0
Inner Join Prepare 1672
len(s.RemoteReceivRegInfos)  0 0
Inner Join Prepare 1672
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Inner Join Prepare 1672
Inner Join Prepare 1672
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 1
range arg.RemoteRegs length 1
PutProcIntoUuidMap 018eeba0-6625-74d7-80c4-27a01fb2ec6e
prepare Remote End
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 1
range arg.RemoteRegs length 1
PutProcIntoUuidMap 018eeba0-6625-7dfa-b49f-70038f3fa04c
Table Scan Free
prepare Remote End
len(s.RemoteReceivRegInfos)  0 0
GetProcByUuid 2
?????  1672
goroutine 2227 [running]:
runtime/debug.Stack()
	/usr/local/go/src/runtime/debug/stack.go:24 +0x5e
runtime/debug.PrintStack()
	/usr/local/go/src/runtime/debug/stack.go:16 +0x13
github.com/matrixorigin/matrixone/pkg/sql/compile.(*messageReceiverOnServer).GetProcByUuid(0xc00843c580, {0x1, 0x8e, 0xeb, 0xa0, 0x66, 0x25, 0x74, 0xd7, 0x80, ...})
	/go/src/github.com/matrixorigin/matrixone/pkg/sql/compile/scopeRemoteRunTypes.go:537 +0x27
github.com/matrixorigin/matrixone/pkg/sql/compile.cnMessageHandle(0xc00843c580)
	/go/src/github.com/matrixorigin/matrixone/pkg/sql/compile/scopeRemoteRun.go:158 +0x78
github.com/matrixorigin/matrixone/pkg/sql/compile.CnServerMessageHandler({0x4988590?, 0xc0097e1560}, {0xc007dd6d98, 0x11}, {0x49a40a8?, 0xc00b9a4e40?}, {0x49b9630?, 0xc00afc1200}, {0x49f2f48, 0xc000004300}, ...)
	/go/src/github.com/matrixorigin/matrixone/pkg/sql/compile/scopeRemoteRun.go:147 +0x305
github.com/matrixorigin/matrixone/pkg/cnservice.(*service).handleRequest.func1()
	/go/src/github.com/matrixorigin/matrixone/pkg/cnservice/server.go:418 +0x2c3
created by github.com/matrixorigin/matrixone/pkg/cnservice.(*service).handleRequest in goroutine 172
	/go/src/github.com/matrixorigin/matrixone/pkg/cnservice/server.go:414 +0x25e
GetProcByUuid 2
?????  1672
goroutine 2230 [running]:
runtime/debug.Stack()
	/usr/local/go/src/runtime/debug/stack.go:24 +0x5e
runtime/debug.PrintStack()
	/usr/local/go/src/runtime/debug/stack.go:16 +0x13
github.com/matrixorigin/matrixone/pkg/sql/compile.(*messageReceiverOnServer).GetProcByUuid(0xc00843c840, {0x1, 0x8e, 0xeb, 0xa0, 0x66, 0x25, 0x7d, 0xfa, 0xb4, ...})
	/go/src/github.com/matrixorigin/matrixone/pkg/sql/compile/scopeRemoteRunTypes.go:537 +0x27
github.com/matrixorigin/matrixone/pkg/sql/compile.cnMessageHandle(0xc00843c840)
	/go/src/github.com/matrixorigin/matrixone/pkg/sql/compile/scopeRemoteRun.go:158 +0x78
github.com/matrixorigin/matrixone/pkg/sql/compile.CnServerMessageHandler({0x4988590?, 0xc0097e1710}, {0xc007dd6de0, 0x11}, {0x49a40a8?, 0xc00b9a4f00?}, {0x49b9630?, 0xc00b9a4fc0}, {0x49f2f48, 0xc000004300}, ...)
	/go/src/github.com/matrixorigin/matrixone/pkg/sql/compile/scopeRemoteRun.go:147 +0x305
github.com/matrixorigin/matrixone/pkg/cnservice.(*service).handleRequest.func1()
	/go/src/github.com/matrixorigin/matrixone/pkg/cnservice/server.go:418 +0x2c3
created by github.com/matrixorigin/matrixone/pkg/cnservice.(*service).handleRequest in goroutine 2228
	/go/src/github.com/matrixorigin/matrixone/pkg/cnservice/server.go:414 +0x25e
{"level":"INFO","time":"2024/04/17 10:35:41.479796 +0000","name":"cn-backend","caller":"morpc/backend.go:1117","msg":"stream call closed on client","remote":"10.158.4.119:6002","backend-id":"018eeba0-6626-7f74-b2fe-0455086052f0","stream-id":1}
{"level":"ERROR","time":"2024/04/17 10:35:41.479869 +0000","name":"cn-backend","caller":"morpc/backend.go:572","msg":"read from backend failed","remote":"10.158.4.119:6002","backend-id":"018eeba0-6626-7f74-b2fe-0455086052f0","error":"read tcp4 10.158.4.118:39288->10.158.4.119:6002: use of closed network connection"}
{"level":"ERROR","time":"2024/04/17 10:35:41.479907 +0000","name":"cn-backend","caller":"morpc/backend.go:576","msg":"read loop stopped","remote":"10.158.4.119:6002","backend-id":"018eeba0-6626-7f74-b2fe-0455086052f0"}
{"level":"ERROR","time":"2024/04/17 10:35:41.479919 +0000","name":"cn-backend","caller":"v2@v2.0.0-20231122095211-6a25dc9130ca/session.go:515","msg":"close conneciton failed","remote":"10.158.4.119:6002","backend-id":"018eeba0-6626-7f74-b2fe-0455086052f0","session-id":0,"error":"close tcp4 10.158.4.118:39288->10.158.4.119:6002: use of closed network connection"}
waitRemoteRegsReady len(arg.RemoteRegs) 1
dispatch result.Batch == nil
dispatch Free err  <nil>
????? DeleteUuids [018eeba0-6625-74d7-80c4-27a01fb2ec6e]
Inner Join Free
goroutine 2213 [running]:
runtime/debug.Stack()
	/usr/local/go/src/runtime/debug/stack.go:24 +0x5e
runtime/debug.PrintStack()
	/usr/local/go/src/runtime/debug/stack.go:16 +0x13
github.com/matrixorigin/matrixone/pkg/sql/colexec.(*Server).DeleteUuids(0xc0007cae40, {0xc00b7bc190?, 0x1, 0x2?})
err = <-infoToDispatchOperator.Err  <nil>
	/go/src/github.com/matrixorigin/matrixone/pkg/sql/colexec/server.go:91 +0xae
github.com/matrixorigin/matrixone/pkg/sql/colexec/dispatch.(*Argument).Free(0xc00a7836c0, 0xc0089e7200?, 0x0, {0x0, 0x0})
	/go/src/github.com/matrixorigin/matrixone/pkg/sql/colexec/dispatch/types.go:131 +0x37d
github.com/matrixorigin/matrixone/pkg/vm/pipeline.(*Pipeline).Cleanup(0xc0089a1ec0, 0xc0089e7200, 0x90?, {0x0, 0x0})
	/go/src/github.com/matrixorigin/matrixone/pkg/vm/pipeline/types.go:111 +0x8e
github.com/matrixorigin/matrixone/pkg/sql/compile.(*Scope).MergeRun(0xc00e0b2b40, 0xc00b5b6b60)
	/go/src/github.com/matrixorigin/matrixone/pkg/sql/compile/scope.go:218 +0x4a6
github.com/matrixorigin/matrixone/pkg/sql/compile.(*Scope).MergeRun.func1()
	/go/src/github.com/matrixorigin/matrixone/pkg/sql/compile/scope.go:188 +0xc5
github.com/panjf2000/ants/v2.(*goWorker).run.func1()
	/go/pkg/mod/github.com/panjf2000/ants/v2@v2.7.4/worker.go:67 +0x8d
created by github.com/panjf2000/ants/v2.(*goWorker).run in goroutine 2108
	/go/pkg/mod/github.com/panjf2000/ants/v2@v2.7.4/worker.go:48 +0x5c
Inner Join Free
Inner Join Free
Inner Join Free
Inner Join Free
Inner Join Free
Table Scan Prepare
Inner Join Free
Table Scan Free
waitRemoteRegsReady len(arg.RemoteRegs) 1
Inner Join Free
dispatch result.Batch == nil
dispatch Free err  <nil>
goroutine 2158 [running]:
runtime/debug.Stack()
	/usr/local/go/src/runtime/debug/stack.go:24 +0x5e
runtime/debug.PrintStack()
????? DeleteUuids [018eeba0-6625-7dfa-b49f-70038f3fa04c]
	/usr/local/go/src/runtime/debug/stack.go:16 +0x13
github.com/matrixorigin/matrixone/pkg/sql/colexec.(*Server).DeleteUuids(0xc0007cae40, {0xc00a9720a0?, 0x1, 0x2?})
Table Scan Prepare
err = <-infoToDispatchOperator.Err  <nil>
Table Scan Free
	/go/src/github.com/matrixorigin/matrixone/pkg/sql/colexec/server.go:91 +0xae
github.com/matrixorigin/matrixone/pkg/sql/colexec/dispatch.(*Argument).Free(0xc00944fd40, 0xc0089e6300?, 0x0, {0x0, 0x0})
	/go/src/github.com/matrixorigin/matrixone/pkg/sql/colexec/dispatch/types.go:131 +0x37d
github.com/matrixorigin/matrixone/pkg/vm/pipeline.(*Pipeline).Cleanup(0xc007abfec0, 0xc0089e6300, 0x90?, {0x0, 0x0})
	/go/src/github.com/matrixorigin/matrixone/pkg/vm/pipeline/types.go:111 +0x8e
github.com/matrixorigin/matrixone/pkg/sql/compile.(*Scope).MergeRun(0xc008a4b680, 0xc00b5b6b60)
	/go/src/github.com/matrixorigin/matrixone/pkg/sql/compile/scope.go:218 +0x4a6
github.com/matrixorigin/matrixone/pkg/sql/compile.(*Scope).MergeRun.func1()
	/go/src/github.com/matrixorigin/matrixone/pkg/sql/compile/scope.go:188 +0xc5
github.com/panjf2000/ants/v2.(*goWorker).run.func1()
	/go/pkg/mod/github.com/panjf2000/ants/v2@v2.7.4/worker.go:67 +0x8d
created by github.com/panjf2000/ants/v2.(*goWorker).run in goroutine 2212
	/go/pkg/mod/github.com/panjf2000/ants/v2@v2.7.4/worker.go:48 +0x5c
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
Table Scan Prepare
blkNum  1
Table Scan Free
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:43.963240 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 135.583µs, Establish: 6.685774ms, UpgradeTLS: 0s, Authenticate: 6.680524ms, SendErrPacket: 0s, SendOKPacket: 42.69µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 6.622966ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 169|10.158.4.99:57474|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 2161|018eeba0-6fd1-7acc-b55a-6b7ba981b789"}
{"level":"INFO","time":"2024/04/17 10:35:43.963444 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 169|10.158.4.99:57474|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 2161|018eeba0-6fd1-7acc-b55a-6b7ba981b789"}
{"level":"ERROR","time":"2024/04/17 10:35:43.963717 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"b53cc38a-4a8c-e68d-221c-25ee98e33c16","span_id":"a106f3f61ecca6f9"}}
{"level":"ERROR","time":"2024/04/17 10:35:43.963747 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 169|10.158.4.99:57474|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 2161|018eeba0-6fd1-7acc-b55a-6b7ba981b789","session_id":"018eeba0-6fd1-7acc-b55a-6b7ba981b789"}
{"level":"ERROR","time":"2024/04/17 10:35:43.963764 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 169|10.158.4.99:57474|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 2161|018eeba0-6fd1-7acc-b55a-6b7ba981b789","session_id":"018eeba0-6fd1-7acc-b55a-6b7ba981b789"}
{"level":"INFO","time":"2024/04/17 10:35:43.963818 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 169"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  5
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107406
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  6 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
dispatch Prepare  1 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107406

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107406
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 2
len(s.RemoteReceivRegInfos)  0 0
Inner Join Prepare 107406
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
Table Scan Prepare
Table Scan Prepare
Table Scan Prepare
Table Scan Prepare
Table Scan Free
Table Scan Free
Table Scan Free
Table Scan Free
Inner Join Free
Inner Join Free
Inner Join Free
Inner Join Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
{"level":"INFO","time":"2024/04/17 10:35:46.020752 +0000","caller":"blockio/pipeline.go:495","msg":"SelectivityStats: BLK[0/0=0.0000] COL[0/0=0.0000] RDF[0/0=0.0000,0/0=0.0000]RDD[0s/0s/0s/0]"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
cnList Length  2

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
blkNum  1
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Node_TableScan  1
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:46.955873 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 111.258µs, Establish: 5.578742ms, UpgradeTLS: 0s, Authenticate: 5.572842ms, SendErrPacket: 0s, SendOKPacket: 21.511µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.537636ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 170|10.158.4.99:57498|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 2133|018eeba0-7b86-7efb-83d4-b4648da54e45"}
{"level":"INFO","time":"2024/04/17 10:35:46.956060 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 170|10.158.4.99:57498|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 2133|018eeba0-7b86-7efb-83d4-b4648da54e45"}
{"level":"ERROR","time":"2024/04/17 10:35:46.960651 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"add6d4d6-4aa8-dcac-b400-086db017971c","span_id":"8782c17836815ff2"}}
{"level":"ERROR","time":"2024/04/17 10:35:46.960686 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 170|10.158.4.99:57498|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 2133|018eeba0-7b86-7efb-83d4-b4648da54e45","session_id":"018eeba0-7b86-7efb-83d4-b4648da54e45"}
{"level":"ERROR","time":"2024/04/17 10:35:46.960709 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 170|10.158.4.99:57498|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 2133|018eeba0-7b86-7efb-83d4-b4648da54e45","session_id":"018eeba0-7b86-7efb-83d4-b4648da54e45"}
{"level":"INFO","time":"2024/04/17 10:35:46.960783 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 170"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"ERROR","time":"2024/04/17 10:35:48.004839 +0000","name":"cn-service","caller":"v2@v2.0.0-20231122095211-6a25dc9130ca/session.go:515","msg":"close conneciton failed","uuid":"36333763-6132-3632-3864-633339323534","name":"pipeline-server","session-id":2,"error":"close tcp4 10.158.4.118:6002->10.158.4.119:39198: use of closed network connection"}
{"level":"ERROR","time":"2024/04/17 10:35:48.004903 +0000","name":"cn-service","caller":"v2@v2.0.0-20231122095211-6a25dc9130ca/session.go:515","msg":"close conneciton failed","uuid":"36333763-6132-3632-3864-633339323534","name":"pipeline-server","session-id":1,"error":"close tcp4 10.158.4.118:6002->10.158.4.119:38566: use of closed network connection"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
dispatch Prepare  2 0
cnList Length  2
blkNum  1
Node_TableScan  1
Table Scan Free

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:49.031974 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 101.82µs, Establish: 5.37457ms, UpgradeTLS: 0s, Authenticate: 5.369962ms, SendErrPacket: 0s, SendOKPacket: 20.609µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.33712ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 171|10.158.4.118:52194|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 2135|018eeba0-83a2-7b91-a383-35c358660f36"}
{"level":"INFO","time":"2024/04/17 10:35:49.032043 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 171|10.158.4.118:52194|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 2135|018eeba0-83a2-7b91-a383-35c358660f36"}
{"level":"ERROR","time":"2024/04/17 10:35:49.032180 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"4aec8540-3f81-9d5c-e989-13f9c71a08d2","span_id":"e5ac00bb5ab26df8"}}
{"level":"ERROR","time":"2024/04/17 10:35:49.032235 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 171|10.158.4.118:52194|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 2135|018eeba0-83a2-7b91-a383-35c358660f36","session_id":"018eeba0-83a2-7b91-a383-35c358660f36"}
{"level":"ERROR","time":"2024/04/17 10:35:49.032251 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 171|10.158.4.118:52194|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 2135|018eeba0-83a2-7b91-a383-35c358660f36","session_id":"018eeba0-83a2-7b91-a383-35c358660f36"}
{"level":"INFO","time":"2024/04/17 10:35:49.032299 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 171"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  5
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  6 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107414
len(s.RemoteReceivRegInfos)  0 2
!!!!! dispatch.SendToAllLocalFunc
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107414
len(s.RemoteReceivRegInfos)  0 0
Inner Join Prepare 107414
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 2

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Inner Join Prepare 107414
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
Table Scan Free
Table Scan Prepare
Table Scan Prepare
Table Scan Prepare
Table Scan Free
Table Scan Prepare
Table Scan Free
Inner Join Free
Table Scan Free
Inner Join Free
Inner Join Free
Table Scan Free
Inner Join Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare
cnList Length  2
blkNum  1
Node_TableScan  1
Table Scan Free

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:49.956513 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 91.572µs, Establish: 5.231244ms, UpgradeTLS: 0s, Authenticate: 5.225542ms, SendErrPacket: 0s, SendOKPacket: 24.075µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.186059ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 172|10.158.4.99:57526|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 2142|018eeba0-873f-763d-a874-913e51a710b1"}
{"level":"INFO","time":"2024/04/17 10:35:49.956693 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 172|10.158.4.99:57526|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 2142|018eeba0-873f-763d-a874-913e51a710b1"}
{"level":"ERROR","time":"2024/04/17 10:35:49.956988 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"fa6c5e15-92ba-dc74-106b-409410d62289","span_id":"76d0705b90c52e08"}}
{"level":"ERROR","time":"2024/04/17 10:35:49.957019 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 172|10.158.4.99:57526|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 2142|018eeba0-873f-763d-a874-913e51a710b1","session_id":"018eeba0-873f-763d-a874-913e51a710b1"}
{"level":"ERROR","time":"2024/04/17 10:35:49.957051 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 172|10.158.4.99:57526|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 2142|018eeba0-873f-763d-a874-913e51a710b1","session_id":"018eeba0-873f-763d-a874-913e51a710b1"}
{"level":"INFO","time":"2024/04/17 10:35:49.957098 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 172"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
{"level":"WARN","time":"2024/04/17 10:35:52.919601 +0000","name":"cn-service.morpc","caller":"morpc/backend.go:457","msg":"system is busy, write loop schedule interval is too large","uuid":"36333763-6132-3632-3864-633339323534","interval":"7.538568997s","last-ping-trigger-time":"0001/01/01 00:00:00.000000 +0000","ping-interval":"24s"}
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:52.975253 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 101.308µs, Establish: 4.800007ms, UpgradeTLS: 0s, Authenticate: 4.795218ms, SendErrPacket: 0s, SendOKPacket: 21.43µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 4.759972ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 173|10.158.4.99:57554|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 2238|018eeba0-9305-7300-b08b-2ed9d8bcdd33"}
{"level":"INFO","time":"2024/04/17 10:35:52.976497 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 173|10.158.4.99:57554|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 2238|018eeba0-9305-7300-b08b-2ed9d8bcdd33"}
{"level":"ERROR","time":"2024/04/17 10:35:52.977880 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"6b97c0a1-533c-c5fc-2204-f3ad1d59e5a0","span_id":"e22329a14b1db2bc"}}
{"level":"ERROR","time":"2024/04/17 10:35:52.977916 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 173|10.158.4.99:57554|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 2238|018eeba0-9305-7300-b08b-2ed9d8bcdd33","session_id":"018eeba0-9305-7300-b08b-2ed9d8bcdd33"}
{"level":"ERROR","time":"2024/04/17 10:35:52.977931 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 173|10.158.4.99:57554|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 2238|018eeba0-9305-7300-b08b-2ed9d8bcdd33","session_id":"018eeba0-9305-7300-b08b-2ed9d8bcdd33"}
{"level":"INFO","time":"2024/04/17 10:35:52.977985 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 173"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  5
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5930-7eac-bd42-a1676e4a049e[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5928-7f02-bada-c9666eca08fb[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-5923-78c4-90ae-208e83a83e26[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
len(s.RemoteReceivRegInfos)  0 0
Inner Join Prepare 107440

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  6 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
Inner Join Prepare 107440

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eeb9e-592c-7308-b1b2-7ea84fd2ef19[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107440
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 107440
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
Table Scan Prepare
Table Scan Prepare
Table Scan Prepare
Table Scan Free
Table Scan Free
Inner Join Free
Inner Join Free
Table Scan Free
Table Scan Prepare
Inner Join Free
Table Scan Free
Inner Join Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_cron_task[cron_task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option cron_expr next_time trigger_times create_at update_at],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:55.956415 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 103.955µs, Establish: 5.446165ms, UpgradeTLS: 0s, Authenticate: 5.440214ms, SendErrPacket: 0s, SendOKPacket: 16.761µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.402122ms","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 174|10.158.4.99:57582|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b: -- 0:0:0}|goRoutineId 2349|018eeba0-9eae-74d2-90fa-c9cd5c4b928e"}
{"level":"INFO","time":"2024/04/17 10:35:55.956756 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"36333763-6132-3632-3864-633339323534","session_info":"connectionId 174|10.158.4.99:57582|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 2349|018eeba0-9eae-74d2-90fa-c9cd5c4b928e"}
{"level":"ERROR","time":"2024/04/17 10:35:55.957042 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"bb95f519-3591-1c4d-001d-369086ec4120","span_id":"04ecd8110c15a8e7"}}
{"level":"ERROR","time":"2024/04/17 10:35:55.957079 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 174|10.158.4.99:57582|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 2349|018eeba0-9eae-74d2-90fa-c9cd5c4b928e","session_id":"018eeba0-9eae-74d2-90fa-c9cd5c4b928e"}
{"level":"ERROR","time":"2024/04/17 10:35:55.957105 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"36333763-6132-3632-3864-633339323534","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 174|10.158.4.99:57582|{account sys:27251767-1f1a-4220-b5fb-4328ec10a55b:moadmin -- 0:4294967295:0}|goRoutineId 2349|018eeba0-9eae-74d2-90fa-c9cd5c4b928e","session_id":"018eeba0-9eae-74d2-90fa-c9cd5c4b928e"}
{"level":"INFO","time":"2024/04/17 10:35:55.957162 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 174"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/17 10:35:55.987542 +0000","name":"cn-service.StatsLog","caller":"mometric/stats_log_writer.go:91","msg":"fs:CN:36333763-6132-3632-3864-633339323534:SHARED","uuid":"36333763-6132-3632-3864-633339323534","FileService Cache Hit Rate":0.6666666666666666,"FileService Cache Disk Hit Rate":0.6666666666666666,"FileService.S3.Get":2,"FileService.Cache.Read":6,"FileService.Cache.Hit":4,"FileService.Cache.Disk.Read":6,"FileService.Cache.Disk.Hit":4,"FileService.Cache.Disk.OpenIOEntryFile":4}
{"level":"INFO","time":"2024/04/17 10:35:55.987588 +0000","name":"cn-service.StatsLog","caller":"mometric/stats_log_writer.go:121","msg":"duration: 15000000000, blk hit rate: 0/0=1.0000, entry hit rate: 0/0=1.0000, (average) blks in each reader: 0/0=1.0000","uuid":"36333763-6132-3632-3864-633339323534"}
{"level":"INFO","time":"2024/04/17 10:35:56.021309 +0000","caller":"blockio/pipeline.go:495","msg":"SelectivityStats: BLK[0/0=0.0000] COL[0/0=0.0000] RDF[0/0=0.0000,0/0=0.0000]RDD[0s/0s/0s/0]"}
