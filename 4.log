/mo-service -cfg /tmp/tmp.kPdmylsLPf -debug-http=:6060
gc 1 @0.005s 5%: 0.009+0.74+0.18 ms clock, 0.079+0.047/1.0/1.4+1.4 ms cpu, 3->4->2 MB, 4 MB goal, 0 MB stacks, 0 MB globals, 8 P
gc 2 @0.011s 5%: 0.010+1.2+0.18 ms clock, 0.081+0.11/1.6/0.69+1.5 ms cpu, 5->5->4 MB, 6 MB goal, 0 MB stacks, 0 MB globals, 8 P
gc 3 @0.014s 7%: 0.009+0.88+0.18 ms clock, 0.074+0.38/1.1/2.1+1.5 ms cpu, 7->14->14 MB, 9 MB goal, 0 MB stacks, 0 MB globals, 8 P
gc 4 @0.016s 9%: 0.010+1.8+0.18 ms clock, 0.082+0.070/2.9/6.1+1.4 ms cpu, 24->35->35 MB, 29 MB goal, 0 MB stacks, 0 MB globals, 8 P
{"level":"INFO","time":"2024/04/18 04:48:10.132894 +0000","caller":"logutil/internal.go:37","msg":"MO logger init, level=info, log file=, stackLevel=panic"}
{"level":"INFO","time":"2024/04/18 04:48:10.133113 +0000","name":"cn-service.query-client.query-client.query-client","caller":"morpc/client.go:365","msg":"gc idle backends task started","uuid":"63393632-6236-3136-3936-393433626634"}
{"level":"INFO","time":"2024/04/18 04:48:10.133159 +0000","name":"cn-service.query-client.query-client.query-client","caller":"morpc/client.go:365","msg":"gc idle backends task started","uuid":"63393632-6236-3136-3936-393433626634"}
{"level":"INFO","time":"2024/04/18 04:48:10.133143 +0000","name":"cn-service.query-client.query-client.query-client","caller":"morpc/client.go:365","msg":"gc idle backends task started","uuid":"63393632-6236-3136-3936-393433626634"}
{"level":"INFO","time":"2024/04/18 04:48:10.133931 +0000","caller":"fileservice/local_fs.go:139","msg":"fileservice: memory cache initialized","fs-name":"LOCAL","config":{"MemoryCapacity":536870912,"DiskPath":"/var/lib/matrixone/data/local-cache","DiskCapacity":8589934592,"DiskMinEvictInterval":"7m0s","DiskEvictTarget":0.8,"RemoteCacheEnabled":false,"RPC":{"MaxConnections":1,"MaxIdleDuration":"1m0s","SendQueueSize":10240,"BusyQueueSize":7680,"WriteBufferSize":1024,"ReadBufferSize":1024,"MaxMessageSize":104857600,"PayloadCopyBufferSize":16384,"EnableCompress":false,"ServerWorkers":100,"ServerBufferQueueSize":100000,"BackendOptions":null,"ClientOptions":null,"CodecOptions":null}}}
{"level":"INFO","time":"2024/04/18 04:48:12.916265 +0000","caller":"fileservice/aws_sdk_v2.go:229","msg":"new object storage","sdk":"aws v2","arguments":"{\"Name\":\"SHARED\",\"KeyPrefix\":\"zy/data\",\"SharedConfigProfile\":\"\",\"NoDefaultCredentials\":false,\"NoBucketValidation\":false,\"Bucket\":\"mo-checkin-gz-1308875761\",\"Endpoint\":\"https://cos.ap-guangzhou.myqcloud.com\",\"IsMinio\":false,\"Region\":\"\",\"CertFiles\":null}"}
{"level":"INFO","time":"2024/04/18 04:48:12.950512 +0000","caller":"fileservice/s3_fs.go:138","msg":"fileservice: memory cache initialized","fs-name":"SHARED","capacity":1073741824}
{"level":"INFO","time":"2024/04/18 04:48:12.952493 +0000","caller":"fileservice/s3_fs.go:156","msg":"fileservice: disk cache initialized","fs-name":"SHARED","config":{"MemoryCapacity":1073741824,"DiskPath":"/var/lib/matrixone/disk-cache","DiskCapacity":107374182400,"DiskMinEvictInterval":"7m0s","DiskEvictTarget":0.8,"RemoteCacheEnabled":false,"RPC":{"MaxConnections":1,"MaxIdleDuration":"1m0s","SendQueueSize":10240,"BusyQueueSize":7680,"WriteBufferSize":1024,"ReadBufferSize":1024,"MaxMessageSize":104857600,"PayloadCopyBufferSize":16384,"EnableCompress":false,"ServerWorkers":100,"ServerBufferQueueSize":100000,"BackendOptions":null,"ClientOptions":null,"CodecOptions":null}}}
{"level":"INFO","time":"2024/04/18 04:48:13.183253 +0000","caller":"fileservice/aws_sdk_v2.go:229","msg":"new object storage","sdk":"aws v2","arguments":"{\"Name\":\"ETL\",\"KeyPrefix\":\"zy/etl\",\"SharedConfigProfile\":\"\",\"NoDefaultCredentials\":false,\"NoBucketValidation\":false,\"Bucket\":\"mo-checkin-gz-1308875761\",\"Endpoint\":\"https://cos.ap-guangzhou.myqcloud.com\",\"IsMinio\":false,\"Region\":\"\",\"CertFiles\":null}"}
{"level":"INFO","time":"2024/04/18 04:48:13.209094 +0000","caller":"fileservice/s3_fs.go:156","msg":"fileservice: disk cache initialized","fs-name":"ETL","config":{"MemoryCapacity":1,"DiskPath":"/var/lib/matrixone/data/etl-cache","DiskCapacity":8589934592,"DiskMinEvictInterval":"7m0s","DiskEvictTarget":0.8,"RemoteCacheEnabled":false,"RPC":{"MaxConnections":1,"MaxIdleDuration":"1m0s","SendQueueSize":10240,"BusyQueueSize":7680,"WriteBufferSize":1024,"ReadBufferSize":1024,"MaxMessageSize":104857600,"PayloadCopyBufferSize":16384,"EnableCompress":false,"ServerWorkers":100,"ServerBufferQueueSize":100000,"BackendOptions":null,"ClientOptions":null,"CodecOptions":null}}}
gc 5 @3.094s 0%: 0.023+3.8+0.021 ms clock, 0.18+0.18/6.7/16+0.17 ms cpu, 60->89->84 MB, 70 MB goal, 0 MB stacks, 0 MB globals, 8 P
{"level":"INFO","time":"2024/04/18 04:48:13.210138 +0000","caller":"motrace/trace.go:153","msg":"init GlobalBatchProcessor"}
{"level":"INFO","time":"2024/04/18 04:48:13.210192 +0000","name":"cn-service.MOCollector","caller":"export/batch_processor.go:439","msg":"MOCollector Start","uuid":"63393632-6236-3136-3936-393433626634","MODiscardable":true}
{"level":"INFO","time":"2024/04/18 04:48:13.210236 +0000","caller":"motrace/trace.go:158","msg":"init trace span processor"}
{"level":"INFO","time":"2024/04/18 04:48:13.210808 +0000","caller":"mometric/metric.go:147","msg":"cross service metrics task started"}
{"level":"INFO","time":"2024/04/18 04:48:13.214515 +0000","name":"logservice-client","caller":"morpc/client.go:365","msg":"gc idle backends task started"}
{"level":"INFO","time":"2024/04/18 04:48:13.214984 +0000","caller":"logservice/hakeeper_client.go:626","msg":"isHAKeeper: true, err: <nil>"}
{"level":"INFO","time":"2024/04/18 04:48:13.218083 +0000","caller":"mo-service/launch.go:278","msg":"shard ready"}
{"level":"ERROR","time":"2024/04/18 04:48:13.218123 +0000","name":"hakeeper-client-backend","caller":"morpc/backend.go:572","msg":"read from backend failed","remote":"mo-checkin-regression-log-2.mo-checkin-regression-log-headless.zy.svc:32001","backend-id":"018eef88-a39a-7d5c-94a7-4cde9f86579e","error":"illegal state"}
{"level":"ERROR","time":"2024/04/18 04:48:13.218176 +0000","name":"hakeeper-client-backend","caller":"morpc/backend.go:576","msg":"read loop stopped","remote":"mo-checkin-regression-log-2.mo-checkin-regression-log-headless.zy.svc:32001","backend-id":"018eef88-a39a-7d5c-94a7-4cde9f86579e"}
{"level":"ERROR","time":"2024/04/18 04:48:13.223276 +0000","name":"hakeeper-client-backend","caller":"v2@v2.0.0-20231122095211-6a25dc9130ca/session.go:515","msg":"close conneciton failed","remote":"mo-checkin-regression-log-2.mo-checkin-regression-log-headless.zy.svc:32001","backend-id":"018eef88-a39a-7d5c-94a7-4cde9f86579e","session-id":0,"error":"close tcp4 10.158.5.50:58720->10.158.5.38:32001: use of closed network connection"}
{"level":"ERROR","time":"2024/04/18 04:48:13.228422 +0000","name":"logservice-client","caller":"morpc/client.go:374","msg":"gc idle backends task stopped"}
{"level":"ERROR","time":"2024/04/18 04:48:13.228433 +0000","name":"logservice-client","caller":"morpc/client.go:397","msg":"gc inactive backends task stopped"}
{"level":"INFO","time":"2024/04/18 04:48:13.239292 +0000","name":"logservice-client","caller":"morpc/client.go:365","msg":"gc idle backends task started"}
{"level":"INFO","time":"2024/04/18 04:48:13.239758 +0000","caller":"logservice/hakeeper_client.go:626","msg":"isHAKeeper: true, err: <nil>"}
{"level":"INFO","time":"2024/04/18 04:48:13.239936 +0000","name":"cn-service.lockservice","caller":"lockservice/deadlock.go:119","msg":"dead lock checker","uuid":"63393632-6236-3136-3936-393433626634"}
{"level":"INFO","time":"2024/04/18 04:48:13.239946 +0000","name":"cn-service.lockservice","caller":"lockservice/deadlock.go:119","msg":"dead lock checker","uuid":"63393632-6236-3136-3936-393433626634"}
{"level":"INFO","time":"2024/04/18 04:48:13.239951 +0000","name":"cn-service.lockservice","caller":"lockservice/deadlock.go:119","msg":"dead lock checker","uuid":"63393632-6236-3136-3936-393433626634"}
{"level":"INFO","time":"2024/04/18 04:48:13.239988 +0000","name":"cn-service.lockservice.lock-client.lock-client","caller":"morpc/client.go:365","msg":"gc idle backends task started","uuid":"63393632-6236-3136-3936-393433626634"}
{"level":"INFO","time":"2024/04/18 04:48:13.239987 +0000","name":"cn-service.lockservice","caller":"lockservice/deadlock.go:119","msg":"dead lock checker","uuid":"63393632-6236-3136-3936-393433626634"}
{"level":"INFO","time":"2024/04/18 04:48:13.240125 +0000","name":"cn-service.lockservice","caller":"lockservice/lock_table_keeper.go:89","msg":"keep remote locks task","uuid":"63393632-6236-3136-3936-393433626634"}
{"level":"INFO","time":"2024/04/18 04:48:13.240127 +0000","name":"cn-service.lockservice","caller":"lockservice/lock_table_keeper.go:72","msg":"keep lock table bind task","uuid":"63393632-6236-3136-3936-393433626634"}
{"level":"INFO","time":"2024/04/18 04:48:13.240143 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:115","msg":"lock service start successfully","uuid":"63393632-6236-3136-3936-393433626634","serviceID":"171341569323978639363393632-6236-3136-3936-393433626634"}
{"level":"INFO","time":"2024/04/18 04:48:13.240305 +0000","name":"cn-service","caller":"logutil/action.go:49","msg":"start to run async task","uuid":"63393632-6236-3136-3936-393433626634","action":"run-async-task","async-task":"cnservice/heartbeat-task"}
{"level":"INFO","time":"2024/04/18 04:48:13.240483 +0000","name":"cn-service.query-client.query-client.query-client","caller":"morpc/client.go:365","msg":"gc idle backends task started","uuid":"63393632-6236-3136-3936-393433626634"}
{"level":"ERROR","time":"2024/04/18 04:48:13.240556 +0000","caller":"fileservice/local_fs.go:441","msg":"error: file cnservice/63393632-6236-3136-3936-393433626634 is not found"}
{"level":"INFO","time":"2024/04/18 04:48:13.244267 +0000","caller":"cnservice/server.go:437","msg":"Shutdown The Server With Ctrl+C | Ctrl+\\."}
{"level":"INFO","time":"2024/04/18 04:48:13.244298 +0000","caller":"cnservice/server.go:444","msg":"Initialize the engine ..."}
{"level":"INFO","time":"2024/04/18 04:48:13.244418 +0000","name":"cn-service.txn-client.txn-client","caller":"morpc/client.go:365","msg":"gc idle backends task started","uuid":"63393632-6236-3136-3936-393433626634"}
{"level":"INFO","time":"2024/04/18 04:48:13.249304 +0000","name":"cn-log-tail-client.logtail-client","caller":"morpc/client.go:365","msg":"gc idle backends task started"}
{"level":"INFO","time":"2024/04/18 04:48:13.250784 +0000","name":"cn-service","caller":"bootstrap/service.go:308","msg":"start to check bootstrap state","uuid":"63393632-6236-3136-3936-393433626634"}
{"level":"WARN","time":"2024/04/18 04:48:13.250822 +0000","name":"cn-service.txn","caller":"client/client.go:457","msg":"txn client is in pause state, wait for it to be ready","uuid":"63393632-6236-3136-3936-393433626634","txn ID":"018eef88a3c2749dbdf368c12d6db4c0"}
{"level":"INFO","time":"2024/04/18 04:48:13.251144 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 1, tbl: 1] succeed"}
{"level":"INFO","time":"2024/04/18 04:48:13.256023 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 1, tbl: 2] succeed"}
{"level":"INFO","time":"2024/04/18 04:48:13.265489 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 1, tbl: 3] succeed"}
{"level":"INFO","time":"2024/04/18 04:48:13.268399 +0000","name":"cn-service.txn","caller":"client/client.go:555","msg":"txn client status changed to normal","uuid":"63393632-6236-3136-3936-393433626634"}
{"level":"WARN","time":"2024/04/18 04:48:13.268442 +0000","name":"cn-service.txn","caller":"client/client.go:462","msg":"txn client is in ready state","uuid":"63393632-6236-3136-3936-393433626634","txn ID":"018eef88a3c2749dbdf368c12d6db4c0"}
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_database[datname account_id],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:48:14.245595 +0000","name":"cn-service","caller":"bootstrap/service.go:311","msg":"mo already bootstrapped","uuid":"63393632-6236-3136-3936-393433626634"}
{"level":"INFO","time":"2024/04/18 04:48:14.245731 +0000","name":"cn-service","caller":"bootstrap/service_upgrade.go:36","msg":"start bootstrap upgrade","uuid":"63393632-6236-3136-3936-393433626634","module":"upgrade-framework"}
{"level":"INFO","time":"2024/04/18 04:48:14.245788 +0000","name":"cn-service","caller":"bootstrap/service_upgrade.go:498","msg":"upgrade config","uuid":"63393632-6236-3136-3936-393433626634","module":"upgrade-framework","check-upgrade-duration":"5s","check-upgrade-tenant-duration":"10s","upgrade-tenant-tasks":4,"tenant-batch":16}
{"level":"INFO","time":"2024/04/18 04:48:14.246159 +0000","caller":"frontend/server.go:70","msg":"Server Listening on : 0.0.0.0:6001 "}
{"level":"INFO","time":"2024/04/18 04:48:14.246177 +0000","name":"cn-backend.pipeline-client","caller":"morpc/client.go:365","msg":"gc idle backends task started"}
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_tables[relname reldatabase relkind account_id],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_columns[account_id att_database att_relname attname atttyp attnum attnotnull att_default att_is_auto_increment att_comment],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:48:14.250859 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:549","msg":"bind created","uuid":"63393632-6236-3136-3936-393433626634","service":"171341569323978639363393632-6236-3136-3936-393433626634","remote":true,"bind":"272401-171341568982252908831646437-3334-3835-6466-336534663039-1"}
cnList Length  2
blkNum  1
{"level":"INFO","time":"2024/04/18 04:48:14.252913 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 1, tbl: 272401] succeed"}
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_version[version version_offset state create_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:48:14.254197 +0000","name":"cn-service","caller":"bootstrap/service_upgrade.go:140","msg":"get current mo cluster latest version","uuid":"63393632-6236-3136-3936-393433626634","module":"upgrade-framework","latest":"1.2.0","final":"1.2.0"}
{"level":"INFO","time":"2024/04/18 04:48:15.249487 +0000","name":"cn-service","caller":"cnservice/server_heartbeat.go:118","msg":"applying schedule command","uuid":"63393632-6236-3136-3936-393433626634","command":"C/CreateTask 63393632-6236-3136-3936-393433626634"}
{"level":"INFO","time":"2024/04/18 04:48:15.253779 +0000","name":"cn-service","caller":"cnservice/server_heartbeat.go:118","msg":"applying schedule command","uuid":"63393632-6236-3136-3936-393433626634","command":"C/JoinGossipCluster 63393632-6236-3136-3936-393433626634"}
{"level":"INFO","time":"2024/04/18 04:48:15.254612 +0000","name":"cn-service.gossip","caller":"gossip/node.go:135","msg":"node join cluster successfully","uuid":"63393632-6236-3136-3936-393433626634","node ID":"63393632-6236-3136-3936-393433626634","joined nodes":1}
cnList Length  2
blkNum  1
Node_TableScan  1
{"level":"INFO","time":"2024/04/18 04:48:19.255590 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:549","msg":"bind created","uuid":"63393632-6236-3136-3936-393433626634","service":"171341569323978639363393632-6236-3136-3936-393433626634","remote":true,"bind":"6816778640017238340-171341568982252908831646437-3334-3835-6466-336534663039-1"}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_version[version version_offset state __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:48:19.256673 +0000","name":"cn-service","caller":"bootstrap/service_upgrade.go:320","msg":"final version state loaded","uuid":"63393632-6236-3136-3936-393433626634","module":"upgrade-framework","final":"1.2.0","versionOffset":35,"state":2}
{"level":"INFO","time":"2024/04/18 04:48:19.257257 +0000","name":"cn-service","caller":"bootstrap/service_upgrade.go:276","msg":"upgrade task exit","uuid":"63393632-6236-3136-3936-393433626634","module":"upgrade-framework","final":"1.2.0"}
cnList Length  2
blkNum  1
{"level":"INFO","time":"2024/04/18 04:48:19.453820 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 1, tbl: 272426] succeed"}
Node_TableScan  1
{"level":"INFO","time":"2024/04/18 04:48:19.454328 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:549","msg":"bind created","uuid":"63393632-6236-3136-3936-393433626634","service":"171341569323978639363393632-6236-3136-3936-393433626634","remote":true,"bind":"7841570287010960367-171341568982252908831646437-3334-3835-6466-336534663039-1"}
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
{"level":"INFO","time":"2024/04/18 04:48:19.455619 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:549","msg":"bind created","uuid":"63393632-6236-3136-3936-393433626634","service":"171341569323978639363393632-6236-3136-3936-393433626634","remote":true,"bind":"272426-171341568982252908831646437-3334-3835-6466-336534663039-1"}
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:48:19.456133 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:276","msg":"try to get columns","uuid":"63393632-6236-3136-3936-393433626634","tableId":272426,"txn":"018eef88bc0072a286483075249f67fd/Active/S:1713415699455081637-1"}
cnList Length  2
blkNum  1
{"level":"INFO","time":"2024/04/18 04:48:19.457069 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 1, tbl: 272387] succeed"}
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1
{"level":"INFO","time":"2024/04/18 04:48:19.458988 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:549","msg":"bind created","uuid":"63393632-6236-3136-3936-393433626634","service":"171341569323978639363393632-6236-3136-3936-393433626634","remote":true,"bind":"4557455885355732384-171341568982252908831646437-3334-3835-6466-336534663039-1"}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:48:19.459779 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:549","msg":"bind created","uuid":"63393632-6236-3136-3936-393433626634","service":"171341569323978639363393632-6236-3136-3936-393433626634","remote":true,"bind":"272387-171341568982252908831646437-3334-3835-6466-336534663039-1"}
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:48:19.470227 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"63393632-6236-3136-3936-393433626634","table-id":272426,"txn":""}
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:48:19.474674 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 5.15208ms, Establish: 23.173964ms, UpgradeTLS: 0s, Authenticate: 23.168272ms, SendErrPacket: 0s, SendOKPacket: 20.669µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 23.128537ms","uuid":"63393632-6236-3136-3936-393433626634","session_info":"connectionId 101|10.158.5.42:36574|{account sys:mo_logger: -- 0:0:0}|goRoutineId 459|018eef88-bbfb-77c8-818c-6a9f61c2b7b7"}
{"level":"INFO","time":"2024/04/18 04:48:19.474898 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"63393632-6236-3136-3936-393433626634","session_info":"connectionId 101|10.158.5.42:36574|{account sys:mo_logger:moadmin -- 0:4294967295:0}|goRoutineId 459|018eef88-bbfb-77c8-818c-6a9f61c2b7b7"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0
{"level":"INFO","time":"2024/04/18 04:48:19.477350 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:549","msg":"bind created","uuid":"63393632-6236-3136-3936-393433626634","service":"171341569323978639363393632-6236-3136-3936-393433626634","remote":true,"bind":"16775188172115873373-171341568982252908831646437-3334-3835-6466-336534663039-1"}

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
{"level":"INFO","time":"2024/04/18 04:48:19.478499 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:276","msg":"try to get columns","uuid":"63393632-6236-3136-3936-393433626634","tableId":272474,"txn":"018eef88bc167a729939e8e3f32d1778/Active/S:1713415699480914444-1"}
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:48:19.484519 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"63393632-6236-3136-3936-393433626634","table-id":272474,"txn":""}
cnList Length  2
blkNum  0
{"level":"INFO","time":"2024/04/18 04:48:19.491883 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:549","msg":"bind created","uuid":"63393632-6236-3136-3936-393433626634","service":"171341569323978639363393632-6236-3136-3936-393433626634","remote":true,"bind":"8403917406817639794-171341568982252908831646437-3334-3835-6466-336534663039-1"}

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
{"level":"INFO","time":"2024/04/18 04:48:19.495330 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:276","msg":"try to get columns","uuid":"63393632-6236-3136-3936-393433626634","tableId":272499,"txn":"018eef88bc27713abbb212ae5080be2a/Active/S:1713415699495447060-1"}
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:48:19.501240 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"63393632-6236-3136-3936-393433626634","table-id":272499,"txn":""}
gc 6 @11.194s 0%: 0.032+5.4+0.002 ms clock, 0.26+0.36/10/28+0.022 ms cpu, 143->143->115 MB, 168 MB goal, 0 MB stacks, 0 MB globals, 8 P
{"level":"INFO","time":"2024/04/18 04:48:23.244968 +0000","caller":"blockio/pipeline.go:495","msg":"SelectivityStats: BLK[0/0=0.0000] COL[0/0=0.0000] RDF[0/0=0.0000,0/0=0.0000]RDD[0s/0s/0s/0]"}
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:48:23.841668 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 156.565µs, Establish: 6.613209ms, UpgradeTLS: 0s, Authenticate: 6.605844ms, SendErrPacket: 0s, SendOKPacket: 22.763µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 6.563306ms","uuid":"63393632-6236-3136-3936-393433626634","session_info":"connectionId 102|10.158.5.33:56236|{account sys:mo_logger: -- 0:0:0}|goRoutineId 465|018eef88-cd1a-7f24-84eb-260802c76d6a"}
{"level":"INFO","time":"2024/04/18 04:48:23.841914 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"63393632-6236-3136-3936-393433626634","session_info":"connectionId 102|10.158.5.33:56236|{account sys:mo_logger:moadmin -- 0:4294967295:0}|goRoutineId 465|018eef88-cd1a-7f24-84eb-260802c76d6a"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:48:24.809803 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 119.645µs, Establish: 6.53433ms, UpgradeTLS: 0s, Authenticate: 6.526186ms, SendErrPacket: 0s, SendOKPacket: 21.862µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 6.486249ms","uuid":"63393632-6236-3136-3936-393433626634","session_info":"connectionId 103|10.158.5.49:41420|{account sys:mo_logger: -- 0:0:0}|goRoutineId 267|018eef88-d0e2-7ad6-861e-62a12de0bd60"}
{"level":"INFO","time":"2024/04/18 04:48:24.809969 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"63393632-6236-3136-3936-393433626634","session_info":"connectionId 103|10.158.5.49:41420|{account sys:mo_logger:moadmin -- 0:4294967295:0}|goRoutineId 267|018eef88-d0e2-7ad6-861e-62a12de0bd60"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  1
cnList Length  2
blkNum  1
Node_TableScan  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
Table Scan Prepare
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:48:25.262677 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 156.645µs, Establish: 7.665055ms, UpgradeTLS: 0s, Authenticate: 7.659435ms, SendErrPacket: 0s, SendOKPacket: 21.52µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 7.617156ms","uuid":"63393632-6236-3136-3936-393433626634","session_info":"connectionId 104|10.158.5.50:36018|{account sys:8cf1a8f5-9a65-4066-8295-9b248abbd2f9: -- 0:0:0}|goRoutineId 471|018eef88-d2a6-71b4-aafd-0aa00e757025"}
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:48:25.262758 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"63393632-6236-3136-3936-393433626634","session_info":"connectionId 104|10.158.5.50:36018|{account sys:8cf1a8f5-9a65-4066-8295-9b248abbd2f9:moadmin -- 0:4294967295:0}|goRoutineId 471|018eef88-d2a6-71b4-aafd-0aa00e757025"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
{"level":"INFO","time":"2024/04/18 04:48:25.264291 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 272389, tbl: 272394] succeed"}
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:48:25.267082 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 120.107µs, Establish: 11.953895ms, UpgradeTLS: 0s, Authenticate: 11.948956ms, SendErrPacket: 0s, SendOKPacket: 25.889µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 11.90863ms","uuid":"63393632-6236-3136-3936-393433626634","session_info":"connectionId 105|10.158.5.50:36020|{account sys:8cf1a8f5-9a65-4066-8295-9b248abbd2f9: -- 0:0:0}|goRoutineId 472|018eef88-d2a7-7d80-be4b-e2bf8e2bd47d"}
{"level":"INFO","time":"2024/04/18 04:48:25.267142 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"63393632-6236-3136-3936-393433626634","session_info":"connectionId 105|10.158.5.50:36020|{account sys:8cf1a8f5-9a65-4066-8295-9b248abbd2f9:moadmin -- 0:4294967295:0}|goRoutineId 472|018eef88-d2a7-7d80-be4b-e2bf8e2bd47d"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:48:25.268686 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 272389, tbl: 272390] succeed"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"ERROR","time":"2024/04/18 04:48:25.270138 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"47aa1de0-d9f1-bc31-daee-121d118a6923","span_id":"ade383d57590971b"}}
{"level":"ERROR","time":"2024/04/18 04:48:25.270186 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"63393632-6236-3136-3936-393433626634","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 104|10.158.5.50:36018|{account sys:8cf1a8f5-9a65-4066-8295-9b248abbd2f9:moadmin -- 0:4294967295:0}|goRoutineId 471|018eef88-d2a6-71b4-aafd-0aa00e757025","session_id":"018eef88-d2a6-71b4-aafd-0aa00e757025"}
{"level":"ERROR","time":"2024/04/18 04:48:25.270211 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"63393632-6236-3136-3936-393433626634","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 104|10.158.5.50:36018|{account sys:8cf1a8f5-9a65-4066-8295-9b248abbd2f9:moadmin -- 0:4294967295:0}|goRoutineId 471|018eef88-d2a6-71b4-aafd-0aa00e757025","session_id":"018eef88-d2a6-71b4-aafd-0aa00e757025"}
{"level":"INFO","time":"2024/04/18 04:48:25.270279 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 104"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:48:28.211005 +0000","name":"cn-service.StatsLog","caller":"mometric/stats_log_writer.go:91","msg":"fs:CN:63393632-6236-3136-3936-393433626634:LOCAL","uuid":"63393632-6236-3136-3936-393433626634","FileService.Cache.Read":1,"FileService.Cache.Memory.Read":1,"FileService.FileWithChecksum.Write":38,"FileService.FileWithChecksum.UnderlyingWrite":42}
{"level":"INFO","time":"2024/04/18 04:48:28.211067 +0000","name":"cn-service.StatsLog","caller":"mometric/stats_log_writer.go:121","msg":"duration: 15000000000, blk hit rate: 0/0=1.0000, entry hit rate: 0/0=1.0000, (average) blks in each reader: 0/0=1.0000","uuid":"63393632-6236-3136-3936-393433626634"}
cnList Length  2
blkNum  0
{"level":"INFO","time":"2024/04/18 04:48:28.822496 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:549","msg":"bind created","uuid":"63393632-6236-3136-3936-393433626634","service":"171341569323978639363393632-6236-3136-3936-393433626634","remote":true,"bind":"4123722773182122388-171341568982252908831646437-3334-3835-6466-336534663039-1"}

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
{"level":"INFO","time":"2024/04/18 04:48:28.824599 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:276","msg":"try to get columns","uuid":"63393632-6236-3136-3936-393433626634","tableId":272498,"txn":"018eef88e0987d7c92698e8eda8cc483/Active/S:1713415708822931870-1"}
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:48:28.830729 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"63393632-6236-3136-3936-393433626634","table-id":272498,"txn":""}
{"level":"INFO","time":"2024/04/18 04:48:33.245099 +0000","caller":"blockio/pipeline.go:495","msg":"SelectivityStats: BLK[0/0=0.0000] COL[0/0=0.0000] RDF[0/0=0.0000,0/0=0.0000]RDD[0s/0s/0s/0]"}
cnList Length  2
{"level":"WARN","time":"2024/04/18 04:48:34.442553 +0000","name":"cn-service.morpc","caller":"morpc/backend.go:457","msg":"system is busy, write loop schedule interval is too large","uuid":"63393632-6236-3136-3936-393433626634","interval":"5.620755302s","last-ping-trigger-time":"0001/01/01 00:00:00.000000 +0000","ping-interval":"24s"}
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0
{"level":"INFO","time":"2024/04/18 04:48:39.809719 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:549","msg":"bind created","uuid":"63393632-6236-3136-3936-393433626634","service":"171341569323978639363393632-6236-3136-3936-393433626634","remote":true,"bind":"2410261466237513817-171341568982252908831646437-3334-3835-6466-336534663039-1"}

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
{"level":"INFO","time":"2024/04/18 04:48:39.810767 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:276","msg":"try to get columns","uuid":"63393632-6236-3136-3936-393433626634","tableId":272475,"txn":"018eef890b827922af1d957bb2892402/Active/S:1713415719807819433-1"}
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:48:39.816898 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"63393632-6236-3136-3936-393433626634","table-id":272475,"txn":""}
gc 7 @30.199s 0%: 0.053+5.4+0.014 ms clock, 0.43+0.28/9.6/23+0.11 ms cpu, 197->197->118 MB, 231 MB goal, 0 MB stacks, 0 MB globals, 8 P
{"level":"INFO","time":"2024/04/18 04:48:43.211866 +0000","name":"cn-service.StatsLog","caller":"mometric/stats_log_writer.go:121","msg":"duration: 15000000000, blk hit rate: 0/0=1.0000, entry hit rate: 0/0=1.0000, (average) blks in each reader: 0/0=1.0000","uuid":"63393632-6236-3136-3936-393433626634"}
{"level":"INFO","time":"2024/04/18 04:48:43.245090 +0000","caller":"blockio/pipeline.go:495","msg":"SelectivityStats: BLK[0/0=0.0000] COL[0/0=0.0000] RDF[0/0=0.0000,0/0=0.0000]RDD[0s/0s/0s/0]"}
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
{"level":"WARN","time":"2024/04/18 04:48:49.443216 +0000","name":"cn-service.morpc","caller":"morpc/backend.go:457","msg":"system is busy, write loop schedule interval is too large","uuid":"63393632-6236-3136-3936-393433626634","interval":"5.621448324s","last-ping-trigger-time":"2024/04/18 04:48:43.476993 +0000","ping-interval":"24s"}
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
{"level":"INFO","time":"2024/04/18 04:48:53.245408 +0000","caller":"blockio/pipeline.go:495","msg":"SelectivityStats: BLK[0/0=0.0000] COL[0/0=0.0000] RDF[0/0=0.0000,0/0=0.0000]RDD[0s/0s/0s/0]"}
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:48:58.211974 +0000","name":"cn-service.StatsLog","caller":"mometric/stats_log_writer.go:121","msg":"duration: 15000000000, blk hit rate: 0/0=1.0000, entry hit rate: 0/0=1.0000, (average) blks in each reader: 0/0=1.0000","uuid":"63393632-6236-3136-3936-393433626634"}
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
{"level":"INFO","time":"2024/04/18 04:49:03.245711 +0000","caller":"blockio/pipeline.go:495","msg":"SelectivityStats: BLK[0/0=0.0000] COL[0/0=0.0000] RDF[0/0=0.0000,0/0=0.0000]RDD[0s/0s/0s/0]"}
cnList Length  2
{"level":"WARN","time":"2024/04/18 04:49:04.444303 +0000","name":"cn-service.morpc","caller":"morpc/backend.go:457","msg":"system is busy, write loop schedule interval is too large","uuid":"63393632-6236-3136-3936-393433626634","interval":"5.622474502s","last-ping-trigger-time":"2024/04/18 04:48:43.476993 +0000","ping-interval":"24s"}
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
{"level":"ERROR","time":"2024/04/18 04:49:04.479928 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"f63b496a-f3aa-6877-46ce-5fa5ec1299e2","span_id":"d9e2f2104c2d4312"}}
{"level":"INFO","time":"2024/04/18 04:49:04.480024 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 101"}
gc 8 @54.364s 0%: 0.033+4.5+0.003 ms clock, 0.26+0.13/8.9/25+0.024 ms cpu, 203->204->123 MB, 238 MB goal, 0 MB stacks, 0 MB globals, 8 P
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
{"level":"ERROR","time":"2024/04/18 04:49:08.843149 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"d3f8720e-0ab2-644e-d2ec-d1d7ffdda154","span_id":"3e8f1d247b9a8b5b"}}
{"level":"INFO","time":"2024/04/18 04:49:08.843251 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 102"}
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
{"level":"ERROR","time":"2024/04/18 04:49:09.814445 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"392d20a4-ee31-fef5-aacf-0ab8cfdd3b01","span_id":"c860fa1cfb2bb21b"}}
{"level":"INFO","time":"2024/04/18 04:49:09.814553 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 103"}
{"level":"INFO","time":"2024/04/18 04:49:13.211384 +0000","name":"cn-service.StatsLog","caller":"mometric/stats_log_writer.go:121","msg":"duration: 15000000000, blk hit rate: 0/0=1.0000, entry hit rate: 0/0=1.0000, (average) blks in each reader: 0/0=1.0000","uuid":"63393632-6236-3136-3936-393433626634"}
{"level":"INFO","time":"2024/04/18 04:49:13.211393 +0000","name":"cn-service.MOCollector","caller":"export/batch_processor.go:638","msg":"stats","uuid":"63393632-6236-3136-3936-393433626634","MODiscardable":true,"MaxBufferCnt":2147483647,"TotalBufferCnt":2,"QueueLength":0,"rawlogBufferCnt":1,"rawlogDiscardCnt":0,"statement_infoBufferCnt":1,"statement_infoDiscardCnt":0}
{"level":"INFO","time":"2024/04/18 04:49:13.244874 +0000","caller":"blockio/pipeline.go:495","msg":"SelectivityStats: BLK[0/0=0.0000] COL[0/0=0.0000] RDF[0/0=0.0000,0/0=0.0000]RDD[0s/0s/0s/0]"}
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:49:13.828205 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 142.31µs, Establish: 6.040125ms, UpgradeTLS: 0s, Authenticate: 6.033442ms, SendErrPacket: 0s, SendOKPacket: 21.53µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 5.99529ms","uuid":"63393632-6236-3136-3936-393433626634","session_info":"connectionId 106|10.158.5.49:41660|{account sys:mo_logger: -- 0:0:0}|goRoutineId 727|018eef89-905d-7cc6-85ac-b4d4a5863380"}
{"level":"INFO","time":"2024/04/18 04:49:13.828402 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"63393632-6236-3136-3936-393433626634","session_info":"connectionId 106|10.158.5.49:41660|{account sys:mo_logger:moadmin -- 0:4294967295:0}|goRoutineId 727|018eef89-905d-7cc6-85ac-b4d4a5863380"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:49:19.451702 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 135.517µs, Establish: 6.440907ms, UpgradeTLS: 0s, Authenticate: 6.435024ms, SendErrPacket: 0s, SendOKPacket: 22.593µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 6.39456ms","uuid":"63393632-6236-3136-3936-393433626634","session_info":"connectionId 107|10.158.5.42:36868|{account sys:mo_logger: -- 0:0:0}|goRoutineId 746|018eef89-a654-7f72-bc9f-35f0771326da"}
{"level":"INFO","time":"2024/04/18 04:49:19.451925 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"63393632-6236-3136-3936-393433626634","session_info":"connectionId 107|10.158.5.42:36868|{account sys:mo_logger:moadmin -- 0:4294967295:0}|goRoutineId 746|018eef89-a654-7f72-bc9f-35f0771326da"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
{"level":"WARN","time":"2024/04/18 04:49:19.452869 +0000","name":"cn-service.morpc","caller":"morpc/backend.go:457","msg":"system is busy, write loop schedule interval is too large","uuid":"63393632-6236-3136-3936-393433626634","interval":"5.621357622s","last-ping-trigger-time":"2024/04/18 04:49:07.477384 +0000","ping-interval":"24s"}
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
{"level":"INFO","time":"2024/04/18 04:49:23.245433 +0000","caller":"blockio/pipeline.go:495","msg":"SelectivityStats: BLK[0/0=0.0000] COL[0/0=0.0000] RDF[0/0=0.0000,0/0=0.0000]RDD[0s/0s/0s/0]"}
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:49:23.839266 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 127.062µs, Establish: 6.395209ms, UpgradeTLS: 0s, Authenticate: 6.389809ms, SendErrPacket: 0s, SendOKPacket: 20.829µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 6.350926ms","uuid":"63393632-6236-3136-3936-393433626634","session_info":"connectionId 108|10.158.5.33:56818|{account sys:mo_logger: -- 0:0:0}|goRoutineId 765|018eef89-b778-7cba-9080-988b9389a1eb"}
{"level":"INFO","time":"2024/04/18 04:49:23.839503 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"63393632-6236-3136-3936-393433626634","session_info":"connectionId 108|10.158.5.33:56818|{account sys:mo_logger:moadmin -- 0:4294967295:0}|goRoutineId 765|018eef89-b778-7cba-9080-988b9389a1eb"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:49:28.210927 +0000","name":"cn-service.StatsLog","caller":"mometric/stats_log_writer.go:121","msg":"duration: 15000000000, blk hit rate: 0/0=1.0000, entry hit rate: 0/0=1.0000, (average) blks in each reader: 0/0=1.0000","uuid":"63393632-6236-3136-3936-393433626634"}
gc 9 @78.103s 0%: 0.13+4.9+0.002 ms clock, 1.0+0.36/9.7/24+0.023 ms cpu, 211->211->125 MB, 247 MB goal, 0 MB stacks, 0 MB globals, 8 P
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
{"level":"INFO","time":"2024/04/18 04:49:33.245329 +0000","caller":"blockio/pipeline.go:495","msg":"SelectivityStats: BLK[0/0=0.0000] COL[0/0=0.0000] RDF[0/0=0.0000,0/0=0.0000]RDD[0s/0s/0s/0]"}
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
{"level":"INFO","time":"2024/04/18 04:49:43.211519 +0000","name":"cn-service.StatsLog","caller":"mometric/stats_log_writer.go:121","msg":"duration: 15000000000, blk hit rate: 0/0=1.0000, entry hit rate: 0/0=1.0000, (average) blks in each reader: 0/0=1.0000","uuid":"63393632-6236-3136-3936-393433626634"}
{"level":"INFO","time":"2024/04/18 04:49:43.245068 +0000","caller":"blockio/pipeline.go:495","msg":"SelectivityStats: BLK[0/0=0.0000] COL[0/0=0.0000] RDF[0/0=0.0000,0/0=0.0000]RDD[0s/0s/0s/0]"}
gc 10 @93.349s 0%: 0.053+5.1+0.005 ms clock, 0.42+0.064/10/29+0.044 ms cpu, 214->214->124 MB, 252 MB goal, 0 MB stacks, 0 MB globals, 8 P
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
gc 11 @95.643s 0%: 0.032+5.6+0.003 ms clock, 0.26+0.23/11/32+0.026 ms cpu, 212->212->133 MB, 249 MB goal, 0 MB stacks, 0 MB globals, 8 P
cnList Length  2
{"level":"WARN","time":"2024/04/18 04:49:49.445937 +0000","name":"cn-service.morpc","caller":"morpc/backend.go:457","msg":"system is busy, write loop schedule interval is too large","uuid":"63393632-6236-3136-3936-393433626634","interval":"5.585443039s","last-ping-trigger-time":"2024/04/18 04:49:31.477803 +0000","ping-interval":"24s"}
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
{"level":"INFO","time":"2024/04/18 04:49:53.245630 +0000","caller":"blockio/pipeline.go:495","msg":"SelectivityStats: BLK[0/0=0.0000] COL[0/0=0.0000] RDF[0/0=0.0000,0/0=0.0000]RDD[0s/0s/0s/0]"}
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
gc 12 @104.862s 0%: 0.032+8.5+0.015 ms clock, 0.25+0/16/30+0.12 ms cpu, 265->265->163 MB, 266 MB goal, 0 MB stacks, 0 MB globals, 8 P
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
gc 13 @105.072s 0%: 0.030+6.5+0.022 ms clock, 0.24+5.4/12/31+0.18 ms cpu, 323->324->197 MB, 327 MB goal, 0 MB stacks, 0 MB globals, 8 P
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
{"level":"INFO","time":"2024/04/18 04:49:58.183762 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 1, tbl: 272417] succeed"}
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_account[account_id account_name status version suspended_time],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
{"level":"INFO","time":"2024/04/18 04:49:58.186140 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 1, tbl: 272415] succeed"}
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_user[user_id user_name authentication_string default_role],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
{"level":"INFO","time":"2024/04/18 04:49:58.188450 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 1, tbl: 272419] succeed"}
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_role[role_id role_name],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:49:58.196049 +0000","name":"cn-service.frontend","caller":"frontend/session.go:1837","msg":"{account sys:dump:moadmin -- 0:1:0}","uuid":"63393632-6236-3136-3936-393433626634","session_info":"connectionId 109|10.144.0.12:24946|{account sys:dump: -- 0:0:0}|goRoutineId 939|018eef8a-3da5-7ca7-a437-f104f056c2c7","session_id":"018eef8a-3da5-7ca7-a437-f104f056c2c7"}
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:49:58.201514 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 133.981µs, Establish: 19.143758ms, UpgradeTLS: 0s, Authenticate: 19.137556ms, SendErrPacket: 0s, SendOKPacket: 22.925µs, CheckTenant: 2.77323ms, CheckUser: 2.436465ms, CheckRole: 2.167032ms, CheckDbName: 0s, InitGlobalSysVar: 5.396339ms","uuid":"63393632-6236-3136-3936-393433626634","session_info":"connectionId 109|10.144.0.12:24946|{account sys:dump: -- 0:0:0}|goRoutineId 939|018eef8a-3da5-7ca7-a437-f104f056c2c7"}
{"level":"INFO","time":"2024/04/18 04:49:58.202351 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"63393632-6236-3136-3936-393433626634","session_info":"connectionId 109|10.144.0.12:24946|{account sys:dump:moadmin -- 0:1:0}|goRoutineId 939|018eef8a-3da5-7ca7-a437-f104f056c2c7"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge limit -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> limit -> connect to MergeReceiver 0]
    DataSource: [],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
{"level":"INFO","time":"2024/04/18 04:49:58.211002 +0000","name":"cn-service.StatsLog","caller":"mometric/stats_log_writer.go:91","msg":"fs:CN:63393632-6236-3136-3936-393433626634:SHARED","uuid":"63393632-6236-3136-3936-393433626634","FileService.S3.Head":3,"FileService.S3.Put":3}
{"level":"INFO","time":"2024/04/18 04:49:58.211041 +0000","name":"cn-service.StatsLog","caller":"mometric/stats_log_writer.go:121","msg":"duration: 15000000000, blk hit rate: 0/0=1.0000, entry hit rate: 0/0=1.0000, (average) blks in each reader: 0/0=1.0000","uuid":"63393632-6236-3136-3936-393433626634"}
{"level":"ERROR","time":"2024/04/18 04:49:58.830266 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"8c22ea3f-321c-5f1f-c22c-1c02046b59cd","span_id":"f988f93de648dccb"}}
{"level":"INFO","time":"2024/04/18 04:49:58.830442 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 106"}
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:49:58.840793 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 115.785µs, Establish: 6.076542ms, UpgradeTLS: 0s, Authenticate: 6.07115ms, SendErrPacket: 0s, SendOKPacket: 21.122µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 6.033518ms","uuid":"63393632-6236-3136-3936-393433626634","session_info":"connectionId 110|10.158.5.49:41912|{account sys:mo_logger: -- 0:0:0}|goRoutineId 944|018eef8a-4032-702f-986c-b61176084b6c"}
{"level":"INFO","time":"2024/04/18 04:49:58.841106 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"63393632-6236-3136-3936-393433626634","session_info":"connectionId 110|10.158.5.49:41912|{account sys:mo_logger:moadmin -- 0:4294967295:0}|goRoutineId 944|018eef8a-4032-702f-986c-b61176084b6c"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
{"level":"ERROR","time":"2024/04/18 04:49:58.887868 +0000","caller":"types/datetime.go:191","msg":"error: invalid input: invalid datetime value \"\"materielName\"\": \"\"片状电阻\"\""}
{"level":"ERROR","time":"2024/04/18 04:49:58.887911 +0000","caller":"external/external.go:1258","msg":"parse field[\"\"materielName\"\": \"\"片状电阻\"\"] err:invalid input: invalid datetime value \"\"materielName\"\": \"\"片状电阻\"\""}
{"level":"ERROR","time":"2024/04/18 04:49:58.887962 +0000","caller":"external/external.go:1259","msg":"error: internal error: the input value '\"\"materielName\"\": \"\"片状电阻\"\"' is not Datetime type for column 12","span":{"trace_id":"c15baa1a-932a-6a97-1e1e-e2694943189e","span_id":"b5df701914250feb"}}
{"level":"INFO","time":"2024/04/18 04:50:01.169823 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 273003, tbl: 273182] succeed"}
{"level":"INFO","time":"2024/04/18 04:50:01.212786 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 273003, tbl: 273172] succeed"}
{"level":"INFO","time":"2024/04/18 04:50:01.277485 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 273003, tbl: 273173] succeed"}
cnList Length  2
blkNum  1
{"level":"INFO","time":"2024/04/18 04:50:01.279105 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 1, tbl: 272423] succeed"}
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_role_privs[role_id obj_type obj_id privilege_id privilege_level with_grant_option],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1524
Node_TableScan  2
Node_TableScan  1
Node_join  2 2 1
!!!!! dispatch.SendToAllFunc

Scope 1 (Magic: Remote, Receiver: [0, 1(018eef8a-49c1-7a0d-bcb4-7b45274a1e6a)]): [unknown]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
  DataSource: jh_etao_wms.t_materiel[id reel_id part_no stock_num],
}
Scope 2 (Magic: Remote, Receiver: [3, 4]): [unknown]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 3]
  DataSource: jh_etao_wms.t_materiel[id reel_id part_no stock_num],
  Scope 2 (Magic: Merge, Receiver: [2]): [merge -> dispatch to all of MergeReceiver [4]. cross-cn receiver info: [addr: 10.158.5.49:6002, uuid 018eef8a-49c1-7a0d-bcb4-7b45274a1e6a]]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: jh_etao_wms.__mo_index_unique_018eef8a-0e0f-7ed5-a4cd-ec0beced6f79[__mo_index_idx_col __mo_index_pri_col],
  }
}
Node_TableScan  2
Node_join  2 2 2
!!!!! dispatch.SendToAllFunc
!!!!! dispatch.SendToAllFunc

Scope 1 (Magic: Remote, Receiver: [2, 3(018eef8a-49c1-74a7-9846-56218fb13d47)]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [0, 1(018eef8a-49c1-7a0d-bcb4-7b45274a1e6a)]): [unknown -> connect to MergeReceiver 2]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: jh_etao_wms.t_materiel[id reel_id part_no stock_num],
  }
}
Scope 2 (Magic: Remote, Receiver: [9, 10]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [5, 6]): [unknown -> connect to MergeReceiver 9]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 5]
    DataSource: jh_etao_wms.t_materiel[id reel_id part_no stock_num],
    Scope 2 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [6]. cross-cn receiver info: [addr: 10.158.5.49:6002, uuid 018eef8a-49c1-7a0d-bcb4-7b45274a1e6a]]
      PreScopes: {
      Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 4]
      DataSource: jh_etao_wms.__mo_index_unique_018eef8a-0e0f-7ed5-a4cd-ec0beced6f79[__mo_index_idx_col __mo_index_pri_col],
    }
  }
  Scope 2 (Magic: Merge, Receiver: [7, 8]): [merge -> dispatch to all of MergeReceiver [10]. cross-cn receiver info: [addr: 10.158.5.49:6002, uuid 018eef8a-49c1-74a7-9846-56218fb13d47]]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 7]
    DataSource: jh_etao_wms.t_materiel_ext[reel_id cur_position in_timestamp],
    Scope 2 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 8]
    DataSource: jh_etao_wms.t_materiel_ext[reel_id cur_position in_timestamp],
  }
}
Node_AGG  2
!!!!! dispatch.SendToAllFunc
!!!!! dispatch.SendToAllFunc

Scope 1 (Magic: Merge, Receiver: [13]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [11, 12]): [merge group -> projection -> projection -> connect to MergeReceiver 13]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: [2, 3(018eef8a-49c1-74a7-9846-56218fb13d47)]): [join -> group -> connect to MergeReceiver 11]
      PreScopes: {
      Scope 1 (Magic: Remote, Receiver: [0, 1(018eef8a-49c1-7a0d-bcb4-7b45274a1e6a)]): [unknown -> connect to MergeReceiver 2]
        PreScopes: {
        Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
        DataSource: jh_etao_wms.t_materiel[id reel_id part_no stock_num],
      }
    }
    Scope 2 (Magic: Remote, Receiver: [9, 10]): [join -> group -> connect to MergeReceiver 12]
      PreScopes: {
      Scope 1 (Magic: Remote, Receiver: [5, 6]): [unknown -> connect to MergeReceiver 9]
        PreScopes: {
        Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 5]
        DataSource: jh_etao_wms.t_materiel[id reel_id part_no stock_num],
        Scope 2 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [6]. cross-cn receiver info: [addr: 10.158.5.49:6002, uuid 018eef8a-49c1-7a0d-bcb4-7b45274a1e6a]]
          PreScopes: {
          Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 4]
          DataSource: jh_etao_wms.__mo_index_unique_018eef8a-0e0f-7ed5-a4cd-ec0beced6f79[__mo_index_idx_col __mo_index_pri_col],
        }
      }
      Scope 2 (Magic: Merge, Receiver: [7, 8]): [merge -> dispatch to all of MergeReceiver [10]. cross-cn receiver info: [addr: 10.158.5.49:6002, uuid 018eef8a-49c1-74a7-9846-56218fb13d47]]
        PreScopes: {
        Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 7]
        DataSource: jh_etao_wms.t_materiel_ext[reel_id cur_position in_timestamp],
        Scope 2 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 8]
        DataSource: jh_etao_wms.t_materiel_ext[reel_id cur_position in_timestamp],
      }
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Inner Join Prepare 1092
len(s.RemoteReceivRegInfos)  0 0
Inner Join Prepare 1092
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
Inner Join Prepare 1092
ReceiveFromSingleReg 0xc00d56e000
ReceiveFromSingleReg 0xc00d56e120
ReceiveFromSingleReg 0xc00d535a40
len(s.RemoteReceivRegInfos)  0 0
Inner Join Prepare 1092
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 1
range arg.RemoteRegs length 1
PutProcIntoUuidMap 018eef8a-49c1-74a7-9846-56218fb13d47
prepare Remote End
ReceiveFromSingleReg 0xc00d535b60
len(s.RemoteReceivRegInfos)  0 0
Inner Join Prepare 1092
ReceiveFromSingleReg 0xc00d535c80
len(s.RemoteReceivRegInfos)  0 0
Inner Join Prepare 1092
ReceiveFromSingleReg 0xc00d535da0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
Table Scan Free
len(s.RemoteReceivRegInfos)  0 0
Inner Join Prepare 1092
len(s.RemoteReceivRegInfos)  0 0
Inner Join Prepare 1092
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
ReceiveFromSingleReg 0xc00d535ec0
dispatch Prepare  8 0
ReceiveFromSingleReg 0xc00d535560
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
ReceiveFromSingleReg 0xc00bf7dda0
ReceiveFromSingleReg 0xc00bf7dc80
len(s.RemoteReceivRegInfos)  0 0
ReceiveFromSingleReg 0xc00bf7d6e0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
ReceiveFromSingleReg 0xc00bf7da40
len(s.RemoteReceivRegInfos)  0 0
ReceiveFromSingleReg 0xc00d534ae0
ReceiveFromSingleReg 0xc00bf7dec0
ReceiveFromSingleReg 0xc00d56e240
dispatch Prepare  1 1
len(s.RemoteReceivRegInfos)  0 0
range arg.RemoteRegs length 1
ReceiveFromSingleReg 0xc00bf7d800
len(s.RemoteReceivRegInfos)  0 0
ReceiveFromSingleReg 0xc00bf7d920
PutProcIntoUuidMap 018eef8a-49c1-7a0d-bcb4-7b45274a1e6a
prepare Remote End
ReceiveFromSingleReg 0xc00bf7db60
GetProcByUuid 2
?????  1092
GetProcByUuid 2
?????  1092
receiveBatch  true true <nil>
{"level":"INFO","time":"2024/04/18 04:50:01.284257 +0000","name":"cn-backend","caller":"morpc/backend.go:1117","msg":"stream call closed on client","remote":"10.158.5.49:6002","backend-id":"018eef8a-49c2-777a-85a5-553b3d5700fa","stream-id":1}
{"level":"ERROR","time":"2024/04/18 04:50:01.284333 +0000","name":"cn-backend","caller":"morpc/backend.go:572","msg":"read from backend failed","remote":"10.158.5.49:6002","backend-id":"018eef8a-49c2-777a-85a5-553b3d5700fa","error":"read tcp4 10.158.5.50:40566->10.158.5.49:6002: use of closed network connection"}
{"level":"ERROR","time":"2024/04/18 04:50:01.284369 +0000","name":"cn-backend","caller":"morpc/backend.go:576","msg":"read loop stopped","remote":"10.158.5.49:6002","backend-id":"018eef8a-49c2-777a-85a5-553b3d5700fa"}
{"level":"ERROR","time":"2024/04/18 04:50:01.284386 +0000","name":"cn-backend","caller":"v2@v2.0.0-20231122095211-6a25dc9130ca/session.go:515","msg":"close conneciton failed","remote":"10.158.5.49:6002","backend-id":"018eef8a-49c2-777a-85a5-553b3d5700fa","session-id":0,"error":"close tcp4 10.158.5.50:40566->10.158.5.49:6002: use of closed network connection"}
waitRemoteRegsReady len(arg.RemoteRegs) 1
dispatch result.Batch == nil
dispatch Free err  <nil>
????? DeleteUuids [018eef8a-49c1-74a7-9846-56218fb13d47]
after receiveHashMap ReceiveFromSingleReg  true <nil>
ReceiveFromSingleReg 0xc00d56e240
Inner Join Free
err = <-infoToDispatchOperator.Err  <nil>
sendEndMessage Begin
sendEndMessage Write
after receiveHashMap ReceiveFromSingleReg  true <nil>
ReceiveFromSingleReg 0xc00d535c80
Inner Join Free
after receiveHashMap ReceiveFromSingleReg  true <nil>
ReceiveFromSingleReg 0xc00d56e000
Inner Join Free
after receiveHashMap ReceiveFromSingleReg  true <nil>
after receiveHashMap ReceiveFromSingleReg  true <nil>
ReceiveFromSingleReg 0xc00d535b60
Inner Join Free
after receiveHashMap ReceiveFromSingleReg  true <nil>
ReceiveFromSingleReg 0xc00d535da0
Inner Join Free
after receiveHashMap ReceiveFromSingleReg  true <nil>
ReceiveFromSingleReg 0xc00d56e120
ReceiveFromSingleReg 0xc00d535a40
Table Scan Prepare
Inner Join Free
Inner Join Free
after receiveHashMap ReceiveFromSingleReg  true <nil>
Table Scan Free
ReceiveFromSingleReg 0xc00d535ec0
Inner Join Free
waitRemoteRegsReady len(arg.RemoteRegs) 1
dispatch result.Batch == nil
dispatch Free err  <nil>
????? DeleteUuids [018eef8a-49c1-7a0d-bcb4-7b45274a1e6a]
err = <-infoToDispatchOperator.Err  <nil>
sendEndMessage Begin
sendEndMessage Write
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:50:03.245427 +0000","caller":"blockio/pipeline.go:495","msg":"SelectivityStats: BLK[0/0=0.0000] COL[0/0=0.0000] RDF[0/0=0.0000,0/0=0.0000]RDD[0s/0s/0s/0]"}
{"level":"ERROR","time":"2024/04/18 04:50:04.246638 +0000","name":"cn-service","caller":"v2@v2.0.0-20231122095211-6a25dc9130ca/session.go:515","msg":"close conneciton failed","uuid":"63393632-6236-3136-3936-393433626634","name":"pipeline-server","session-id":1,"error":"close tcp4 10.158.5.50:6002->10.158.5.49:47596: use of closed network connection"}
{"level":"ERROR","time":"2024/04/18 04:50:04.246705 +0000","name":"cn-service","caller":"v2@v2.0.0-20231122095211-6a25dc9130ca/session.go:515","msg":"close conneciton failed","uuid":"63393632-6236-3136-3936-393433626634","name":"pipeline-server","session-id":2,"error":"close tcp4 10.158.5.50:6002->10.158.5.49:48056: use of closed network connection"}
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
{"level":"ERROR","time":"2024/04/18 04:50:04.472955 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"09c1ed5d-b86c-45c2-432a-3c3005d2c5fe","span_id":"498dba32692f829a"}}
{"level":"INFO","time":"2024/04/18 04:50:04.473054 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 107"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:50:05.256116 +0000","name":"cn-service.ETLMerge","caller":"export/merge.go:687","msg":"start merge","uuid":"63393632-6236-3136-3936-393433626634","args":"","start":"2024/04/18 04:50:05.256111 +0000","taskID":2,"create":1713415800012,"metadataID":"ETLMergeTask:1","span":{"trace_id":"e21b9fb4-3b5f-d98a-9322-10dc7f397f7f","span_id":"a0a469df20a2373c"}}
{"level":"INFO","time":"2024/04/18 04:50:05.256188 +0000","name":"cn-service.ETLMerge","caller":"export/merge.go:655","msg":"start LongRunETLMerge","uuid":"63393632-6236-3136-3936-393433626634","span":{"trace_id":"e21b9fb4-3b5f-d98a-9322-10dc7f397f7f","span_id":"a0a469df20a2373c"}}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:50:05.609840 +0000","name":"cn-service.ETLMerge","caller":"export/merge.go:247","msg":"start merge","uuid":"63393632-6236-3136-3936-393433626634","table":"system.statement_info","path":"sys/logs/2024/04/18/statement_info","metadata.ID":"ETLMergeTask:1","span":{"trace_id":"e21b9fb4-3b5f-d98a-9322-10dc7f397f7f","span_id":"a0a469df20a2373c"}}
{"level":"INFO","time":"2024/04/18 04:50:05.943575 +0000","caller":"export/merge.go:442","msg":"upload files success","table":"system.statement_info","file count":1}
{"level":"INFO","time":"2024/04/18 04:50:06.103246 +0000","name":"cn-service.ETLMerge","caller":"export/merge.go:247","msg":"start merge","uuid":"63393632-6236-3136-3936-393433626634","table":"system.rawlog","path":"sys/logs/2024/04/18/rawlog","metadata.ID":"ETLMergeTask:1","span":{"trace_id":"e21b9fb4-3b5f-d98a-9322-10dc7f397f7f","span_id":"a0a469df20a2373c"}}
gc 14 @116.480s 0%: 0.035+6.0+0.002 ms clock, 0.28+0.30/11/34+0.023 ms cpu, 391->391->145 MB, 395 MB goal, 0 MB stacks, 0 MB globals, 8 P
gc 15 @118.467s 0%: 0.055+6.8+0.003 ms clock, 0.44+0.084/12/37+0.025 ms cpu, 286->286->144 MB, 291 MB goal, 0 MB stacks, 0 MB globals, 8 P
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
{"level":"ERROR","time":"2024/04/18 04:50:08.844514 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"98edddf7-d4b3-eae5-fd89-a24500d2fa1a","span_id":"650a570a1f4a709a"}}
{"level":"INFO","time":"2024/04/18 04:50:08.844617 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 108"}
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
{"level":"INFO","time":"2024/04/18 04:50:10.257196 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 272389, tbl: 272395] succeed"}
{"level":"INFO","time":"2024/04/18 04:50:10.259307 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 272389, tbl: 272396] succeed"}
{"level":"INFO","time":"2024/04/18 04:50:10.261379 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 272389, tbl: 272397] succeed"}
{"level":"INFO","time":"2024/04/18 04:50:10.263335 +0000","caller":"disttae/logtail_consumer.go:743","msg":"[logtail-consumer] subscribe tbl[db: 272389, tbl: 272398] succeed"}
cnList Length  2
blkNum  5
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eef88-9a7f-7d51-91ea-1c6ea8f6c08f[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eef88-9a7b-7f00-81de-c2c93f55383f[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eef88-9a77-7311-8223-de728421aba8[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eef88-9a75-7aa3-9909-8944b273eb86[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
{"level":"INFO","time":"2024/04/18 04:50:10.265991 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:549","msg":"bind created","uuid":"63393632-6236-3136-3936-393433626634","service":"171341569323978639363393632-6236-3136-3936-393433626634","remote":true,"bind":"4482776571176848245-171341568982252908831646437-3334-3835-6466-336534663039-1"}
{"level":"INFO","time":"2024/04/18 04:50:10.266853 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:549","msg":"bind created","uuid":"63393632-6236-3136-3936-393433626634","service":"171341569323978639363393632-6236-3136-3936-393433626634","remote":true,"bind":"16792862988525801751-171341568982252908831646437-3334-3835-6466-336534663039-1"}
{"level":"INFO","time":"2024/04/18 04:50:10.267438 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:549","msg":"bind created","uuid":"63393632-6236-3136-3936-393433626634","service":"171341569323978639363393632-6236-3136-3936-393433626634","remote":true,"bind":"16046276445983473769-171341568982252908831646437-3334-3835-6466-336534663039-1"}
{"level":"INFO","time":"2024/04/18 04:50:10.268029 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:549","msg":"bind created","uuid":"63393632-6236-3136-3936-393433626634","service":"171341569323978639363393632-6236-3136-3936-393433626634","remote":true,"bind":"11534000264129595126-171341568982252908831646437-3334-3835-6466-336534663039-1"}
{"level":"INFO","time":"2024/04/18 04:50:10.268604 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:549","msg":"bind created","uuid":"63393632-6236-3136-3936-393433626634","service":"171341569323978639363393632-6236-3136-3936-393433626634","remote":true,"bind":"6470569162915880109-171341568982252908831646437-3334-3835-6466-336534663039-1"}
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eef88-9a77-7311-8223-de728421aba8[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
dispatch Prepare  6 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eef88-9a7b-7f00-81de-c2c93f55383f[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eef88-9a75-7aa3-9909-8944b273eb86[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 105256

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eef88-9a7f-7d51-91ea-1c6ea8f6c08f[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 105256
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
ReceiveFromSingleReg 0xc009c96840
ReceiveFromSingleReg 0xc009eb2f00
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 105256
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
ReceiveFromSingleReg 0xc00bc30360
ReceiveFromSingleReg 0xc0084c1920
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
ReceiveFromSingleReg 0xc00a8f1800
ReceiveFromSingleReg 0xc00a8f1ce0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 105256
ReceiveFromSingleReg 0xc00be7e4e0
len(s.RemoteReceivRegInfos)  0 0
ReceiveFromSingleReg 0xc009eb3620
dispatch Prepare  2 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
{"level":"INFO","time":"2024/04/18 04:50:10.269641 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:549","msg":"bind created","uuid":"63393632-6236-3136-3936-393433626634","service":"171341569323978639363393632-6236-3136-3936-393433626634","remote":true,"bind":"272390-171341568982252908831646437-3334-3835-6466-336534663039-1"}
Table Scan Free
ReceiveFromSingleReg 0xc00a8f1ce0
ReceiveFromSingleReg 0xc009eb3620
ReceiveFromSingleReg 0xc009eb2f00
after receiveHashMap ReceiveFromSingleReg  false <nil>
ReceiveFromSingleReg 0xc009c96840
ReceiveFromSingleReg 0xc009c96840
after receiveHashMap ReceiveFromSingleReg  false <nil>
ReceiveFromSingleReg 0xc0084c1920
ReceiveFromSingleReg 0xc0084c1920
ReceiveFromSingleReg 0xc009eb35c0
after receiveHashMap ReceiveFromSingleReg  false <nil>
ReceiveFromSingleReg 0xc00bc30360
ReceiveFromSingleReg 0xc00bc30360
ReceiveFromSingleReg 0xc009eb2ea0
ReceiveFromSingleReg 0xc00a8f1c80
Table Scan Prepare
{"level":"INFO","time":"2024/04/18 04:50:10.270278 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:276","msg":"try to get columns","uuid":"63393632-6236-3136-3936-393433626634","tableId":272390,"txn":"018eef8a6cde758d9b4cc5054d74e0c0/Active/S:1713415810269002822-1"}
Table Scan Prepare
Table Scan Free
Table Scan Free
Table Scan Prepare
ReceiveFromSingleReg 0xc009eb35c0
Inner Join Free
ReceiveFromSingleReg 0xc00a8f1c80
Inner Join Free
Table Scan Free
ReceiveFromSingleReg 0xc00a8f1800
ReceiveFromSingleReg 0xc009eb2ea0
Inner Join Free
after receiveHashMap ReceiveFromSingleReg  false <nil>
ReceiveFromSingleReg 0xc00be7e4e0
ReceiveFromSingleReg 0xc00be7e4e0
ReceiveFromSingleReg 0xc00a8f17a0
Table Scan Prepare
Table Scan Free
ReceiveFromSingleReg 0xc00a8f17a0
Inner Join Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
{"level":"INFO","time":"2024/04/18 04:50:10.270774 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:549","msg":"bind created","uuid":"63393632-6236-3136-3936-393433626634","service":"171341569323978639363393632-6236-3136-3936-393433626634","remote":true,"bind":"272397-171341568982252908831646437-3334-3835-6466-336534663039-1"}
{"level":"INFO","time":"2024/04/18 04:50:10.270782 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:549","msg":"bind created","uuid":"63393632-6236-3136-3936-393433626634","service":"171341569323978639363393632-6236-3136-3936-393433626634","remote":true,"bind":"272395-171341568982252908831646437-3334-3835-6466-336534663039-1"}
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:50:10.270780 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:549","msg":"bind created","uuid":"63393632-6236-3136-3936-393433626634","service":"171341569323978639363393632-6236-3136-3936-393433626634","remote":true,"bind":"272396-171341568982252908831646437-3334-3835-6466-336534663039-1"}
{"level":"INFO","time":"2024/04/18 04:50:10.270891 +0000","name":"cn-service.lockservice","caller":"lockservice/service.go:549","msg":"bind created","uuid":"63393632-6236-3136-3936-393433626634","service":"171341569323978639363393632-6236-3136-3936-393433626634","remote":true,"bind":"272398-171341568982252908831646437-3334-3835-6466-336534663039-1"}
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [lockop -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 0]
    DataSource: mo_catalog.mo_increment_columns[table_id col_name offset step __mo_cpkey_col],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_increment_columns[table_id col_name col_index offset step __mo_cpkey_col __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
Table Scan Prepare

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:50:10.276813 +0000","name":"cn-service.incrservice","caller":"incrservice/service.go:251","msg":"auto increment cache created","uuid":"63393632-6236-3136-3936-393433626634","table-id":272390,"txn":""}
gc 16 @120.294s 0%: 0.030+6.9+0.035 ms clock, 0.24+0.51/13/36+0.28 ms cpu, 287->287->142 MB, 288 MB goal, 0 MB stacks, 0 MB globals, 8 P
{"level":"INFO","time":"2024/04/18 04:50:11.242969 +0000","caller":"export/merge.go:442","msg":"upload files success","table":"system.rawlog","file count":83}
{"level":"INFO","time":"2024/04/18 04:50:11.395088 +0000","name":"cn-service.ETLMerge","caller":"export/merge.go:247","msg":"start merge","uuid":"63393632-6236-3136-3936-393433626634","table":"system_metrics.metric","path":"sys/logs/2024/04/18/metric","metadata.ID":"ETLMergeTask:1","span":{"trace_id":"e21b9fb4-3b5f-d98a-9322-10dc7f397f7f","span_id":"a0a469df20a2373c"}}
gc 17 @122.304s 0%: 0.035+6.7+0.003 ms clock, 0.28+0.23/13/36+0.025 ms cpu, 280->280->141 MB, 285 MB goal, 0 MB stacks, 0 MB globals, 8 P
{"level":"INFO","time":"2024/04/18 04:50:13.211184 +0000","name":"cn-service.StatsLog","caller":"mometric/stats_log_writer.go:91","msg":"fs:CN:63393632-6236-3136-3936-393433626634:SHARED","uuid":"63393632-6236-3136-3936-393433626634","FileService Cache Hit Rate":0.6666666666666666,"FileService Cache Disk Hit Rate":0.6666666666666666,"FileService.S3.Get":2,"FileService.Cache.Read":6,"FileService.Cache.Hit":4,"FileService.Cache.Disk.Read":6,"FileService.Cache.Disk.Hit":4,"FileService.Cache.Disk.OpenIOEntryFile":4}
{"level":"INFO","time":"2024/04/18 04:50:13.211248 +0000","name":"cn-service.StatsLog","caller":"mometric/stats_log_writer.go:91","msg":"fs:CN:63393632-6236-3136-3936-393433626634:ETL","uuid":"63393632-6236-3136-3936-393433626634","FileService.S3.List":27,"FileService.S3.Get":117,"FileService.S3.Delete":116}
{"level":"INFO","time":"2024/04/18 04:50:13.211267 +0000","name":"cn-service.StatsLog","caller":"mometric/stats_log_writer.go:121","msg":"duration: 15000000000, blk hit rate: 0/0=1.0000, entry hit rate: 0/0=1.0000, (average) blks in each reader: 0/0=1.0000","uuid":"63393632-6236-3136-3936-393433626634"}
{"level":"INFO","time":"2024/04/18 04:50:13.211546 +0000","name":"cn-service.MOCollector","caller":"export/batch_processor.go:638","msg":"stats","uuid":"63393632-6236-3136-3936-393433626634","MODiscardable":true,"MaxBufferCnt":2147483647,"TotalBufferCnt":2,"QueueLength":0,"rawlogBufferCnt":1,"rawlogDiscardCnt":0,"statement_infoBufferCnt":1,"statement_infoDiscardCnt":0}
{"level":"INFO","time":"2024/04/18 04:50:13.244827 +0000","caller":"blockio/pipeline.go:495","msg":"SelectivityStats: BLK[0/0=0.0000] COL[0/0=0.0000] RDF[0/0=0.0000,0/0=0.0000]RDD[0s/0s/0s/0]"}
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
gc 18 @123.823s 0%: 0.067+6.8+0.052 ms clock, 0.53+0.30/13/36+0.42 ms cpu, 280->280->142 MB, 284 MB goal, 0 MB stacks, 0 MB globals, 8 P
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Prepare
Table Scan Free
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:50:15.261533 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 151.094µs, Establish: 6.696535ms, UpgradeTLS: 0s, Authenticate: 6.689693ms, SendErrPacket: 0s, SendOKPacket: 10.311µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 6.658222ms","uuid":"63393632-6236-3136-3936-393433626634","session_info":"connectionId 111|10.158.5.50:36588|{account sys:8cf1a8f5-9a65-4066-8295-9b248abbd2f9: -- 0:0:0}|goRoutineId 2550|018eef8a-8056-7a53-b3b6-75ead4c1b9a8"}
{"level":"INFO","time":"2024/04/18 04:50:15.261687 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"63393632-6236-3136-3936-393433626634","session_info":"connectionId 111|10.158.5.50:36588|{account sys:8cf1a8f5-9a65-4066-8295-9b248abbd2f9:moadmin -- 0:4294967295:0}|goRoutineId 2550|018eef8a-8056-7a53-b3b6-75ead4c1b9a8"}
{"level":"ERROR","time":"2024/04/18 04:50:15.261834 +0000","caller":"frontend/mysql_cmd_executor.go:4620","msg":"error: internal error: !!!COM_QUIT!!!","span":{"trace_id":"d8c2aea1-56f9-0676-d113-c6edd49e8c0c","span_id":"e8a971742d12cea9"}}
{"level":"ERROR","time":"2024/04/18 04:50:15.261869 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:291","msg":"Failed to execute request","uuid":"63393632-6236-3136-3936-393433626634","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 111|10.158.5.50:36588|{account sys:8cf1a8f5-9a65-4066-8295-9b248abbd2f9:moadmin -- 0:4294967295:0}|goRoutineId 2550|018eef8a-8056-7a53-b3b6-75ead4c1b9a8","session_id":"018eef8a-8056-7a53-b3b6-75ead4c1b9a8"}
{"level":"ERROR","time":"2024/04/18 04:50:15.261903 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:534","msg":"Error occurred","uuid":"63393632-6236-3136-3936-393433626634","error":"internal error: !!!COM_QUIT!!!","session_info":"connectionId 111|10.158.5.50:36588|{account sys:8cf1a8f5-9a65-4066-8295-9b248abbd2f9:moadmin -- 0:4294967295:0}|goRoutineId 2550|018eef8a-8056-7a53-b3b6-75ead4c1b9a8","session_id":"018eef8a-8056-7a53-b3b6-75ead4c1b9a8"}
{"level":"INFO","time":"2024/04/18 04:50:15.261964 +0000","caller":"frontend/routine.go:351","msg":"set query status on the connection 111"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  5
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eef88-9a7f-7d51-91ea-1c6ea8f6c08f[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eef88-9a7b-7f00-81de-c2c93f55383f[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eef88-9a77-7311-8223-de728421aba8[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eef88-9a75-7aa3-9909-8944b273eb86[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eef88-9a7b-7f00-81de-c2c93f55383f[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eef88-9a77-7311-8223-de728421aba8[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eef88-9a75-7aa3-9909-8944b273eb86[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 105264

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eef88-9a7f-7d51-91ea-1c6ea8f6c08f[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
ReceiveFromSingleReg 0xc007a83680
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at __mo_rowid],
}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 105264
ReceiveFromSingleReg 0xc0094c8c60
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 105264
ReceiveFromSingleReg 0xc00bc31440
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Inner Join Prepare 105264
dispatch Prepare  1 0
ReceiveFromSingleReg 0xc0094c83c0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  6 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
ReceiveFromSingleReg 0xc00791f1a0
Table Scan Prepare
len(s.RemoteReceivRegInfos)  0 0
ReceiveFromSingleReg 0xc00791e660
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
ReceiveFromSingleReg 0xc00791eb40
ReceiveFromSingleReg 0xc00791f800
Table Scan Free
ReceiveFromSingleReg 0xc00791f800
after receiveHashMap ReceiveFromSingleReg  false <nil>
ReceiveFromSingleReg 0xc007a83680
ReceiveFromSingleReg 0xc007a83680
ReceiveFromSingleReg 0xc00791f7a0
ReceiveFromSingleReg 0xc00791e660
Table Scan Prepare
ReceiveFromSingleReg 0xc00791f1a0
ReceiveFromSingleReg 0xc00791eb40
after receiveHashMap ReceiveFromSingleReg  false <nil>
ReceiveFromSingleReg 0xc0094c8c60
ReceiveFromSingleReg 0xc0094c8c60
after receiveHashMap ReceiveFromSingleReg  false <nil>
ReceiveFromSingleReg 0xc00bc31440
ReceiveFromSingleReg 0xc00bc31440
ReceiveFromSingleReg 0xc00791f140
Table Scan Free
after receiveHashMap ReceiveFromSingleReg  false <nil>
ReceiveFromSingleReg 0xc0094c83c0
ReceiveFromSingleReg 0xc0094c83c0
ReceiveFromSingleReg 0xc00791eae0
ReceiveFromSingleReg 0xc00791e600
Table Scan Prepare
Table Scan Prepare
Table Scan Prepare
Table Scan Free
ReceiveFromSingleReg 0xc00791f7a0
Table Scan Free
Table Scan Free
Inner Join Free
ReceiveFromSingleReg 0xc00791e600
Inner Join Free
ReceiveFromSingleReg 0xc00791f140
Inner Join Free
ReceiveFromSingleReg 0xc00791eae0
Inner Join Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
gc 19 @125.495s 0%: 0.030+6.4+0.002 ms clock, 0.24+0.49/12/35+0.022 ms cpu, 284->285->143 MB, 286 MB goal, 0 MB stacks, 0 MB globals, 8 P
{"level":"INFO","time":"2024/04/18 04:50:15.784961 +0000","caller":"export/merge.go:442","msg":"upload files success","table":"system_metrics.metric","file count":79}
{"level":"INFO","time":"2024/04/18 04:50:15.785011 +0000","name":"cn-service.ETLMerge","caller":"export/merge.go:697","msg":"done merge","uuid":"63393632-6236-3136-3936-393433626634","args":"","start":"2024/04/18 04:50:05.256111 +0000","taskID":2,"create":1713415800012,"metadataID":"ETLMergeTask:1","span":{"trace_id":"e21b9fb4-3b5f-d98a-9322-10dc7f397f7f","span_id":"a0a469df20a2373c"}}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  5
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eef88-9a7f-7d51-91ea-1c6ea8f6c08f[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eef88-9a7b-7f00-81de-c2c93f55383f[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eef88-9a77-7311-8223-de728421aba8[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
Node_join  1 1 1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Remote, Receiver: [2, 3]): [join]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
  DataSource: mo_task.__mo_index_secondary_018eef88-9a75-7aa3-9909-8944b273eb86[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
    PreScopes: {
    Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
  }
}
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eef88-9a7f-7d51-91ea-1c6ea8f6c08f[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 105290
!!!!! dispatch.SendToAllLocalFunc
ReceiveFromSingleReg 0xc007f7ab40
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eef88-9a7b-7f00-81de-c2c93f55383f[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 105290

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown, unknown, unknown, unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at __mo_rowid],
}
!!!!! dispatch.SendToAllLocalFunc
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  6 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eef88-9a77-7311-8223-de728421aba8[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> projection -> pre insert 2nd -> lockop -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [4]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: [2, 3]): [join -> connect to MergeReceiver 4]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> connect to MergeReceiver 2]
    DataSource: mo_task.__mo_index_secondary_018eef88-9a75-7aa3-9909-8944b273eb86[__mo_index_idx_col __mo_index_pri_col __mo_rowid],
    Scope 2 (Magic: Merge, Receiver: [1]): [merge -> dispatch to all of MergeReceiver [3].]
      PreScopes: {
      Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
    }
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 2
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
ReceiveFromSingleReg 0xc007f7ad20

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> lockop -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
ReceiveFromSingleReg 0xc007923680
len(s.RemoteReceivRegInfos)  0 0
ReceiveFromSingleReg 0xc007923b60
dispatch Prepare  2 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Inner Join Prepare 105290
len(s.RemoteReceivRegInfos)  0 2
Inner Join Prepare 105290
ReceiveFromSingleReg 0xc007d3d2c0
len(s.RemoteReceivRegInfos)  0 0
ReceiveFromSingleReg 0xc007f7b200
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
dispatch Prepare  1 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
ReceiveFromSingleReg 0xc00272e5a0
dispatch Prepare  1 0
Table Scan Prepare
ReceiveFromSingleReg 0xc008addc20
len(s.RemoteReceivRegInfos)  0 0
Table Scan Free
ReceiveFromSingleReg 0xc008addc20
ReceiveFromSingleReg 0xc007923680
after receiveHashMap ReceiveFromSingleReg  false <nil>
ReceiveFromSingleReg 0xc007f7b200
ReceiveFromSingleReg 0xc007f7b200
ReceiveFromSingleReg 0xc008addbc0
Table Scan Prepare
ReceiveFromSingleReg 0xc00272e5a0
after receiveHashMap ReceiveFromSingleReg  false <nil>
ReceiveFromSingleReg 0xc007f7ab40
ReceiveFromSingleReg 0xc007f7ab40
ReceiveFromSingleReg 0xc007923620
after receiveHashMap ReceiveFromSingleReg  false <nil>
ReceiveFromSingleReg 0xc007d3d2c0
ReceiveFromSingleReg 0xc007d3d2c0
ReceiveFromSingleReg 0xc007923b60
ReceiveFromSingleReg 0xc008addbc0
Table Scan Prepare
after receiveHashMap ReceiveFromSingleReg  false <nil>
ReceiveFromSingleReg 0xc007f7ad20
ReceiveFromSingleReg 0xc007f7ad20
Table Scan Free
Inner Join Free
Table Scan Prepare
Table Scan Free
ReceiveFromSingleReg 0xc007923b00
Table Scan Prepare
Table Scan Free
ReceiveFromSingleReg 0xc00272e540
ReceiveFromSingleReg 0xc007923620
Inner Join Free
Table Scan Free
ReceiveFromSingleReg 0xc007923b00
Inner Join Free
ReceiveFromSingleReg 0xc00272e540
Inner Join Free
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:50:19.455142 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 126.208µs, Establish: 6.83077ms, UpgradeTLS: 0s, Authenticate: 6.816591ms, SendErrPacket: 0s, SendOKPacket: 22.833µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 6.776386ms","uuid":"63393632-6236-3136-3936-393433626634","session_info":"connectionId 112|10.158.5.42:37254|{account sys:mo_logger: -- 0:0:0}|goRoutineId 2756|018eef8a-90b8-7101-8d5c-8c62f1ea223b"}
{"level":"INFO","time":"2024/04/18 04:50:19.455348 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"63393632-6236-3136-3936-393433626634","session_info":"connectionId 112|10.158.5.42:37254|{account sys:mo_logger:moadmin -- 0:4294967295:0}|goRoutineId 2756|018eef8a-90b8-7101-8d5c-8c62f1ea223b"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
{"level":"WARN","time":"2024/04/18 04:50:19.456417 +0000","name":"cn-service.morpc","caller":"morpc/backend.go:457","msg":"system is busy, write loop schedule interval is too large","uuid":"63393632-6236-3136-3936-393433626634","interval":"5.625405276s","last-ping-trigger-time":"0001/01/01 00:00:00.000000 +0000","ping-interval":"24s"}
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
{"level":"WARN","time":"2024/04/18 04:50:19.478618 +0000","name":"cn-service.morpc","caller":"morpc/backend.go:457","msg":"system is busy, write loop schedule interval is too large","uuid":"63393632-6236-3136-3936-393433626634","interval":"18.196521143s","last-ping-trigger-time":"2024/04/18 04:50:19.478611 +0000","ping-interval":"24s"}
{"level":"INFO","time":"2024/04/18 04:50:23.245335 +0000","caller":"blockio/pipeline.go:495","msg":"SelectivityStats: BLK[0/0=0.0000] COL[0/0=0.0000] RDF[0/0=0.0000,0/0=0.0000]RDD[0s/0s/0s/0]"}
cnList Length  2
blkNum  1
Node_TableScan  1
!!!!! dispatch.SendToAllLocalFunc

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> projection -> insert]
len(s.RemoteReceivRegInfos)  0 0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> dispatch to all of MergeReceiver [unknown, unknown].]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> projection -> lockop -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[configuration_id account_id account_name dat_name variable_name variable_value system_variables __mo_rowid],
}

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> delete]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> connect to MergeReceiver 1]
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  2 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> projection -> connect to MergeReceiver 0]
  DataSource: mo_catalog.mo_mysql_compatibility_mode[account_id variable_name variable_value system_variables],
}
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
{"level":"INFO","time":"2024/04/18 04:50:23.842288 +0000","name":"cn-service.frontend","caller":"frontend/routine_manager.go:507","msg":"mo accept connection, time cost of Created: 132.02µs, Establish: 6.771857ms, UpgradeTLS: 0s, Authenticate: 6.766146ms, SendErrPacket: 0s, SendOKPacket: 21.339µs, CheckTenant: 0s, CheckUser: 0s, CheckRole: 0s, CheckDbName: 0s, InitGlobalSysVar: 6.726823ms","uuid":"63393632-6236-3136-3936-393433626634","session_info":"connectionId 113|10.158.5.33:57402|{account sys:mo_logger: -- 0:0:0}|goRoutineId 2852|018eef8a-a1da-7a4d-93be-1127fdf85f14"}
{"level":"INFO","time":"2024/04/18 04:50:23.842511 +0000","name":"cn-service.frontend","caller":"frontend/routine.go:274","msg":"mo received first request","uuid":"63393632-6236-3136-3936-393433626634","session_info":"connectionId 113|10.158.5.33:57402|{account sys:mo_logger:moadmin -- 0:4294967295:0}|goRoutineId 2852|018eef8a-a1da-7a4d-93be-1127fdf85f14"}
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: MergeInsert, Receiver: [8, 9, 10, 11, 12, 13, 14, 15]): [merge -> merge block]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 8]
    PreScopes: {
    Scope 1 (Magic: Normal, Receiver: []): [external -> dispatch to any of MergeReceiver [0, 1, 2, 3, 4, 5, 6, 7].]
    DataSource: [],
  }
  Scope 2 (Magic: Merge, Receiver: [1]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 9]
  Scope 3 (Magic: Merge, Receiver: [2]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 10]
  Scope 4 (Magic: Merge, Receiver: [3]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 11]
  Scope 5 (Magic: Merge, Receiver: [4]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 12]
  Scope 6 (Magic: Merge, Receiver: [5]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 13]
  Scope 7 (Magic: Merge, Receiver: [6]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 14]
  Scope 8 (Magic: Merge, Receiver: [7]): [merge -> projection -> projection -> pre insert -> insert -> connect to MergeReceiver 15]
}
len(s.RemoteReceivRegInfos)  0 13
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
dispatch Prepare  8 0
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge top -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> top -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_async_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option task_parent_id task_status task_runner task_epoch last_heartbeat result_code error_msg create_at end_at],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
cnList Length  2
blkNum  0

Scope 1 (Magic: Merge, Receiver: [0]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Normal, Receiver: []): [projection -> projection -> connect to MergeReceiver 0]
  DataSource: [],
}
len(s.RemoteReceivRegInfos)  0 0
cnList Length  2
blkNum  1
Node_TableScan  1

Scope 1 (Magic: Merge, Receiver: [1]): [merge -> output]
  PreScopes: {
  Scope 1 (Magic: Merge, Receiver: [0]): [merge order -> projection -> projection -> connect to MergeReceiver 1]
    PreScopes: {
    Scope 1 (Magic: Remote, Receiver: []): [restrict -> projection -> order -> connect to MergeReceiver 0]
    DataSource: mo_task.sys_daemon_task[task_id task_metadata_id task_metadata_executor task_metadata_context task_metadata_option account_id account task_type task_runner task_status last_heartbeat create_at update_at end_at last_run details],
  }
}
len(s.RemoteReceivRegInfos)  0 0
len(s.RemoteReceivRegInfos)  0 0
Table Scan Prepare
Table Scan Free
